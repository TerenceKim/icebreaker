ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"VolumeControl.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.DmaIntHandler,"ax",%progbits
  20              		.align	2
  21              		.global	DmaIntHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	DmaIntHandler, %function
  25              	DmaIntHandler:
  26              	.LFB34:
  27              		.file 1 "VolumeControl.c"
   1:VolumeControl.c **** /* ========================================
   2:VolumeControl.c ****  *
   3:VolumeControl.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:VolumeControl.c ****  * All Rights Reserved
   5:VolumeControl.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:VolumeControl.c ****  *
   7:VolumeControl.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:VolumeControl.c ****  * WHICH IS THE PROPERTY OF your company.
   9:VolumeControl.c ****  *
  10:VolumeControl.c ****  * ========================================
  11:VolumeControl.c **** */
  12:VolumeControl.c **** #include "VolumeControl.h"
  13:VolumeControl.c **** #include <Config.h>
  14:VolumeControl.c **** #include <Application.h>
  15:VolumeControl.c **** #include <ADC.h>
  16:VolumeControl.c **** #include <DMA.h>
  17:VolumeControl.c **** #include <Codec.h>
  18:VolumeControl.c **** //#include <USBFS.h>
  19:VolumeControl.c **** 
  20:VolumeControl.c **** int32 ADC_MIN_READING[vol_ctrl_both] = { -2, -2 };
  21:VolumeControl.c **** int32 ADC_MAX_READING[vol_ctrl_both] = { 2047, 2047 };
  22:VolumeControl.c **** 
  23:VolumeControl.c **** #define ADC_READING_RANGE(side)       (ADC_MAX_READING[side] - ADC_MIN_READING[side])
  24:VolumeControl.c **** 
  25:VolumeControl.c **** /* ADC measurement status and result */
  26:VolumeControl.c **** int16   adcSample[vol_ctrl_both] = { 0, 0 };
  27:VolumeControl.c **** 
  28:VolumeControl.c **** CY_ISR(DmaIntHandler)
  29:VolumeControl.c **** {
  28              		.loc 1 29 0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 2


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  30:VolumeControl.c ****     // Do nothing
  31:VolumeControl.c **** }
  33              		.loc 1 31 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE34:
  38              		.size	DmaIntHandler, .-DmaIntHandler
  39 0002 C046     		.section	.text.VolumeControlInit,"ax",%progbits
  40              		.align	2
  41              		.global	VolumeControlInit
  42              		.code	16
  43              		.thumb_func
  44              		.type	VolumeControlInit, %function
  45              	VolumeControlInit:
  46              	.LFB35:
  32:VolumeControl.c **** 
  33:VolumeControl.c **** void VolumeControlInit(void)
  34:VolumeControl.c **** {
  47              		.loc 1 34 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51 0000 10B5     		push	{r4, lr}
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 4, -8
  54              		.cfi_offset 14, -4
  35:VolumeControl.c ****     /* Initialize ADC. Conversion is not enabled yet. */
  36:VolumeControl.c ****     ADC_Start();
  55              		.loc 1 36 0
  56 0002 FFF7FEFF 		bl	ADC_Start
  57              	.LVL0:
  37:VolumeControl.c **** 
  38:VolumeControl.c ****     /* Configure DMA source and destination locations to transfer from
  39:VolumeControl.c ****     * ADC data register to memory variable.
  40:VolumeControl.c ****     */
  41:VolumeControl.c ****     DMA_Start((void *)ADC_SAR_CHAN0_RESULT_PTR, (void *)adcSample);
  58              		.loc 1 41 0
  59 0006 0549     		ldr	r1, .L3
  60 0008 0548     		ldr	r0, .L3+4
  61 000a FFF7FEFF 		bl	DMA_Start
  62              	.LVL1:
  63              	.LBB4:
  64              	.LBB5:
  65              		.file 2 "Generated_Source\\PSoC4/DMA.h"
   1:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
   2:Generated_Source\PSoC4/DMA.h **** * File Name: DMA.h
   3:Generated_Source\PSoC4/DMA.h **** * Version 1.0
   4:Generated_Source\PSoC4/DMA.h **** *
   5:Generated_Source\PSoC4/DMA.h **** * Description:
   6:Generated_Source\PSoC4/DMA.h **** *  This file provides DMA channel defines and API function definitions.
   7:Generated_Source\PSoC4/DMA.h **** *
   8:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 3


   9:Generated_Source\PSoC4/DMA.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC4/DMA.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/DMA.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/DMA.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/DMA.h **** 
  15:Generated_Source\PSoC4/DMA.h **** #ifndef CY_DMA_CHANNEL_DMA_H
  16:Generated_Source\PSoC4/DMA.h **** #define CY_DMA_CHANNEL_DMA_H
  17:Generated_Source\PSoC4/DMA.h **** 
  18:Generated_Source\PSoC4/DMA.h **** #include "CyDMA.h"
  19:Generated_Source\PSoC4/DMA.h **** 
  20:Generated_Source\PSoC4/DMA.h ****     
  21:Generated_Source\PSoC4/DMA.h **** /***************************************
  22:Generated_Source\PSoC4/DMA.h **** *   Conditional Compilation Parameters
  23:Generated_Source\PSoC4/DMA.h **** ***************************************/
  24:Generated_Source\PSoC4/DMA.h **** 
  25:Generated_Source\PSoC4/DMA.h **** #define DMA_CHANNEL           (DMA__CHANNEL_NUMBER)
  26:Generated_Source\PSoC4/DMA.h **** #define DMA_CHANNEL_MASK      ((uint32)(1UL << DMA_CHANNEL))
  27:Generated_Source\PSoC4/DMA.h **** 
  28:Generated_Source\PSoC4/DMA.h **** 
  29:Generated_Source\PSoC4/DMA.h **** /***************************************
  30:Generated_Source\PSoC4/DMA.h **** *        Function Prototypes
  31:Generated_Source\PSoC4/DMA.h **** ***************************************/
  32:Generated_Source\PSoC4/DMA.h **** 
  33:Generated_Source\PSoC4/DMA.h **** /* Functions specific to this DMA channel */
  34:Generated_Source\PSoC4/DMA.h **** void DMA_Init(void);
  35:Generated_Source\PSoC4/DMA.h **** void DMA_Start(void * srcAddress, void * dstAddress);
  36:Generated_Source\PSoC4/DMA.h **** 
  37:Generated_Source\PSoC4/DMA.h **** /* Inline functions that call global API functions */
  38:Generated_Source\PSoC4/DMA.h **** static void   DMA_ChEnable(void);
  39:Generated_Source\PSoC4/DMA.h **** static void   DMA_ChDisable(void);
  40:Generated_Source\PSoC4/DMA.h **** static void   DMA_Trigger(void);
  41:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetPriority(int32 priority);
  42:Generated_Source\PSoC4/DMA.h **** static int32  DMA_GetPriority(void);
  43:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetNextDescriptor(int32 descriptor);
  44:Generated_Source\PSoC4/DMA.h **** static int32  DMA_GetNextDescriptor(void);
  45:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config);
  46:Generated_Source\PSoC4/DMA.h **** static void   DMA_ValidateDescriptor(int32 descriptor);
  47:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetDescriptorStatus(int32 descriptor);
  48:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetSrcAddress(int32 descriptor, void * srcAddress);
  49:Generated_Source\PSoC4/DMA.h **** static void * DMA_GetSrcAddress(int32 descriptor);
  50:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetDstAddress(int32 descriptor, void * dstAddress);
  51:Generated_Source\PSoC4/DMA.h **** static void * DMA_GetDstAddress(int32 descriptor);
  52:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize);
  53:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetDataElementSize(int32 descriptor);
  54:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetNumDataElements(int32 descriptor, int32 numDataElements);
  55:Generated_Source\PSoC4/DMA.h **** static int32  DMA_GetNumDataElements(int32 descriptor);
  56:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth);
  57:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetSrcDstTransferWidth(int32 descriptor);
  58:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement);
  59:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetAddressIncrement(int32 descriptor);
  60:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetTriggerType(int32 descriptor, uint32 triggerType);
  61:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetTriggerType(int32 descriptor);
  62:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetTransferMode(int32 descriptor, uint32 transferMode);
  63:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetTransferMode(int32 descriptor);
  64:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetPreemptable(int32 descriptor, uint32 preemptable);
  65:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetPreemptable(int32 descriptor);
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 4


  66:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetPostCompletionActions(int32 descriptor, uint32 actions);
  67:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetPostCompletionAction(int32 descriptor);
  68:Generated_Source\PSoC4/DMA.h **** static cydma_callback_t DMA_SetInterruptCallback(cydma_callback_t callback);
  69:Generated_Source\PSoC4/DMA.h **** static cydma_callback_t DMA_GetInterruptCallback(void);
  70:Generated_Source\PSoC4/DMA.h **** 
  71:Generated_Source\PSoC4/DMA.h **** 
  72:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
  73:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_ChEnable
  74:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
  75:Generated_Source\PSoC4/DMA.h **** *
  76:Generated_Source\PSoC4/DMA.h **** * Summary:
  77:Generated_Source\PSoC4/DMA.h **** *  Enables the DMA channel. It is not necessary to call DMA_ChEnable()
  78:Generated_Source\PSoC4/DMA.h **** *  because the DMA_Start() API calls this function, which is the
  79:Generated_Source\PSoC4/DMA.h **** *  preferred method to begin the component operation.
  80:Generated_Source\PSoC4/DMA.h **** *
  81:Generated_Source\PSoC4/DMA.h **** * Parameters:
  82:Generated_Source\PSoC4/DMA.h **** *  None.
  83:Generated_Source\PSoC4/DMA.h **** *                   
  84:Generated_Source\PSoC4/DMA.h **** * Return:
  85:Generated_Source\PSoC4/DMA.h **** *  None.
  86:Generated_Source\PSoC4/DMA.h **** *
  87:Generated_Source\PSoC4/DMA.h **** * Side effect:
  88:Generated_Source\PSoC4/DMA.h **** *  If this function is called before DMA_Start(), or DMA_Init()
  89:Generated_Source\PSoC4/DMA.h **** *  or DMA_SetConfiguration(), and DMA_SetSrcAddress()
  90:Generated_Source\PSoC4/DMA.h **** *  and DMA_SetDstAddress the operation of the DMA is 
  91:Generated_Source\PSoC4/DMA.h **** *  undefined and could result in system data corruption. 
  92:Generated_Source\PSoC4/DMA.h **** *
  93:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
  94:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_ChEnable(void)
  95:Generated_Source\PSoC4/DMA.h **** {
  96:Generated_Source\PSoC4/DMA.h ****     CyDmaChEnable(DMA_CHANNEL);
  97:Generated_Source\PSoC4/DMA.h **** }
  98:Generated_Source\PSoC4/DMA.h **** 
  99:Generated_Source\PSoC4/DMA.h **** 
 100:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 101:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_ChDisable
 102:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 103:Generated_Source\PSoC4/DMA.h **** *
 104:Generated_Source\PSoC4/DMA.h **** * Summary:
 105:Generated_Source\PSoC4/DMA.h **** *  Disables the DMA channel.
 106:Generated_Source\PSoC4/DMA.h **** *
 107:Generated_Source\PSoC4/DMA.h **** * Parameters:
 108:Generated_Source\PSoC4/DMA.h **** *  None.
 109:Generated_Source\PSoC4/DMA.h **** *                   
 110:Generated_Source\PSoC4/DMA.h **** * Return:
 111:Generated_Source\PSoC4/DMA.h **** *  None.
 112:Generated_Source\PSoC4/DMA.h **** *
 113:Generated_Source\PSoC4/DMA.h **** * Side effect:
 114:Generated_Source\PSoC4/DMA.h **** *  If this function is called during a DMA transfer the transfer is aborted. 
 115:Generated_Source\PSoC4/DMA.h **** *
 116:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 117:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_ChDisable(void)
 118:Generated_Source\PSoC4/DMA.h **** {
 119:Generated_Source\PSoC4/DMA.h ****     CyDmaChDisable(DMA_CHANNEL);
 120:Generated_Source\PSoC4/DMA.h **** }
 121:Generated_Source\PSoC4/DMA.h **** 
 122:Generated_Source\PSoC4/DMA.h **** 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 5


 123:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 124:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_Trigger
 125:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 126:Generated_Source\PSoC4/DMA.h **** *
 127:Generated_Source\PSoC4/DMA.h **** * Summary:
 128:Generated_Source\PSoC4/DMA.h **** *  Triggers the DMA channel, this is useful only for software triggers. This is
 129:Generated_Source\PSoC4/DMA.h **** *  not needed when hardware triggers are used.
 130:Generated_Source\PSoC4/DMA.h **** *
 131:Generated_Source\PSoC4/DMA.h **** * Parameters:
 132:Generated_Source\PSoC4/DMA.h **** *  None.
 133:Generated_Source\PSoC4/DMA.h **** *                   
 134:Generated_Source\PSoC4/DMA.h **** * Return:
 135:Generated_Source\PSoC4/DMA.h **** *  None. 
 136:Generated_Source\PSoC4/DMA.h **** *
 137:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 138:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_Trigger(void)
 139:Generated_Source\PSoC4/DMA.h **** {
 140:Generated_Source\PSoC4/DMA.h ****     CyDmaTrigger(DMA_CHANNEL);
 141:Generated_Source\PSoC4/DMA.h **** }
 142:Generated_Source\PSoC4/DMA.h **** 
 143:Generated_Source\PSoC4/DMA.h **** 
 144:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 145:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetPriority
 146:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 147:Generated_Source\PSoC4/DMA.h **** *
 148:Generated_Source\PSoC4/DMA.h **** * Summary:
 149:Generated_Source\PSoC4/DMA.h **** *  Sets the priority for the channel.
 150:Generated_Source\PSoC4/DMA.h **** *
 151:Generated_Source\PSoC4/DMA.h **** * Parameters:
 152:Generated_Source\PSoC4/DMA.h **** *  priority: Priority for channel. Priority can be 0,1,2, or 3.
 153:Generated_Source\PSoC4/DMA.h **** *            0 is the highest priority.
 154:Generated_Source\PSoC4/DMA.h **** *                   
 155:Generated_Source\PSoC4/DMA.h **** * Return:
 156:Generated_Source\PSoC4/DMA.h **** *  None.
 157:Generated_Source\PSoC4/DMA.h **** *
 158:Generated_Source\PSoC4/DMA.h **** * Side effect:
 159:Generated_Source\PSoC4/DMA.h **** *  This function should not be called while the channel is enabled.
 160:Generated_Source\PSoC4/DMA.h **** *
 161:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 162:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetPriority(int32 priority)
 163:Generated_Source\PSoC4/DMA.h **** {
 164:Generated_Source\PSoC4/DMA.h ****     CyDmaSetPriority(DMA_CHANNEL, priority);
 165:Generated_Source\PSoC4/DMA.h **** }
 166:Generated_Source\PSoC4/DMA.h **** 
 167:Generated_Source\PSoC4/DMA.h **** 
 168:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 169:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetPriority
 170:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 171:Generated_Source\PSoC4/DMA.h **** *
 172:Generated_Source\PSoC4/DMA.h **** * Summary:
 173:Generated_Source\PSoC4/DMA.h **** *  Gets the priority for the channel.
 174:Generated_Source\PSoC4/DMA.h **** *
 175:Generated_Source\PSoC4/DMA.h **** * Parameters:
 176:Generated_Source\PSoC4/DMA.h **** *  None.
 177:Generated_Source\PSoC4/DMA.h **** *                   
 178:Generated_Source\PSoC4/DMA.h **** * Return:
 179:Generated_Source\PSoC4/DMA.h **** *  Priority for channel. Priority can be 0,1,2, or 3. 0 is the highest priority.
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 6


 180:Generated_Source\PSoC4/DMA.h **** *
 181:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 182:Generated_Source\PSoC4/DMA.h **** static CY_INLINE int32 DMA_GetPriority(void)
 183:Generated_Source\PSoC4/DMA.h **** {
 184:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetPriority(DMA_CHANNEL));
 185:Generated_Source\PSoC4/DMA.h **** }
 186:Generated_Source\PSoC4/DMA.h **** 
 187:Generated_Source\PSoC4/DMA.h **** 
 188:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetNextDescriptor
 190:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 191:Generated_Source\PSoC4/DMA.h **** *
 192:Generated_Source\PSoC4/DMA.h **** * Summary:
 193:Generated_Source\PSoC4/DMA.h **** *  Sets the descriptor that should be run the next time the channel is
 194:Generated_Source\PSoC4/DMA.h **** *  triggered.
 195:Generated_Source\PSoC4/DMA.h **** *
 196:Generated_Source\PSoC4/DMA.h **** * Parameters:
 197:Generated_Source\PSoC4/DMA.h **** *  descriptor: Next Descriptor to run (0 or 1).
 198:Generated_Source\PSoC4/DMA.h **** *                   
 199:Generated_Source\PSoC4/DMA.h **** * Side effect:
 200:Generated_Source\PSoC4/DMA.h **** *  This function should not be called while the channel is enabled.
 201:Generated_Source\PSoC4/DMA.h **** *
 202:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 203:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetNextDescriptor(int32 descriptor)
 204:Generated_Source\PSoC4/DMA.h **** {
 205:Generated_Source\PSoC4/DMA.h ****     CyDmaSetNextDescriptor(DMA_CHANNEL, descriptor);
 206:Generated_Source\PSoC4/DMA.h **** }
 207:Generated_Source\PSoC4/DMA.h **** 
 208:Generated_Source\PSoC4/DMA.h **** 
 209:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 210:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetNextDescriptor
 211:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 212:Generated_Source\PSoC4/DMA.h **** *
 213:Generated_Source\PSoC4/DMA.h **** * Summary:
 214:Generated_Source\PSoC4/DMA.h **** *  Returns the next descriptor that should be run, as set by 
 215:Generated_Source\PSoC4/DMA.h **** *  DMA_SetNextDescriptor().
 216:Generated_Source\PSoC4/DMA.h **** *
 217:Generated_Source\PSoC4/DMA.h **** * Parameters:
 218:Generated_Source\PSoC4/DMA.h **** *  None.
 219:Generated_Source\PSoC4/DMA.h **** *                   
 220:Generated_Source\PSoC4/DMA.h **** * Return:
 221:Generated_Source\PSoC4/DMA.h **** *  Next Descriptor to run (0 or 1).
 222:Generated_Source\PSoC4/DMA.h **** *
 223:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 224:Generated_Source\PSoC4/DMA.h **** static CY_INLINE int32 DMA_GetNextDescriptor(void)
 225:Generated_Source\PSoC4/DMA.h **** {
 226:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetNextDescriptor(DMA_CHANNEL));
 227:Generated_Source\PSoC4/DMA.h **** }
 228:Generated_Source\PSoC4/DMA.h **** 
 229:Generated_Source\PSoC4/DMA.h **** 
 230:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 231:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetConfiguration
 232:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 233:Generated_Source\PSoC4/DMA.h **** *
 234:Generated_Source\PSoC4/DMA.h **** * Summary:
 235:Generated_Source\PSoC4/DMA.h **** *  Sets configuration information for the specified descriptor.
 236:Generated_Source\PSoC4/DMA.h **** *
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 7


 237:Generated_Source\PSoC4/DMA.h **** * Parameters:
 238:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 239:Generated_Source\PSoC4/DMA.h **** *  config: Pointer to a configuration structure. Refer to cydma_init_struct
 240:Generated_Source\PSoC4/DMA.h **** *          structure definition in CyDMA_P4.h or the component datasheet.
 241:Generated_Source\PSoC4/DMA.h **** *                   
 242:Generated_Source\PSoC4/DMA.h **** * Return:
 243:Generated_Source\PSoC4/DMA.h **** *  None.
 244:Generated_Source\PSoC4/DMA.h **** *
 245:Generated_Source\PSoC4/DMA.h **** * Side effect:
 246:Generated_Source\PSoC4/DMA.h **** *  The status register associated with the specified descriptor is reset to
 247:Generated_Source\PSoC4/DMA.h **** *  zero after this function call. This function also validates the descriptor.
 248:Generated_Source\PSoC4/DMA.h **** *  This function should not be called while the descriptor is active.
 249:Generated_Source\PSoC4/DMA.h **** *  This can be checked by calling CyDmaGetStatus().
 250:Generated_Source\PSoC4/DMA.h **** *
 251:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 252:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config)
 253:Generated_Source\PSoC4/DMA.h **** {
 254:Generated_Source\PSoC4/DMA.h ****     CyDmaSetConfiguration(DMA_CHANNEL, descriptor, config);
 255:Generated_Source\PSoC4/DMA.h **** }
 256:Generated_Source\PSoC4/DMA.h **** 
 257:Generated_Source\PSoC4/DMA.h **** 
 258:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 259:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_ValidateDescriptor
 260:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 261:Generated_Source\PSoC4/DMA.h **** *
 262:Generated_Source\PSoC4/DMA.h **** * Summary:
 263:Generated_Source\PSoC4/DMA.h **** *  Validates the specified descriptor after it has been invalidated.
 264:Generated_Source\PSoC4/DMA.h **** *
 265:Generated_Source\PSoC4/DMA.h **** * Parameters:
 266:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 267:Generated_Source\PSoC4/DMA.h **** *                   
 268:Generated_Source\PSoC4/DMA.h **** * Return:
 269:Generated_Source\PSoC4/DMA.h **** *  None. 
 270:Generated_Source\PSoC4/DMA.h **** *
 271:Generated_Source\PSoC4/DMA.h **** * Side effect:
 272:Generated_Source\PSoC4/DMA.h **** *  The status register associated with the specified descriptor is reset to
 273:Generated_Source\PSoC4/DMA.h **** *  zero after this function call. This function should not be called while the
 274:Generated_Source\PSoC4/DMA.h **** *  descriptor is active. This can be checked by calling CyDmaGetStatus().
 275:Generated_Source\PSoC4/DMA.h **** *
 276:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 277:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_ValidateDescriptor(int32 descriptor)
 278:Generated_Source\PSoC4/DMA.h **** {
 279:Generated_Source\PSoC4/DMA.h ****     CyDmaValidateDescriptor(DMA_CHANNEL, descriptor);
 280:Generated_Source\PSoC4/DMA.h **** }
 281:Generated_Source\PSoC4/DMA.h **** 
 282:Generated_Source\PSoC4/DMA.h **** 
 283:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 284:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetDescriptorStatus
 285:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 286:Generated_Source\PSoC4/DMA.h **** *
 287:Generated_Source\PSoC4/DMA.h **** * Summary:
 288:Generated_Source\PSoC4/DMA.h **** *  Returns the status of the specified descriptor.
 289:Generated_Source\PSoC4/DMA.h **** *
 290:Generated_Source\PSoC4/DMA.h **** * Parameters:
 291:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 292:Generated_Source\PSoC4/DMA.h **** *                   
 293:Generated_Source\PSoC4/DMA.h **** * Return:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 8


 294:Generated_Source\PSoC4/DMA.h **** *  Returns the contents of the specified descriptors status register. Refer to 
 295:Generated_Source\PSoC4/DMA.h **** *  descriptor status register bit definitions in CyDMA_P4.h or the API
 296:Generated_Source\PSoC4/DMA.h **** *  description in the DMA channel datasheet for more information.
 297:Generated_Source\PSoC4/DMA.h **** *
 298:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 299:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetDescriptorStatus(int32 descriptor)
 300:Generated_Source\PSoC4/DMA.h **** {
 301:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetDescriptorStatus(DMA_CHANNEL, descriptor));
 302:Generated_Source\PSoC4/DMA.h **** }
 303:Generated_Source\PSoC4/DMA.h **** 
 304:Generated_Source\PSoC4/DMA.h **** 
 305:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 306:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetSrcAddress
 307:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 308:Generated_Source\PSoC4/DMA.h **** *
 309:Generated_Source\PSoC4/DMA.h **** * Summary:
 310:Generated_Source\PSoC4/DMA.h **** *  Configures the source address for the specified descriptor.
 311:Generated_Source\PSoC4/DMA.h **** *
 312:Generated_Source\PSoC4/DMA.h **** * Parameters:
 313:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 314:Generated_Source\PSoC4/DMA.h **** *  srcAddress: Address of DMA transfer source.
 315:Generated_Source\PSoC4/DMA.h **** *                   
 316:Generated_Source\PSoC4/DMA.h **** * Return:
 317:Generated_Source\PSoC4/DMA.h **** *  None.
 318:Generated_Source\PSoC4/DMA.h **** *
 319:Generated_Source\PSoC4/DMA.h **** * Side effect:
 320:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 321:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 322:Generated_Source\PSoC4/DMA.h **** *
 323:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 324:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetSrcAddress(int32 descriptor, void * srcAddress)
 325:Generated_Source\PSoC4/DMA.h **** {
 326:Generated_Source\PSoC4/DMA.h ****     CyDmaSetSrcAddress(DMA_CHANNEL, descriptor, srcAddress);
 327:Generated_Source\PSoC4/DMA.h **** }
 328:Generated_Source\PSoC4/DMA.h **** 
 329:Generated_Source\PSoC4/DMA.h **** 
 330:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 331:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetSrcAddress
 332:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 333:Generated_Source\PSoC4/DMA.h **** *
 334:Generated_Source\PSoC4/DMA.h **** * Summary:
 335:Generated_Source\PSoC4/DMA.h **** *  Returns the source address for the specified descriptor, set by either 
 336:Generated_Source\PSoC4/DMA.h **** *  DMA_Start() or DMA_SetSrcAddress().
 337:Generated_Source\PSoC4/DMA.h **** *
 338:Generated_Source\PSoC4/DMA.h **** * Parameters:
 339:Generated_Source\PSoC4/DMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 340:Generated_Source\PSoC4/DMA.h **** *                   
 341:Generated_Source\PSoC4/DMA.h **** * Return:
 342:Generated_Source\PSoC4/DMA.h **** *  Source address written to specified descriptor.
 343:Generated_Source\PSoC4/DMA.h **** *
 344:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 345:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void * DMA_GetSrcAddress(int32 descriptor)
 346:Generated_Source\PSoC4/DMA.h **** {
 347:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetSrcAddress(DMA_CHANNEL, descriptor));
 348:Generated_Source\PSoC4/DMA.h **** }
 349:Generated_Source\PSoC4/DMA.h **** 
 350:Generated_Source\PSoC4/DMA.h **** 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 9


 351:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 352:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetDstAddress
 353:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 354:Generated_Source\PSoC4/DMA.h **** *
 355:Generated_Source\PSoC4/DMA.h **** * Summary:
 356:Generated_Source\PSoC4/DMA.h **** *  Configures the destination address for the specified descriptor.
 357:Generated_Source\PSoC4/DMA.h **** *
 358:Generated_Source\PSoC4/DMA.h **** * Parameters:
 359:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 360:Generated_Source\PSoC4/DMA.h **** *  dstAddress: Address of DMA transfer destination.
 361:Generated_Source\PSoC4/DMA.h **** *                   
 362:Generated_Source\PSoC4/DMA.h **** * Return:
 363:Generated_Source\PSoC4/DMA.h **** *  None.
 364:Generated_Source\PSoC4/DMA.h **** *
 365:Generated_Source\PSoC4/DMA.h **** * Side effect:
 366:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 367:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 368:Generated_Source\PSoC4/DMA.h **** *
 369:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 370:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetDstAddress(int32 descriptor, void * dstAddress)
 371:Generated_Source\PSoC4/DMA.h **** {
 372:Generated_Source\PSoC4/DMA.h ****     CyDmaSetDstAddress(DMA_CHANNEL, descriptor, dstAddress);
 373:Generated_Source\PSoC4/DMA.h **** }
 374:Generated_Source\PSoC4/DMA.h **** 
 375:Generated_Source\PSoC4/DMA.h **** 
 376:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 377:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetDstAddress
 378:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 379:Generated_Source\PSoC4/DMA.h **** *
 380:Generated_Source\PSoC4/DMA.h **** * Summary:
 381:Generated_Source\PSoC4/DMA.h **** *  Returns the destination address for the specified descriptor, set by either 
 382:Generated_Source\PSoC4/DMA.h **** *  DMA_Start() or DMA_SetDstAddress().
 383:Generated_Source\PSoC4/DMA.h **** *
 384:Generated_Source\PSoC4/DMA.h **** * Parameters:
 385:Generated_Source\PSoC4/DMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 386:Generated_Source\PSoC4/DMA.h **** *                   
 387:Generated_Source\PSoC4/DMA.h **** * Return:
 388:Generated_Source\PSoC4/DMA.h **** *  Destination address written to specified descriptor.
 389:Generated_Source\PSoC4/DMA.h **** *
 390:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 391:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void * DMA_GetDstAddress(int32 descriptor)
 392:Generated_Source\PSoC4/DMA.h **** {
 393:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetDstAddress(DMA_CHANNEL, descriptor));
 394:Generated_Source\PSoC4/DMA.h **** }
 395:Generated_Source\PSoC4/DMA.h **** 
 396:Generated_Source\PSoC4/DMA.h **** 
 397:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 398:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetDataElementSize
 399:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 400:Generated_Source\PSoC4/DMA.h **** *
 401:Generated_Source\PSoC4/DMA.h **** * Summary:
 402:Generated_Source\PSoC4/DMA.h **** *  Sets the data element size for the specified descriptor.
 403:Generated_Source\PSoC4/DMA.h **** *
 404:Generated_Source\PSoC4/DMA.h **** * Parameters:
 405:Generated_Source\PSoC4/DMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 406:Generated_Source\PSoC4/DMA.h **** *  dataElementSize: Specifies the size of the data element. The DMA transfer
 407:Generated_Source\PSoC4/DMA.h **** *                   engine transfers one data element at a time. How these
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 10


 408:Generated_Source\PSoC4/DMA.h **** *                   transfers occur is controlled by the transfer mode.
 409:Generated_Source\PSoC4/DMA.h **** *                   Refer to the API bit field definitions in CyDMA_P4.h or API
 410:Generated_Source\PSoC4/DMA.h **** *                   description in the DMA channel datasheet for the parameter
 411:Generated_Source\PSoC4/DMA.h **** *                   options.
 412:Generated_Source\PSoC4/DMA.h **** *
 413:Generated_Source\PSoC4/DMA.h **** * Return:
 414:Generated_Source\PSoC4/DMA.h **** *  None.
 415:Generated_Source\PSoC4/DMA.h **** *
 416:Generated_Source\PSoC4/DMA.h **** * Side effect:
 417:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 418:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 419:Generated_Source\PSoC4/DMA.h **** *
 420:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 421:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize)
 422:Generated_Source\PSoC4/DMA.h **** {
 423:Generated_Source\PSoC4/DMA.h ****     CyDmaSetDataElementSize(DMA_CHANNEL, descriptor, dataElementSize);
 424:Generated_Source\PSoC4/DMA.h **** }
 425:Generated_Source\PSoC4/DMA.h **** 
 426:Generated_Source\PSoC4/DMA.h **** 
 427:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 428:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetDataElementSize
 429:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 430:Generated_Source\PSoC4/DMA.h **** *
 431:Generated_Source\PSoC4/DMA.h **** * Summary:
 432:Generated_Source\PSoC4/DMA.h **** *  Returns the data element size configured for the specified descriptor, set by
 433:Generated_Source\PSoC4/DMA.h **** *  DMA_SetDataElementSize() or DMA_SetConfiguration().
 434:Generated_Source\PSoC4/DMA.h **** *
 435:Generated_Source\PSoC4/DMA.h **** * Parameters:
 436:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 437:Generated_Source\PSoC4/DMA.h **** *                   
 438:Generated_Source\PSoC4/DMA.h **** * Return:
 439:Generated_Source\PSoC4/DMA.h **** *  The size of the data element. The DMA transfer engine transfers one data
 440:Generated_Source\PSoC4/DMA.h **** *  element at a time. How these transfers occur is controlled by the transfer
 441:Generated_Source\PSoC4/DMA.h **** *  mode. Refer to the API bit field definitions in CyDMA_P4.h or the API 
 442:Generated_Source\PSoC4/DMA.h **** *  description in the DMA channel datasheet for more information.
 443:Generated_Source\PSoC4/DMA.h **** *
 444:Generated_Source\PSoC4/DMA.h **** * Note:
 445:Generated_Source\PSoC4/DMA.h **** *  The size of the source and destination can be configured to use the
 446:Generated_Source\PSoC4/DMA.h **** *  data element size, or a Word, this is set in DMA_SetSrcDstTransferWidth().
 447:Generated_Source\PSoC4/DMA.h **** *
 448:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 449:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetDataElementSize(int32 descriptor)
 450:Generated_Source\PSoC4/DMA.h **** {
 451:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetDataElementSize(DMA_CHANNEL, descriptor));
 452:Generated_Source\PSoC4/DMA.h **** }
 453:Generated_Source\PSoC4/DMA.h **** 
 454:Generated_Source\PSoC4/DMA.h **** 
 455:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 456:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetNumDataElements
 457:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 458:Generated_Source\PSoC4/DMA.h **** *
 459:Generated_Source\PSoC4/DMA.h **** * Summary:
 460:Generated_Source\PSoC4/DMA.h **** *  Sets the number of data elements to transfer for specified descriptor.
 461:Generated_Source\PSoC4/DMA.h **** *
 462:Generated_Source\PSoC4/DMA.h **** * Parameters:
 463:Generated_Source\PSoC4/DMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 464:Generated_Source\PSoC4/DMA.h **** *  numDataElements: Total number of data elements this descriptor transfers.
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 11


 465:Generated_Source\PSoC4/DMA.h **** *                   Valid ranges are 1 to 65536.
 466:Generated_Source\PSoC4/DMA.h **** *                   
 467:Generated_Source\PSoC4/DMA.h **** * Return:
 468:Generated_Source\PSoC4/DMA.h **** *  None.
 469:Generated_Source\PSoC4/DMA.h **** *
 470:Generated_Source\PSoC4/DMA.h **** * Side effect:
 471:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 472:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 473:Generated_Source\PSoC4/DMA.h **** *
 474:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 475:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetNumDataElements(int32 descriptor, int32 numDataElements)
 476:Generated_Source\PSoC4/DMA.h **** {
 477:Generated_Source\PSoC4/DMA.h ****     CyDmaSetNumDataElements(DMA_CHANNEL, descriptor, numDataElements);
 478:Generated_Source\PSoC4/DMA.h **** }
 479:Generated_Source\PSoC4/DMA.h **** 
 480:Generated_Source\PSoC4/DMA.h **** 
 481:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 482:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetNumDataElements
 483:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 484:Generated_Source\PSoC4/DMA.h **** *
 485:Generated_Source\PSoC4/DMA.h **** * Summary:
 486:Generated_Source\PSoC4/DMA.h **** *  Returns the number of data elements to be transferred. Only reflects the
 487:Generated_Source\PSoC4/DMA.h **** *  value written by DMA_SetNumDataElements() or DMA_SetConfiguration().
 488:Generated_Source\PSoC4/DMA.h **** *  This does not reflect how many elements have been transferred. For that
 489:Generated_Source\PSoC4/DMA.h **** *  information use the DMA_GetDescriptorStatus() function.
 490:Generated_Source\PSoC4/DMA.h **** *
 491:Generated_Source\PSoC4/DMA.h **** * Parameters:
 492:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 493:Generated_Source\PSoC4/DMA.h **** *                   
 494:Generated_Source\PSoC4/DMA.h **** * Return:
 495:Generated_Source\PSoC4/DMA.h **** *  Number of data elements to transfer.
 496:Generated_Source\PSoC4/DMA.h **** *
 497:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 498:Generated_Source\PSoC4/DMA.h **** static CY_INLINE int32 DMA_GetNumDataElements(int32 descriptor)
 499:Generated_Source\PSoC4/DMA.h **** {
 500:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetNumDataElements(DMA_CHANNEL, descriptor));
 501:Generated_Source\PSoC4/DMA.h **** }
 502:Generated_Source\PSoC4/DMA.h **** 
 503:Generated_Source\PSoC4/DMA.h **** 
 504:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 505:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetSrcDstTransferWidth
 506:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 507:Generated_Source\PSoC4/DMA.h **** *
 508:Generated_Source\PSoC4/DMA.h **** * Summary:
 509:Generated_Source\PSoC4/DMA.h **** *  Sets the width of the source and destination. The DMA can either read and
 510:Generated_Source\PSoC4/DMA.h **** *  write data from the source and destination at the size specified by
 511:Generated_Source\PSoC4/DMA.h **** *  DMA_SetDataElementSize() or by a word (4bytes). This also determines how
 512:Generated_Source\PSoC4/DMA.h **** *  many bytes the addresses are incremented if increment source and destination
 513:Generated_Source\PSoC4/DMA.h **** *  address are turned on.
 514:Generated_Source\PSoC4/DMA.h **** *
 515:Generated_Source\PSoC4/DMA.h **** * Parameters:
 516:Generated_Source\PSoC4/DMA.h **** *  descriptor:    Descriptor (0 or 1) modified by this function.
 517:Generated_Source\PSoC4/DMA.h **** *  transferWidth: Specifies the source and destination widths. Refer to the API
 518:Generated_Source\PSoC4/DMA.h **** *                 bit field definitions in CyDMA_P4.h or the API description in
 519:Generated_Source\PSoC4/DMA.h **** *                 the DMA channel datasheet for the parameter options.
 520:Generated_Source\PSoC4/DMA.h **** *                   
 521:Generated_Source\PSoC4/DMA.h **** * Return:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 12


 522:Generated_Source\PSoC4/DMA.h **** *  None.
 523:Generated_Source\PSoC4/DMA.h **** *
 524:Generated_Source\PSoC4/DMA.h **** * Side effect:
 525:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 526:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 527:Generated_Source\PSoC4/DMA.h **** *
 528:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 529:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth)
 530:Generated_Source\PSoC4/DMA.h **** {
 531:Generated_Source\PSoC4/DMA.h ****     CyDmaSetSrcDstTransferWidth(DMA_CHANNEL, descriptor, transferWidth);
 532:Generated_Source\PSoC4/DMA.h **** }
 533:Generated_Source\PSoC4/DMA.h **** 
 534:Generated_Source\PSoC4/DMA.h **** 
 535:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 536:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetSrcDstTransferWidth
 537:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 538:Generated_Source\PSoC4/DMA.h **** *
 539:Generated_Source\PSoC4/DMA.h **** * Summary:
 540:Generated_Source\PSoC4/DMA.h **** *  Returns the width of the source and destination, as set by 
 541:Generated_Source\PSoC4/DMA.h **** *  DMA_SetSrcDstTransferWidth() or DMA_SetConfiguration().
 542:Generated_Source\PSoC4/DMA.h **** *
 543:Generated_Source\PSoC4/DMA.h **** * Parameters:
 544:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 545:Generated_Source\PSoC4/DMA.h **** *                   
 546:Generated_Source\PSoC4/DMA.h **** * Return:
 547:Generated_Source\PSoC4/DMA.h **** *  Width of source and destination. Refer to the API bit field definitions in
 548:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 549:Generated_Source\PSoC4/DMA.h **** *  information.
 550:Generated_Source\PSoC4/DMA.h **** *
 551:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 552:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetSrcDstTransferWidth(int32 descriptor)
 553:Generated_Source\PSoC4/DMA.h **** {
 554:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetSrcDstTransferWidth(DMA_CHANNEL, descriptor));
 555:Generated_Source\PSoC4/DMA.h **** }
 556:Generated_Source\PSoC4/DMA.h **** 
 557:Generated_Source\PSoC4/DMA.h **** 
 558:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 559:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetAddressIncrement
 560:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 561:Generated_Source\PSoC4/DMA.h **** *
 562:Generated_Source\PSoC4/DMA.h **** * Summary:
 563:Generated_Source\PSoC4/DMA.h **** *  Sets whether the source or destination addresses are incremented after the
 564:Generated_Source\PSoC4/DMA.h **** *  transfer of each data element. The amount that the source and destination
 565:Generated_Source\PSoC4/DMA.h **** *  address are incremented is determined by the DMA_SetSrcDstTransferWidth()
 566:Generated_Source\PSoC4/DMA.h **** *  function. The addresses will either be incremented by the data element size
 567:Generated_Source\PSoC4/DMA.h **** *  or by a word (4 bytes).
 568:Generated_Source\PSoC4/DMA.h **** *
 569:Generated_Source\PSoC4/DMA.h **** * Parameters:
 570:Generated_Source\PSoC4/DMA.h **** *  descriptor:       Descriptor (0 or 1) modified by this function.
 571:Generated_Source\PSoC4/DMA.h **** *  addressIncrement: Address increment settings. Refer to the API bit field
 572:Generated_Source\PSoC4/DMA.h **** *                    definitions in CyDMA_P4.h or the API description in the DMA
 573:Generated_Source\PSoC4/DMA.h **** *                    channel datasheet for the parameter options.
 574:Generated_Source\PSoC4/DMA.h **** *    
 575:Generated_Source\PSoC4/DMA.h **** * Return:
 576:Generated_Source\PSoC4/DMA.h **** *  None.
 577:Generated_Source\PSoC4/DMA.h **** *
 578:Generated_Source\PSoC4/DMA.h **** * Side effect:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 13


 579:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 580:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 581:Generated_Source\PSoC4/DMA.h **** *
 582:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 583:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement)
 584:Generated_Source\PSoC4/DMA.h **** {
 585:Generated_Source\PSoC4/DMA.h ****     CyDmaSetAddressIncrement(DMA_CHANNEL, descriptor, addressIncrement);
 586:Generated_Source\PSoC4/DMA.h **** }
 587:Generated_Source\PSoC4/DMA.h **** 
 588:Generated_Source\PSoC4/DMA.h **** 
 589:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 590:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetAddressIncrement
 591:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 592:Generated_Source\PSoC4/DMA.h **** *
 593:Generated_Source\PSoC4/DMA.h **** * Summary:
 594:Generated_Source\PSoC4/DMA.h **** *  Returns address increment settings as set by DMA_SetAddressIncrement()
 595:Generated_Source\PSoC4/DMA.h **** *  or DMA_SetConfiguration().
 596:Generated_Source\PSoC4/DMA.h **** *
 597:Generated_Source\PSoC4/DMA.h **** * Parameters:
 598:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 599:Generated_Source\PSoC4/DMA.h **** *                   
 600:Generated_Source\PSoC4/DMA.h **** * Return:
 601:Generated_Source\PSoC4/DMA.h **** *  Address increment settings. Refer to the API bit field definitions in
 602:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 603:Generated_Source\PSoC4/DMA.h **** *  information.
 604:Generated_Source\PSoC4/DMA.h **** *
 605:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 606:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetAddressIncrement(int32 descriptor)
 607:Generated_Source\PSoC4/DMA.h **** {
 608:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetAddressIncrement(DMA_CHANNEL, descriptor));
 609:Generated_Source\PSoC4/DMA.h **** }
 610:Generated_Source\PSoC4/DMA.h **** 
 611:Generated_Source\PSoC4/DMA.h **** 
 612:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 613:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetTriggerType
 614:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 615:Generated_Source\PSoC4/DMA.h **** *
 616:Generated_Source\PSoC4/DMA.h **** * Summary:
 617:Generated_Source\PSoC4/DMA.h **** *  Sets the type of input trigger for the DMA For level sensitive triggers sets
 618:Generated_Source\PSoC4/DMA.h **** *  how long the DMA waits for the trigger to go low (deactivate) before
 619:Generated_Source\PSoC4/DMA.h **** *  triggering the channel again.
 620:Generated_Source\PSoC4/DMA.h **** *
 621:Generated_Source\PSoC4/DMA.h **** * Parameters:
 622:Generated_Source\PSoC4/DMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 623:Generated_Source\PSoC4/DMA.h **** *  triggerType: Type of DMA trigger. Refer to the API bit field definitions in
 624:Generated_Source\PSoC4/DMA.h **** *               CyDMA_P4.h or the API description in the DMA channel datasheet
 625:Generated_Source\PSoC4/DMA.h **** *               for the parameter options.
 626:Generated_Source\PSoC4/DMA.h **** *                   
 627:Generated_Source\PSoC4/DMA.h **** * Return:
 628:Generated_Source\PSoC4/DMA.h **** *  None.
 629:Generated_Source\PSoC4/DMA.h **** *
 630:Generated_Source\PSoC4/DMA.h **** * Side effect:
 631:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 632:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 633:Generated_Source\PSoC4/DMA.h **** *
 634:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 635:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetTriggerType(int32 descriptor, uint32 triggerType)
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 14


 636:Generated_Source\PSoC4/DMA.h **** {
 637:Generated_Source\PSoC4/DMA.h ****     CyDmaSetTriggerType(DMA_CHANNEL, descriptor, triggerType);
 638:Generated_Source\PSoC4/DMA.h **** }
 639:Generated_Source\PSoC4/DMA.h **** 
 640:Generated_Source\PSoC4/DMA.h **** 
 641:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 642:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetTriggerType
 643:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 644:Generated_Source\PSoC4/DMA.h **** *
 645:Generated_Source\PSoC4/DMA.h **** * Summary:
 646:Generated_Source\PSoC4/DMA.h **** *  Returns the trigger deactivation settings as set by DMA_SetTriggerType()
 647:Generated_Source\PSoC4/DMA.h **** *  or DMA_SetConfiguration().
 648:Generated_Source\PSoC4/DMA.h **** *
 649:Generated_Source\PSoC4/DMA.h **** * Parameters:
 650:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 651:Generated_Source\PSoC4/DMA.h **** *                   
 652:Generated_Source\PSoC4/DMA.h **** * Return:
 653:Generated_Source\PSoC4/DMA.h **** *  Trigger deactivation settings. Refer to the API bit field definitions in
 654:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 655:Generated_Source\PSoC4/DMA.h **** *  information.
 656:Generated_Source\PSoC4/DMA.h **** *
 657:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 658:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetTriggerType(int32 descriptor)
 659:Generated_Source\PSoC4/DMA.h **** {
 660:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetTriggerType(DMA_CHANNEL, descriptor));
 661:Generated_Source\PSoC4/DMA.h **** }
 662:Generated_Source\PSoC4/DMA.h **** 
 663:Generated_Source\PSoC4/DMA.h **** 
 664:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 665:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetTransferMode
 666:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 667:Generated_Source\PSoC4/DMA.h **** *
 668:Generated_Source\PSoC4/DMA.h **** * Summary:
 669:Generated_Source\PSoC4/DMA.h **** *  Sets the DMA transfer mode. This determines how the DMA reacts to each trigger
 670:Generated_Source\PSoC4/DMA.h **** *  event.
 671:Generated_Source\PSoC4/DMA.h **** *
 672:Generated_Source\PSoC4/DMA.h **** * Parameters:
 673:Generated_Source\PSoC4/DMA.h **** *  descriptor:   Descriptor (0 or 1) modified by this function.
 674:Generated_Source\PSoC4/DMA.h **** *  transferMode: Specifies the DMA transfer mode settings. Refer to the API bit
 675:Generated_Source\PSoC4/DMA.h **** *                field definitions in CyDMA_P4.h or the API description in the
 676:Generated_Source\PSoC4/DMA.h **** *                DMA channel datasheet for the parameter options.
 677:Generated_Source\PSoC4/DMA.h **** *                   
 678:Generated_Source\PSoC4/DMA.h **** * Return:
 679:Generated_Source\PSoC4/DMA.h **** *  None.
 680:Generated_Source\PSoC4/DMA.h **** *
 681:Generated_Source\PSoC4/DMA.h **** * Side effect:
 682:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 683:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 684:Generated_Source\PSoC4/DMA.h **** *
 685:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 686:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetTransferMode(int32 descriptor, uint32 transferMode)
 687:Generated_Source\PSoC4/DMA.h **** {
 688:Generated_Source\PSoC4/DMA.h ****     CyDmaSetTransferMode(DMA_CHANNEL, descriptor, transferMode);
 689:Generated_Source\PSoC4/DMA.h **** }
 690:Generated_Source\PSoC4/DMA.h **** 
 691:Generated_Source\PSoC4/DMA.h **** 
 692:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 15


 693:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetTransferMode
 694:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 695:Generated_Source\PSoC4/DMA.h **** *
 696:Generated_Source\PSoC4/DMA.h **** * Summary:
 697:Generated_Source\PSoC4/DMA.h **** *  Returns the transfer mode for the specified descriptor as set by 
 698:Generated_Source\PSoC4/DMA.h **** *  DMA_SetTransferMode() or DMA_SetConfiguration().
 699:Generated_Source\PSoC4/DMA.h **** *
 700:Generated_Source\PSoC4/DMA.h **** * Parameters:
 701:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 702:Generated_Source\PSoC4/DMA.h **** *                   
 703:Generated_Source\PSoC4/DMA.h **** * Return:
 704:Generated_Source\PSoC4/DMA.h **** *  DMA transfer mode settings. Refer to the API bit field definitions in
 705:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 706:Generated_Source\PSoC4/DMA.h **** *  information.
 707:Generated_Source\PSoC4/DMA.h **** *
 708:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 709:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetTransferMode(int32 descriptor)
 710:Generated_Source\PSoC4/DMA.h **** {
 711:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetTransferMode(DMA_CHANNEL, descriptor));
 712:Generated_Source\PSoC4/DMA.h **** }
 713:Generated_Source\PSoC4/DMA.h **** 
 714:Generated_Source\PSoC4/DMA.h **** 
 715:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 716:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetPreemptable
 717:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 718:Generated_Source\PSoC4/DMA.h **** *
 719:Generated_Source\PSoC4/DMA.h **** * Summary:
 720:Generated_Source\PSoC4/DMA.h **** *  Determines if the descriptor is preemptable.
 721:Generated_Source\PSoC4/DMA.h **** *
 722:Generated_Source\PSoC4/DMA.h **** * Parameters:
 723:Generated_Source\PSoC4/DMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 724:Generated_Source\PSoC4/DMA.h **** *  preemptable: Descriptor preemption settings. Refer to the API bit field
 725:Generated_Source\PSoC4/DMA.h **** *               definitions in CyDMA_P4.h or the API description in the DMA 
 726:Generated_Source\PSoC4/DMA.h **** *               channel datasheet for the parameter options.
 727:Generated_Source\PSoC4/DMA.h **** *                   
 728:Generated_Source\PSoC4/DMA.h **** * Return:
 729:Generated_Source\PSoC4/DMA.h **** *  None.
 730:Generated_Source\PSoC4/DMA.h **** *
 731:Generated_Source\PSoC4/DMA.h **** * Side effect:
 732:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 733:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 734:Generated_Source\PSoC4/DMA.h **** *
 735:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 736:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetPreemptable(int32 descriptor, uint32 preemptable)
 737:Generated_Source\PSoC4/DMA.h **** {
 738:Generated_Source\PSoC4/DMA.h ****     CyDmaSetPreemptable(DMA_CHANNEL, descriptor, preemptable);
 739:Generated_Source\PSoC4/DMA.h **** }
 740:Generated_Source\PSoC4/DMA.h **** 
 741:Generated_Source\PSoC4/DMA.h **** 
 742:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 743:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetPreemptable
 744:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 745:Generated_Source\PSoC4/DMA.h **** *
 746:Generated_Source\PSoC4/DMA.h **** * Summary:
 747:Generated_Source\PSoC4/DMA.h **** *  Returns whether or not the descriptor is preemptable.
 748:Generated_Source\PSoC4/DMA.h **** *
 749:Generated_Source\PSoC4/DMA.h **** * Parameters:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 16


 750:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 751:Generated_Source\PSoC4/DMA.h **** *                   
 752:Generated_Source\PSoC4/DMA.h **** * Return:
 753:Generated_Source\PSoC4/DMA.h **** *  Descriptor preemption setting. Refer to the API bit field definitions in
 754:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 755:Generated_Source\PSoC4/DMA.h **** *  information.
 756:Generated_Source\PSoC4/DMA.h **** *
 757:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 758:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetPreemptable(int32 descriptor)
 759:Generated_Source\PSoC4/DMA.h **** {
 760:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetPreemptable(DMA_CHANNEL, descriptor));
 761:Generated_Source\PSoC4/DMA.h **** }
 762:Generated_Source\PSoC4/DMA.h **** 
 763:Generated_Source\PSoC4/DMA.h **** 
 764:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 765:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetPostCompletionActions
 766:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 767:Generated_Source\PSoC4/DMA.h **** *
 768:Generated_Source\PSoC4/DMA.h **** * Summary:
 769:Generated_Source\PSoC4/DMA.h **** *  Determines what occurs after a descriptor completes.
 770:Generated_Source\PSoC4/DMA.h **** *
 771:Generated_Source\PSoC4/DMA.h **** * Parameters:
 772:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 773:Generated_Source\PSoC4/DMA.h **** *  actions:    Specifies descriptor post completion actions. Refer to the API
 774:Generated_Source\PSoC4/DMA.h **** *              bit field definitions in CyDMA_P4.h or the API description in the
 775:Generated_Source\PSoC4/DMA.h **** *              DMA channel datasheet for the parameter options.
 776:Generated_Source\PSoC4/DMA.h **** *                   
 777:Generated_Source\PSoC4/DMA.h **** * Return:
 778:Generated_Source\PSoC4/DMA.h **** *  None.  
 779:Generated_Source\PSoC4/DMA.h **** *
 780:Generated_Source\PSoC4/DMA.h **** * Side effect:
 781:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 782:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 783:Generated_Source\PSoC4/DMA.h **** *
 784:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 785:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetPostCompletionActions(int32 descriptor, uint32 actions)
 786:Generated_Source\PSoC4/DMA.h **** {
 787:Generated_Source\PSoC4/DMA.h ****     CyDmaSetPostCompletionActions(DMA_CHANNEL, descriptor, actions);
 788:Generated_Source\PSoC4/DMA.h **** }
 789:Generated_Source\PSoC4/DMA.h **** 
 790:Generated_Source\PSoC4/DMA.h **** 
 791:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 792:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetPostCompletionAction
 793:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 794:Generated_Source\PSoC4/DMA.h **** *
 795:Generated_Source\PSoC4/DMA.h **** * Summary:
 796:Generated_Source\PSoC4/DMA.h **** *  Returns the post descriptor action settings as set by 
 797:Generated_Source\PSoC4/DMA.h **** *  DMA_SetPostCompletionActions() or DMA_SetConfiguration().
 798:Generated_Source\PSoC4/DMA.h **** *
 799:Generated_Source\PSoC4/DMA.h **** * Parameters:
 800:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 801:Generated_Source\PSoC4/DMA.h **** *                   
 802:Generated_Source\PSoC4/DMA.h **** * Return:
 803:Generated_Source\PSoC4/DMA.h **** *  Post descriptor actions. Refer to the API bit field definitions in CyDMA_P4.h
 804:Generated_Source\PSoC4/DMA.h **** *  or the API description in the DMA channel datasheet for more information.
 805:Generated_Source\PSoC4/DMA.h **** *
 806:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 17


 807:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetPostCompletionAction(int32 descriptor)
 808:Generated_Source\PSoC4/DMA.h **** {
 809:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetPostCompletionActions(DMA_CHANNEL, descriptor));
 810:Generated_Source\PSoC4/DMA.h **** }
 811:Generated_Source\PSoC4/DMA.h **** 
 812:Generated_Source\PSoC4/DMA.h **** 
 813:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 814:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetInterruptCallback
 815:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 816:Generated_Source\PSoC4/DMA.h **** *
 817:Generated_Source\PSoC4/DMA.h **** * Summary:
 818:Generated_Source\PSoC4/DMA.h **** *  Sets a user defined callback function to be called by the DMA interrupt. The
 819:Generated_Source\PSoC4/DMA.h **** *  function should contain code to process the interrupt request for the 
 820:Generated_Source\PSoC4/DMA.h **** *  associated DMA channel.
 821:Generated_Source\PSoC4/DMA.h **** *
 822:Generated_Source\PSoC4/DMA.h **** * Parameters:
 823:Generated_Source\PSoC4/DMA.h **** *  callback: Pointer to the user defined callback function.
 824:Generated_Source\PSoC4/DMA.h **** *
 825:Generated_Source\PSoC4/DMA.h **** * Return:
 826:Generated_Source\PSoC4/DMA.h **** *  Pointer to the function previously set for the specified channel. 
 827:Generated_Source\PSoC4/DMA.h **** *
 828:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 829:Generated_Source\PSoC4/DMA.h **** static CY_INLINE cydma_callback_t DMA_SetInterruptCallback(cydma_callback_t callback)
 830:Generated_Source\PSoC4/DMA.h **** {
 831:Generated_Source\PSoC4/DMA.h ****     return (CyDmaSetInterruptCallback(DMA_CHANNEL, callback));
  66              		.loc 2 831 0
  67 000e 0549     		ldr	r1, .L3+8
  68 0010 0220     		movs	r0, #2
  69 0012 FFF7FEFF 		bl	CyDmaSetInterruptCallback
  70              	.LVL2:
  71              	.LBE5:
  72              	.LBE4:
  42:VolumeControl.c ****     
  43:VolumeControl.c ****     DMA_SetInterruptCallback(DmaIntHandler);
  44:VolumeControl.c **** 
  45:VolumeControl.c ****     /* Start ADC conversion. */
  46:VolumeControl.c ****     ADC_StartConvert();
  73              		.loc 1 46 0
  74 0016 FFF7FEFF 		bl	ADC_StartConvert
  75              	.LVL3:
  47:VolumeControl.c **** }
  76              		.loc 1 47 0
  77              		@ sp needed
  78 001a 10BD     		pop	{r4, pc}
  79              	.L4:
  80              		.align	2
  81              	.L3:
  82 001c 00000000 		.word	.LANCHOR0
  83 0020 80013A40 		.word	1077543296
  84 0024 00000000 		.word	DmaIntHandler
  85              		.cfi_endproc
  86              	.LFE35:
  87              		.size	VolumeControlInit, .-VolumeControlInit
  88              		.global	__aeabi_idiv
  89              		.section	.text.VolumeControlService,"ax",%progbits
  90              		.align	2
  91              		.global	VolumeControlService
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 18


  92              		.code	16
  93              		.thumb_func
  94              		.type	VolumeControlService, %function
  95              	VolumeControlService:
  96              	.LFB36:
  48:VolumeControl.c **** 
  49:VolumeControl.c **** void VolumeControlService(void)
  50:VolumeControl.c **** {
  97              		.loc 1 50 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 102              		.cfi_def_cfa_offset 20
 103              		.cfi_offset 4, -20
 104              		.cfi_offset 5, -16
 105              		.cfi_offset 6, -12
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 83B0     		sub	sp, sp, #12
 109              		.cfi_def_cfa_offset 32
 110              	.LVL4:
  51:VolumeControl.c ****     static int32 prevVol[vol_ctrl_both] = { 0, 0 };
  52:VolumeControl.c ****     int32 volume[vol_ctrl_both] = { 0, 0 };
  53:VolumeControl.c ****     int i;
  54:VolumeControl.c **** 
  55:VolumeControl.c ****     for (i = 0; i < vol_ctrl_both; i++)
 111              		.loc 1 55 0
 112 0004 0024     		movs	r4, #0
 113 0006 3DE0     		b	.L6
 114              	.LVL5:
 115              	.L12:
  56:VolumeControl.c **** 	{
  57:VolumeControl.c ****         // Scale ADC reading to USBFS volume range
  58:VolumeControl.c ****         volume[i] = (adcSample[i] - ADC_MIN_READING[i]) * PC_VOLUME_MSB_MAX / ADC_READING_RANGE(i);
 116              		.loc 1 58 0
 117 0008 204E     		ldr	r6, .L14
 118 000a 6300     		lsls	r3, r4, #1
 119 000c 9A5F     		ldrsh	r2, [r3, r6]
 120 000e 204B     		ldr	r3, .L14+4
 121 0010 A500     		lsls	r5, r4, #2
 122 0012 E958     		ldr	r1, [r5, r3]
 123 0014 521A     		subs	r2, r2, r1
 124 0016 D001     		lsls	r0, r2, #7
 125 0018 801A     		subs	r0, r0, r2
 126 001a 5B19     		adds	r3, r3, r5
 127 001c 9B68     		ldr	r3, [r3, #8]
 128 001e 591A     		subs	r1, r3, r1
 129 0020 FFF7FEFF 		bl	__aeabi_idiv
 130              	.LVL6:
 131 0024 0700     		movs	r7, r0
  59:VolumeControl.c **** 
  60:VolumeControl.c ****         #if 0
  61:VolumeControl.c ****         /* Filter volume to be in the expected range */
  62:VolumeControl.c **** 		if((volume[i] > PC_VOLUME_MSB_MIN) && (volume[i] <= PC_VOLUME_MSB_MAX))
  63:VolumeControl.c **** 		{
  64:VolumeControl.c **** 			volume[i] = (uint8)(((volume[i] - PC_VOLUME_MSB_MIN) * CODEC_HP_VOLUME_MAX) / (PC_VOLUME_MSB_MAX
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 19


  65:VolumeControl.c **** 		}
  66:VolumeControl.c **** 		else
  67:VolumeControl.c **** 		{
  68:VolumeControl.c **** 			/* Set volume to 0 if the volume from PC is not in expected range */
  69:VolumeControl.c **** 			volume[i] = 0;
  70:VolumeControl.c **** 		}
  71:VolumeControl.c ****         #endif
  72:VolumeControl.c **** 
  73:VolumeControl.c ****         if (volume[i] != prevVol[i])
 132              		.loc 1 73 0
 133 0026 7519     		adds	r5, r6, r5
 134 0028 6B68     		ldr	r3, [r5, #4]
 135 002a 9842     		cmp	r0, r3
 136 002c 29D0     		beq	.L7
  74:VolumeControl.c ****         {
  75:VolumeControl.c ****             /* Update the codec volume */
  76:VolumeControl.c ****             D_PRINTF(DEBUG, "%s volume knob change %ld -> %ld\n", (i == vol_ctrl_right) ? "Right" :
 137              		.loc 1 76 0
 138 002e 194B     		ldr	r3, .L14+8
 139 0030 1B68     		ldr	r3, [r3]
 140 0032 002B     		cmp	r3, #0
 141 0034 1CD0     		beq	.L8
 142              		.loc 1 76 0 is_stmt 0 discriminator 1
 143 0036 5B7C     		ldrb	r3, [r3, #17]
 144 0038 9B07     		lsls	r3, r3, #30
 145 003a 19D0     		beq	.L8
 146              		.loc 1 76 0 discriminator 2
 147 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 148              	.LVL7:
 149 0040 0028     		cmp	r0, #0
 150 0042 15D0     		beq	.L8
 151              	.L9:
 152              		.loc 1 76 0 discriminator 3
 153 0044 FFF7FEFF 		bl	USBUART_CDCIsReady
 154              	.LVL8:
 155 0048 0028     		cmp	r0, #0
 156 004a FBD0     		beq	.L9
 157              		.loc 1 76 0 discriminator 4
 158 004c 002C     		cmp	r4, #0
 159 004e 01D1     		bne	.L13
 160              		.loc 1 76 0
 161 0050 114A     		ldr	r2, .L14+12
 162 0052 00E0     		b	.L10
 163              	.L13:
 164 0054 114A     		ldr	r2, .L14+16
 165              	.L10:
 166              		.loc 1 76 0 discriminator 8
 167 0056 A300     		lsls	r3, r4, #2
 168 0058 0C49     		ldr	r1, .L14
 169 005a CB18     		adds	r3, r1, r3
 170 005c 5B68     		ldr	r3, [r3, #4]
 171 005e 104D     		ldr	r5, .L14+20
 172 0060 0097     		str	r7, [sp]
 173 0062 1049     		ldr	r1, .L14+24
 174 0064 2800     		movs	r0, r5
 175 0066 FFF7FEFF 		bl	sprintf
 176              	.LVL9:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 20


 177 006a 2800     		movs	r0, r5
 178 006c FFF7FEFF 		bl	USBUART_PutString
 179              	.LVL10:
 180              	.L8:
  77:VolumeControl.c ****             
  78:VolumeControl.c ****             if (i == vol_ctrl_right)
 181              		.loc 1 78 0 is_stmt 1
 182 0070 002C     		cmp	r4, #0
 183 0072 02D1     		bne	.L11
  79:VolumeControl.c ****             {
  80:VolumeControl.c ****     		    Codec_AdjustBothHeadphoneVolumeLevel(volume[i]);
 184              		.loc 1 80 0
 185 0074 F8B2     		uxtb	r0, r7
 186 0076 FFF7FEFF 		bl	Codec_AdjustBothHeadphoneVolumeLevel
 187              	.LVL11:
 188              	.L11:
  81:VolumeControl.c ****             }
  82:VolumeControl.c ****             else
  83:VolumeControl.c ****             {
  84:VolumeControl.c ****             }
  85:VolumeControl.c ****             prevVol[i] = volume[i];
 189              		.loc 1 85 0
 190 007a A300     		lsls	r3, r4, #2
 191 007c 034A     		ldr	r2, .L14
 192 007e D318     		adds	r3, r2, r3
 193 0080 5F60     		str	r7, [r3, #4]
 194              	.L7:
  55:VolumeControl.c **** 	{
 195              		.loc 1 55 0 discriminator 2
 196 0082 0134     		adds	r4, r4, #1
 197              	.LVL12:
 198              	.L6:
  55:VolumeControl.c **** 	{
 199              		.loc 1 55 0 is_stmt 0 discriminator 1
 200 0084 012C     		cmp	r4, #1
 201 0086 BFDD     		ble	.L12
  86:VolumeControl.c ****         }
  87:VolumeControl.c ****     }
  88:VolumeControl.c **** }
 202              		.loc 1 88 0 is_stmt 1
 203 0088 03B0     		add	sp, sp, #12
 204              		@ sp needed
 205              	.LVL13:
 206 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 207              	.L15:
 208              		.align	2
 209              	.L14:
 210 008c 00000000 		.word	.LANCHOR0
 211 0090 00000000 		.word	.LANCHOR1
 212 0094 00000000 		.word	cal_data
 213 0098 00000000 		.word	.LC2
 214 009c 08000000 		.word	.LC4
 215 00a0 00000000 		.word	gbuf
 216 00a4 10000000 		.word	.LC9
 217              		.cfi_endproc
 218              	.LFE36:
 219              		.size	VolumeControlService, .-VolumeControlService
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 21


 220              		.global	adcSample
 221              		.global	ADC_MAX_READING
 222              		.global	ADC_MIN_READING
 223              		.data
 224              		.align	2
 225              		.set	.LANCHOR1,. + 0
 226              		.type	ADC_MIN_READING, %object
 227              		.size	ADC_MIN_READING, 8
 228              	ADC_MIN_READING:
 229 0000 FEFFFFFF 		.word	-2
 230 0004 FEFFFFFF 		.word	-2
 231              		.type	ADC_MAX_READING, %object
 232              		.size	ADC_MAX_READING, 8
 233              	ADC_MAX_READING:
 234 0008 FF070000 		.word	2047
 235 000c FF070000 		.word	2047
 236              		.section	.rodata.str1.4,"aMS",%progbits,1
 237              		.align	2
 238              	.LC2:
 239 0000 52696768 		.ascii	"Right\000"
 239      7400
 240 0006 0000     		.space	2
 241              	.LC4:
 242 0008 4C656674 		.ascii	"Left\000"
 242      00
 243 000d 000000   		.space	3
 244              	.LC9:
 245 0010 25732076 		.ascii	"%s volume knob change %ld -> %ld\012\000"
 245      6F6C756D 
 245      65206B6E 
 245      6F622063 
 245      68616E67 
 246              		.bss
 247              		.align	2
 248              		.set	.LANCHOR0,. + 0
 249              		.type	adcSample, %object
 250              		.size	adcSample, 4
 251              	adcSample:
 252 0000 00000000 		.space	4
 253              		.type	prevVol.6962, %object
 254              		.size	prevVol.6962, 8
 255              	prevVol.6962:
 256 0004 00000000 		.space	8
 256      00000000 
 257              		.text
 258              	.Letext0:
 259              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 260              		.file 4 "./Calibration.h"
 261              		.file 5 "Generated_Source\\PSoC4/CyDMA.h"
 262              		.file 6 "./Application.h"
 263              		.file 7 "Generated_Source\\PSoC4/ADC.h"
 264              		.file 8 "Generated_Source\\PSoC4/USBUART.h"
 265              		.file 9 "Generated_Source\\PSoC4/USBUART_cdc.h"
 266              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 267              		.file 11 "./Codec.h"
 268              		.file 12 "VolumeControl.h"
 269              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 22


 270              	.Ldebug_info0:
 271 0000 7C030000 		.4byte	0x37c
 272 0004 0400     		.2byte	0x4
 273 0006 00000000 		.4byte	.Ldebug_abbrev0
 274 000a 04       		.byte	0x4
 275 000b 01       		.uleb128 0x1
 276 000c 00020000 		.4byte	.LASF47
 277 0010 0C       		.byte	0xc
 278 0011 06000000 		.4byte	.LASF48
 279 0015 05010000 		.4byte	.LASF49
 280 0019 00000000 		.4byte	.Ldebug_ranges0+0
 281 001d 00000000 		.4byte	0
 282 0021 00000000 		.4byte	.Ldebug_line0
 283 0025 02       		.uleb128 0x2
 284 0026 01       		.byte	0x1
 285 0027 06       		.byte	0x6
 286 0028 2F030000 		.4byte	.LASF0
 287 002c 02       		.uleb128 0x2
 288 002d 01       		.byte	0x1
 289 002e 08       		.byte	0x8
 290 002f B3000000 		.4byte	.LASF1
 291 0033 02       		.uleb128 0x2
 292 0034 02       		.byte	0x2
 293 0035 05       		.byte	0x5
 294 0036 5C010000 		.4byte	.LASF2
 295 003a 02       		.uleb128 0x2
 296 003b 02       		.byte	0x2
 297 003c 07       		.byte	0x7
 298 003d 33000000 		.4byte	.LASF3
 299 0041 02       		.uleb128 0x2
 300 0042 04       		.byte	0x4
 301 0043 05       		.byte	0x5
 302 0044 11030000 		.4byte	.LASF4
 303 0048 02       		.uleb128 0x2
 304 0049 04       		.byte	0x4
 305 004a 07       		.byte	0x7
 306 004b 94010000 		.4byte	.LASF5
 307 004f 02       		.uleb128 0x2
 308 0050 08       		.byte	0x8
 309 0051 05       		.byte	0x5
 310 0052 A3020000 		.4byte	.LASF6
 311 0056 02       		.uleb128 0x2
 312 0057 08       		.byte	0x8
 313 0058 07       		.byte	0x7
 314 0059 B3010000 		.4byte	.LASF7
 315 005d 03       		.uleb128 0x3
 316 005e 04       		.byte	0x4
 317 005f 05       		.byte	0x5
 318 0060 696E7400 		.ascii	"int\000"
 319 0064 02       		.uleb128 0x2
 320 0065 04       		.byte	0x4
 321 0066 07       		.byte	0x7
 322 0067 A6010000 		.4byte	.LASF8
 323 006b 04       		.uleb128 0x4
 324 006c AD000000 		.4byte	.LASF9
 325 0070 03       		.byte	0x3
 326 0071 E401     		.2byte	0x1e4
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 23


 327 0073 2C000000 		.4byte	0x2c
 328 0077 04       		.uleb128 0x4
 329 0078 7F010000 		.4byte	.LASF10
 330 007c 03       		.byte	0x3
 331 007d E601     		.2byte	0x1e6
 332 007f 48000000 		.4byte	0x48
 333 0083 04       		.uleb128 0x4
 334 0084 FF000000 		.4byte	.LASF11
 335 0088 03       		.byte	0x3
 336 0089 E801     		.2byte	0x1e8
 337 008b 33000000 		.4byte	0x33
 338 008f 04       		.uleb128 0x4
 339 0090 2C010000 		.4byte	.LASF12
 340 0094 03       		.byte	0x3
 341 0095 E901     		.2byte	0x1e9
 342 0097 41000000 		.4byte	0x41
 343 009b 02       		.uleb128 0x2
 344 009c 04       		.byte	0x4
 345 009d 04       		.byte	0x4
 346 009e A0000000 		.4byte	.LASF13
 347 00a2 02       		.uleb128 0x2
 348 00a3 08       		.byte	0x8
 349 00a4 04       		.byte	0x4
 350 00a5 58000000 		.4byte	.LASF14
 351 00a9 02       		.uleb128 0x2
 352 00aa 01       		.byte	0x1
 353 00ab 08       		.byte	0x8
 354 00ac B1020000 		.4byte	.LASF15
 355 00b0 04       		.uleb128 0x4
 356 00b1 00000000 		.4byte	.LASF16
 357 00b5 03       		.byte	0x3
 358 00b6 9002     		.2byte	0x290
 359 00b8 BC000000 		.4byte	0xbc
 360 00bc 05       		.uleb128 0x5
 361 00bd 77000000 		.4byte	0x77
 362 00c1 06       		.uleb128 0x6
 363 00c2 04       		.byte	0x4
 364 00c3 C7000000 		.4byte	0xc7
 365 00c7 07       		.uleb128 0x7
 366 00c8 02       		.uleb128 0x2
 367 00c9 08       		.byte	0x8
 368 00ca 04       		.byte	0x4
 369 00cb 8E020000 		.4byte	.LASF17
 370 00cf 02       		.uleb128 0x2
 371 00d0 04       		.byte	0x4
 372 00d1 07       		.byte	0x7
 373 00d2 9A020000 		.4byte	.LASF18
 374 00d6 08       		.uleb128 0x8
 375 00d7 14       		.byte	0x14
 376 00d8 04       		.byte	0x4
 377 00d9 12       		.byte	0x12
 378 00da 27010000 		.4byte	0x127
 379 00de 09       		.uleb128 0x9
 380 00df 16000000 		.4byte	.LASF19
 381 00e3 04       		.byte	0x4
 382 00e4 14       		.byte	0x14
 383 00e5 77000000 		.4byte	0x77
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 24


 384 00e9 00       		.byte	0
 385 00ea 09       		.uleb128 0x9
 386 00eb 3B010000 		.4byte	.LASF20
 387 00ef 04       		.byte	0x4
 388 00f0 15       		.byte	0x15
 389 00f1 77000000 		.4byte	0x77
 390 00f5 04       		.byte	0x4
 391 00f6 09       		.uleb128 0x9
 392 00f7 B6020000 		.4byte	.LASF21
 393 00fb 04       		.byte	0x4
 394 00fc 16       		.byte	0x16
 395 00fd 27010000 		.4byte	0x127
 396 0101 08       		.byte	0x8
 397 0102 09       		.uleb128 0x9
 398 0103 CA010000 		.4byte	.LASF22
 399 0107 04       		.byte	0x4
 400 0108 17       		.byte	0x17
 401 0109 27010000 		.4byte	0x127
 402 010d 0C       		.byte	0xc
 403 010e 09       		.uleb128 0x9
 404 010f 20000000 		.4byte	.LASF23
 405 0113 04       		.byte	0x4
 406 0114 19       		.byte	0x19
 407 0115 6B000000 		.4byte	0x6b
 408 0119 10       		.byte	0x10
 409 011a 09       		.uleb128 0x9
 410 011b 51010000 		.4byte	.LASF24
 411 011f 04       		.byte	0x4
 412 0120 1A       		.byte	0x1a
 413 0121 6B000000 		.4byte	0x6b
 414 0125 11       		.byte	0x11
 415 0126 00       		.byte	0
 416 0127 0A       		.uleb128 0xa
 417 0128 83000000 		.4byte	0x83
 418 012c 37010000 		.4byte	0x137
 419 0130 0B       		.uleb128 0xb
 420 0131 CF000000 		.4byte	0xcf
 421 0135 01       		.byte	0x1
 422 0136 00       		.byte	0
 423 0137 0C       		.uleb128 0xc
 424 0138 FE020000 		.4byte	.LASF25
 425 013c 04       		.byte	0x4
 426 013d 1B       		.byte	0x1b
 427 013e D6000000 		.4byte	0xd6
 428 0142 0D       		.uleb128 0xd
 429 0143 01       		.byte	0x1
 430 0144 2C000000 		.4byte	0x2c
 431 0148 0C       		.byte	0xc
 432 0149 14       		.byte	0x14
 433 014a 61010000 		.4byte	0x161
 434 014e 0E       		.uleb128 0xe
 435 014f D8020000 		.4byte	.LASF26
 436 0153 00       		.byte	0
 437 0154 0E       		.uleb128 0xe
 438 0155 86010000 		.4byte	.LASF27
 439 0159 01       		.byte	0x1
 440 015a 0E       		.uleb128 0xe
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 25


 441 015b 43010000 		.4byte	.LASF28
 442 015f 02       		.byte	0x2
 443 0160 00       		.byte	0
 444 0161 0C       		.uleb128 0xc
 445 0162 EF010000 		.4byte	.LASF29
 446 0166 05       		.byte	0x5
 447 0167 67       		.byte	0x67
 448 0168 C1000000 		.4byte	0xc1
 449 016c 0F       		.uleb128 0xf
 450 016d C1000000 		.4byte	.LASF50
 451 0171 02       		.byte	0x2
 452 0172 3D03     		.2byte	0x33d
 453 0174 61010000 		.4byte	0x161
 454 0178 03       		.byte	0x3
 455 0179 8A010000 		.4byte	0x18a
 456 017d 10       		.uleb128 0x10
 457 017e 32010000 		.4byte	.LASF51
 458 0182 02       		.byte	0x2
 459 0183 3D03     		.2byte	0x33d
 460 0185 61010000 		.4byte	0x161
 461 0189 00       		.byte	0
 462 018a 11       		.uleb128 0x11
 463 018b 92000000 		.4byte	.LASF52
 464 018f 01       		.byte	0x1
 465 0190 1C       		.byte	0x1c
 466 0191 00000000 		.4byte	.LFB34
 467 0195 02000000 		.4byte	.LFE34-.LFB34
 468 0199 01       		.uleb128 0x1
 469 019a 9C       		.byte	0x9c
 470 019b 12       		.uleb128 0x12
 471 019c E7020000 		.4byte	.LASF30
 472 01a0 01       		.byte	0x1
 473 01a1 21       		.byte	0x21
 474 01a2 00000000 		.4byte	.LFB35
 475 01a6 28000000 		.4byte	.LFE35-.LFB35
 476 01aa 01       		.uleb128 0x1
 477 01ab 9C       		.byte	0x9c
 478 01ac 18020000 		.4byte	0x218
 479 01b0 13       		.uleb128 0x13
 480 01b1 6C010000 		.4byte	0x16c
 481 01b5 0E000000 		.4byte	.LBB4
 482 01b9 08000000 		.4byte	.LBE4-.LBB4
 483 01bd 01       		.byte	0x1
 484 01be 2B       		.byte	0x2b
 485 01bf E5010000 		.4byte	0x1e5
 486 01c3 14       		.uleb128 0x14
 487 01c4 7D010000 		.4byte	0x17d
 488 01c8 00000000 		.4byte	.LLST0
 489 01cc 15       		.uleb128 0x15
 490 01cd 16000000 		.4byte	.LVL2
 491 01d1 1B030000 		.4byte	0x31b
 492 01d5 16       		.uleb128 0x16
 493 01d6 01       		.uleb128 0x1
 494 01d7 50       		.byte	0x50
 495 01d8 01       		.uleb128 0x1
 496 01d9 32       		.byte	0x32
 497 01da 16       		.uleb128 0x16
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 26


 498 01db 01       		.uleb128 0x1
 499 01dc 51       		.byte	0x51
 500 01dd 05       		.uleb128 0x5
 501 01de 03       		.byte	0x3
 502 01df 00000000 		.4byte	DmaIntHandler
 503 01e3 00       		.byte	0
 504 01e4 00       		.byte	0
 505 01e5 17       		.uleb128 0x17
 506 01e6 06000000 		.4byte	.LVL0
 507 01ea 26030000 		.4byte	0x326
 508 01ee 18       		.uleb128 0x18
 509 01ef 0E000000 		.4byte	.LVL1
 510 01f3 31030000 		.4byte	0x331
 511 01f7 0E020000 		.4byte	0x20e
 512 01fb 16       		.uleb128 0x16
 513 01fc 01       		.uleb128 0x1
 514 01fd 50       		.byte	0x50
 515 01fe 05       		.uleb128 0x5
 516 01ff 0C       		.byte	0xc
 517 0200 80013A40 		.4byte	0x403a0180
 518 0204 16       		.uleb128 0x16
 519 0205 01       		.uleb128 0x1
 520 0206 51       		.byte	0x51
 521 0207 05       		.uleb128 0x5
 522 0208 03       		.byte	0x3
 523 0209 00000000 		.4byte	.LANCHOR0
 524 020d 00       		.byte	0
 525 020e 17       		.uleb128 0x17
 526 020f 1A000000 		.4byte	.LVL3
 527 0213 3C030000 		.4byte	0x33c
 528 0217 00       		.byte	0
 529 0218 19       		.uleb128 0x19
 530 0219 1A030000 		.4byte	.LASF31
 531 021d 01       		.byte	0x1
 532 021e 31       		.byte	0x31
 533 021f 00000000 		.4byte	.LFB36
 534 0223 A8000000 		.4byte	.LFE36-.LFB36
 535 0227 01       		.uleb128 0x1
 536 0228 9C       		.byte	0x9c
 537 0229 B1020000 		.4byte	0x2b1
 538 022d 1A       		.uleb128 0x1a
 539 022e 56030000 		.4byte	.LASF32
 540 0232 01       		.byte	0x1
 541 0233 33       		.byte	0x33
 542 0234 B1020000 		.4byte	0x2b1
 543 0238 05       		.uleb128 0x5
 544 0239 03       		.byte	0x3
 545 023a 04000000 		.4byte	prevVol.6962
 546 023e 1B       		.uleb128 0x1b
 547 023f A6000000 		.4byte	.LASF53
 548 0243 01       		.byte	0x1
 549 0244 34       		.byte	0x34
 550 0245 B1020000 		.4byte	0x2b1
 551 0249 1C       		.uleb128 0x1c
 552 024a 6900     		.ascii	"i\000"
 553 024c 01       		.byte	0x1
 554 024d 35       		.byte	0x35
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 27


 555 024e 5D000000 		.4byte	0x5d
 556 0252 18000000 		.4byte	.LLST1
 557 0256 17       		.uleb128 0x17
 558 0257 40000000 		.4byte	.LVL7
 559 025b 47030000 		.4byte	0x347
 560 025f 17       		.uleb128 0x17
 561 0260 48000000 		.4byte	.LVL8
 562 0264 53030000 		.4byte	0x353
 563 0268 18       		.uleb128 0x18
 564 0269 6A000000 		.4byte	.LVL9
 565 026d 5E030000 		.4byte	0x35e
 566 0271 8C020000 		.4byte	0x28c
 567 0275 16       		.uleb128 0x16
 568 0276 01       		.uleb128 0x1
 569 0277 50       		.byte	0x50
 570 0278 02       		.uleb128 0x2
 571 0279 75       		.byte	0x75
 572 027a 00       		.sleb128 0
 573 027b 16       		.uleb128 0x16
 574 027c 01       		.uleb128 0x1
 575 027d 51       		.byte	0x51
 576 027e 05       		.uleb128 0x5
 577 027f 03       		.byte	0x3
 578 0280 10000000 		.4byte	.LC9
 579 0284 16       		.uleb128 0x16
 580 0285 02       		.uleb128 0x2
 581 0286 7D       		.byte	0x7d
 582 0287 00       		.sleb128 0
 583 0288 02       		.uleb128 0x2
 584 0289 77       		.byte	0x77
 585 028a 00       		.sleb128 0
 586 028b 00       		.byte	0
 587 028c 18       		.uleb128 0x18
 588 028d 70000000 		.4byte	.LVL10
 589 0291 69030000 		.4byte	0x369
 590 0295 A0020000 		.4byte	0x2a0
 591 0299 16       		.uleb128 0x16
 592 029a 01       		.uleb128 0x1
 593 029b 50       		.byte	0x50
 594 029c 02       		.uleb128 0x2
 595 029d 75       		.byte	0x75
 596 029e 00       		.sleb128 0
 597 029f 00       		.byte	0
 598 02a0 15       		.uleb128 0x15
 599 02a1 7A000000 		.4byte	.LVL11
 600 02a5 74030000 		.4byte	0x374
 601 02a9 16       		.uleb128 0x16
 602 02aa 01       		.uleb128 0x1
 603 02ab 50       		.byte	0x50
 604 02ac 02       		.uleb128 0x2
 605 02ad 77       		.byte	0x77
 606 02ae 00       		.sleb128 0
 607 02af 00       		.byte	0
 608 02b0 00       		.byte	0
 609 02b1 0A       		.uleb128 0xa
 610 02b2 8F000000 		.4byte	0x8f
 611 02b6 C1020000 		.4byte	0x2c1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 28


 612 02ba 0B       		.uleb128 0xb
 613 02bb CF000000 		.4byte	0xcf
 614 02bf 01       		.byte	0x1
 615 02c0 00       		.byte	0
 616 02c1 1D       		.uleb128 0x1d
 617 02c2 76010000 		.4byte	.LASF33
 618 02c6 04       		.byte	0x4
 619 02c7 1D       		.byte	0x1d
 620 02c8 CC020000 		.4byte	0x2cc
 621 02cc 06       		.uleb128 0x6
 622 02cd 04       		.byte	0x4
 623 02ce 37010000 		.4byte	0x137
 624 02d2 0A       		.uleb128 0xa
 625 02d3 A9000000 		.4byte	0xa9
 626 02d7 DD020000 		.4byte	0x2dd
 627 02db 1E       		.uleb128 0x1e
 628 02dc 00       		.byte	0
 629 02dd 1D       		.uleb128 0x1d
 630 02de F9020000 		.4byte	.LASF34
 631 02e2 06       		.byte	0x6
 632 02e3 3C       		.byte	0x3c
 633 02e4 D2020000 		.4byte	0x2d2
 634 02e8 1F       		.uleb128 0x1f
 635 02e9 CE020000 		.4byte	.LASF35
 636 02ed 01       		.byte	0x1
 637 02ee 1A       		.byte	0x1a
 638 02ef 27010000 		.4byte	0x127
 639 02f3 05       		.uleb128 0x5
 640 02f4 03       		.byte	0x3
 641 02f5 00000000 		.4byte	adcSample
 642 02f9 1F       		.uleb128 0x1f
 643 02fa BE020000 		.4byte	.LASF36
 644 02fe 01       		.byte	0x1
 645 02ff 14       		.byte	0x14
 646 0300 B1020000 		.4byte	0x2b1
 647 0304 05       		.uleb128 0x5
 648 0305 03       		.byte	0x3
 649 0306 00000000 		.4byte	ADC_MIN_READING
 650 030a 1F       		.uleb128 0x1f
 651 030b 66010000 		.4byte	.LASF37
 652 030f 01       		.byte	0x1
 653 0310 15       		.byte	0x15
 654 0311 B1020000 		.4byte	0x2b1
 655 0315 05       		.uleb128 0x5
 656 0316 03       		.byte	0x3
 657 0317 00000000 		.4byte	ADC_MAX_READING
 658 031b 20       		.uleb128 0x20
 659 031c 78000000 		.4byte	.LASF38
 660 0320 78000000 		.4byte	.LASF38
 661 0324 05       		.byte	0x5
 662 0325 7B       		.byte	0x7b
 663 0326 20       		.uleb128 0x20
 664 0327 E5010000 		.4byte	.LASF39
 665 032b E5010000 		.4byte	.LASF39
 666 032f 07       		.byte	0x7
 667 0330 99       		.byte	0x99
 668 0331 20       		.uleb128 0x20
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 29


 669 0332 3B030000 		.4byte	.LASF40
 670 0336 3B030000 		.4byte	.LASF40
 671 033a 02       		.byte	0x2
 672 033b 23       		.byte	0x23
 673 033c 20       		.uleb128 0x20
 674 033d 45030000 		.4byte	.LASF41
 675 0341 45030000 		.4byte	.LASF41
 676 0345 07       		.byte	0x7
 677 0346 9D       		.byte	0x9d
 678 0347 21       		.uleb128 0x21
 679 0348 5F000000 		.4byte	.LASF42
 680 034c 5F000000 		.4byte	.LASF42
 681 0350 08       		.byte	0x8
 682 0351 3201     		.2byte	0x132
 683 0353 20       		.uleb128 0x20
 684 0354 D2010000 		.4byte	.LASF43
 685 0358 D2010000 		.4byte	.LASF43
 686 035c 09       		.byte	0x9
 687 035d 28       		.byte	0x28
 688 035e 20       		.uleb128 0x20
 689 035f 5E030000 		.4byte	.LASF44
 690 0363 5E030000 		.4byte	.LASF44
 691 0367 0A       		.byte	0xa
 692 0368 E7       		.byte	0xe7
 693 0369 20       		.uleb128 0x20
 694 036a 46000000 		.4byte	.LASF45
 695 036e 46000000 		.4byte	.LASF45
 696 0372 09       		.byte	0x9
 697 0373 24       		.byte	0x24
 698 0374 20       		.uleb128 0x20
 699 0375 DA000000 		.4byte	.LASF46
 700 0379 DA000000 		.4byte	.LASF46
 701 037d 0B       		.byte	0xb
 702 037e AC       		.byte	0xac
 703 037f 00       		.byte	0
 704              		.section	.debug_abbrev,"",%progbits
 705              	.Ldebug_abbrev0:
 706 0000 01       		.uleb128 0x1
 707 0001 11       		.uleb128 0x11
 708 0002 01       		.byte	0x1
 709 0003 25       		.uleb128 0x25
 710 0004 0E       		.uleb128 0xe
 711 0005 13       		.uleb128 0x13
 712 0006 0B       		.uleb128 0xb
 713 0007 03       		.uleb128 0x3
 714 0008 0E       		.uleb128 0xe
 715 0009 1B       		.uleb128 0x1b
 716 000a 0E       		.uleb128 0xe
 717 000b 55       		.uleb128 0x55
 718 000c 17       		.uleb128 0x17
 719 000d 11       		.uleb128 0x11
 720 000e 01       		.uleb128 0x1
 721 000f 10       		.uleb128 0x10
 722 0010 17       		.uleb128 0x17
 723 0011 00       		.byte	0
 724 0012 00       		.byte	0
 725 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 30


 726 0014 24       		.uleb128 0x24
 727 0015 00       		.byte	0
 728 0016 0B       		.uleb128 0xb
 729 0017 0B       		.uleb128 0xb
 730 0018 3E       		.uleb128 0x3e
 731 0019 0B       		.uleb128 0xb
 732 001a 03       		.uleb128 0x3
 733 001b 0E       		.uleb128 0xe
 734 001c 00       		.byte	0
 735 001d 00       		.byte	0
 736 001e 03       		.uleb128 0x3
 737 001f 24       		.uleb128 0x24
 738 0020 00       		.byte	0
 739 0021 0B       		.uleb128 0xb
 740 0022 0B       		.uleb128 0xb
 741 0023 3E       		.uleb128 0x3e
 742 0024 0B       		.uleb128 0xb
 743 0025 03       		.uleb128 0x3
 744 0026 08       		.uleb128 0x8
 745 0027 00       		.byte	0
 746 0028 00       		.byte	0
 747 0029 04       		.uleb128 0x4
 748 002a 16       		.uleb128 0x16
 749 002b 00       		.byte	0
 750 002c 03       		.uleb128 0x3
 751 002d 0E       		.uleb128 0xe
 752 002e 3A       		.uleb128 0x3a
 753 002f 0B       		.uleb128 0xb
 754 0030 3B       		.uleb128 0x3b
 755 0031 05       		.uleb128 0x5
 756 0032 49       		.uleb128 0x49
 757 0033 13       		.uleb128 0x13
 758 0034 00       		.byte	0
 759 0035 00       		.byte	0
 760 0036 05       		.uleb128 0x5
 761 0037 35       		.uleb128 0x35
 762 0038 00       		.byte	0
 763 0039 49       		.uleb128 0x49
 764 003a 13       		.uleb128 0x13
 765 003b 00       		.byte	0
 766 003c 00       		.byte	0
 767 003d 06       		.uleb128 0x6
 768 003e 0F       		.uleb128 0xf
 769 003f 00       		.byte	0
 770 0040 0B       		.uleb128 0xb
 771 0041 0B       		.uleb128 0xb
 772 0042 49       		.uleb128 0x49
 773 0043 13       		.uleb128 0x13
 774 0044 00       		.byte	0
 775 0045 00       		.byte	0
 776 0046 07       		.uleb128 0x7
 777 0047 15       		.uleb128 0x15
 778 0048 00       		.byte	0
 779 0049 27       		.uleb128 0x27
 780 004a 19       		.uleb128 0x19
 781 004b 00       		.byte	0
 782 004c 00       		.byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 31


 783 004d 08       		.uleb128 0x8
 784 004e 13       		.uleb128 0x13
 785 004f 01       		.byte	0x1
 786 0050 0B       		.uleb128 0xb
 787 0051 0B       		.uleb128 0xb
 788 0052 3A       		.uleb128 0x3a
 789 0053 0B       		.uleb128 0xb
 790 0054 3B       		.uleb128 0x3b
 791 0055 0B       		.uleb128 0xb
 792 0056 01       		.uleb128 0x1
 793 0057 13       		.uleb128 0x13
 794 0058 00       		.byte	0
 795 0059 00       		.byte	0
 796 005a 09       		.uleb128 0x9
 797 005b 0D       		.uleb128 0xd
 798 005c 00       		.byte	0
 799 005d 03       		.uleb128 0x3
 800 005e 0E       		.uleb128 0xe
 801 005f 3A       		.uleb128 0x3a
 802 0060 0B       		.uleb128 0xb
 803 0061 3B       		.uleb128 0x3b
 804 0062 0B       		.uleb128 0xb
 805 0063 49       		.uleb128 0x49
 806 0064 13       		.uleb128 0x13
 807 0065 38       		.uleb128 0x38
 808 0066 0B       		.uleb128 0xb
 809 0067 00       		.byte	0
 810 0068 00       		.byte	0
 811 0069 0A       		.uleb128 0xa
 812 006a 01       		.uleb128 0x1
 813 006b 01       		.byte	0x1
 814 006c 49       		.uleb128 0x49
 815 006d 13       		.uleb128 0x13
 816 006e 01       		.uleb128 0x1
 817 006f 13       		.uleb128 0x13
 818 0070 00       		.byte	0
 819 0071 00       		.byte	0
 820 0072 0B       		.uleb128 0xb
 821 0073 21       		.uleb128 0x21
 822 0074 00       		.byte	0
 823 0075 49       		.uleb128 0x49
 824 0076 13       		.uleb128 0x13
 825 0077 2F       		.uleb128 0x2f
 826 0078 0B       		.uleb128 0xb
 827 0079 00       		.byte	0
 828 007a 00       		.byte	0
 829 007b 0C       		.uleb128 0xc
 830 007c 16       		.uleb128 0x16
 831 007d 00       		.byte	0
 832 007e 03       		.uleb128 0x3
 833 007f 0E       		.uleb128 0xe
 834 0080 3A       		.uleb128 0x3a
 835 0081 0B       		.uleb128 0xb
 836 0082 3B       		.uleb128 0x3b
 837 0083 0B       		.uleb128 0xb
 838 0084 49       		.uleb128 0x49
 839 0085 13       		.uleb128 0x13
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 32


 840 0086 00       		.byte	0
 841 0087 00       		.byte	0
 842 0088 0D       		.uleb128 0xd
 843 0089 04       		.uleb128 0x4
 844 008a 01       		.byte	0x1
 845 008b 0B       		.uleb128 0xb
 846 008c 0B       		.uleb128 0xb
 847 008d 49       		.uleb128 0x49
 848 008e 13       		.uleb128 0x13
 849 008f 3A       		.uleb128 0x3a
 850 0090 0B       		.uleb128 0xb
 851 0091 3B       		.uleb128 0x3b
 852 0092 0B       		.uleb128 0xb
 853 0093 01       		.uleb128 0x1
 854 0094 13       		.uleb128 0x13
 855 0095 00       		.byte	0
 856 0096 00       		.byte	0
 857 0097 0E       		.uleb128 0xe
 858 0098 28       		.uleb128 0x28
 859 0099 00       		.byte	0
 860 009a 03       		.uleb128 0x3
 861 009b 0E       		.uleb128 0xe
 862 009c 1C       		.uleb128 0x1c
 863 009d 0B       		.uleb128 0xb
 864 009e 00       		.byte	0
 865 009f 00       		.byte	0
 866 00a0 0F       		.uleb128 0xf
 867 00a1 2E       		.uleb128 0x2e
 868 00a2 01       		.byte	0x1
 869 00a3 03       		.uleb128 0x3
 870 00a4 0E       		.uleb128 0xe
 871 00a5 3A       		.uleb128 0x3a
 872 00a6 0B       		.uleb128 0xb
 873 00a7 3B       		.uleb128 0x3b
 874 00a8 05       		.uleb128 0x5
 875 00a9 27       		.uleb128 0x27
 876 00aa 19       		.uleb128 0x19
 877 00ab 49       		.uleb128 0x49
 878 00ac 13       		.uleb128 0x13
 879 00ad 20       		.uleb128 0x20
 880 00ae 0B       		.uleb128 0xb
 881 00af 01       		.uleb128 0x1
 882 00b0 13       		.uleb128 0x13
 883 00b1 00       		.byte	0
 884 00b2 00       		.byte	0
 885 00b3 10       		.uleb128 0x10
 886 00b4 05       		.uleb128 0x5
 887 00b5 00       		.byte	0
 888 00b6 03       		.uleb128 0x3
 889 00b7 0E       		.uleb128 0xe
 890 00b8 3A       		.uleb128 0x3a
 891 00b9 0B       		.uleb128 0xb
 892 00ba 3B       		.uleb128 0x3b
 893 00bb 05       		.uleb128 0x5
 894 00bc 49       		.uleb128 0x49
 895 00bd 13       		.uleb128 0x13
 896 00be 00       		.byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 33


 897 00bf 00       		.byte	0
 898 00c0 11       		.uleb128 0x11
 899 00c1 2E       		.uleb128 0x2e
 900 00c2 00       		.byte	0
 901 00c3 3F       		.uleb128 0x3f
 902 00c4 19       		.uleb128 0x19
 903 00c5 03       		.uleb128 0x3
 904 00c6 0E       		.uleb128 0xe
 905 00c7 3A       		.uleb128 0x3a
 906 00c8 0B       		.uleb128 0xb
 907 00c9 3B       		.uleb128 0x3b
 908 00ca 0B       		.uleb128 0xb
 909 00cb 27       		.uleb128 0x27
 910 00cc 19       		.uleb128 0x19
 911 00cd 11       		.uleb128 0x11
 912 00ce 01       		.uleb128 0x1
 913 00cf 12       		.uleb128 0x12
 914 00d0 06       		.uleb128 0x6
 915 00d1 40       		.uleb128 0x40
 916 00d2 18       		.uleb128 0x18
 917 00d3 9742     		.uleb128 0x2117
 918 00d5 19       		.uleb128 0x19
 919 00d6 00       		.byte	0
 920 00d7 00       		.byte	0
 921 00d8 12       		.uleb128 0x12
 922 00d9 2E       		.uleb128 0x2e
 923 00da 01       		.byte	0x1
 924 00db 3F       		.uleb128 0x3f
 925 00dc 19       		.uleb128 0x19
 926 00dd 03       		.uleb128 0x3
 927 00de 0E       		.uleb128 0xe
 928 00df 3A       		.uleb128 0x3a
 929 00e0 0B       		.uleb128 0xb
 930 00e1 3B       		.uleb128 0x3b
 931 00e2 0B       		.uleb128 0xb
 932 00e3 27       		.uleb128 0x27
 933 00e4 19       		.uleb128 0x19
 934 00e5 11       		.uleb128 0x11
 935 00e6 01       		.uleb128 0x1
 936 00e7 12       		.uleb128 0x12
 937 00e8 06       		.uleb128 0x6
 938 00e9 40       		.uleb128 0x40
 939 00ea 18       		.uleb128 0x18
 940 00eb 9742     		.uleb128 0x2117
 941 00ed 19       		.uleb128 0x19
 942 00ee 01       		.uleb128 0x1
 943 00ef 13       		.uleb128 0x13
 944 00f0 00       		.byte	0
 945 00f1 00       		.byte	0
 946 00f2 13       		.uleb128 0x13
 947 00f3 1D       		.uleb128 0x1d
 948 00f4 01       		.byte	0x1
 949 00f5 31       		.uleb128 0x31
 950 00f6 13       		.uleb128 0x13
 951 00f7 11       		.uleb128 0x11
 952 00f8 01       		.uleb128 0x1
 953 00f9 12       		.uleb128 0x12
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 34


 954 00fa 06       		.uleb128 0x6
 955 00fb 58       		.uleb128 0x58
 956 00fc 0B       		.uleb128 0xb
 957 00fd 59       		.uleb128 0x59
 958 00fe 0B       		.uleb128 0xb
 959 00ff 01       		.uleb128 0x1
 960 0100 13       		.uleb128 0x13
 961 0101 00       		.byte	0
 962 0102 00       		.byte	0
 963 0103 14       		.uleb128 0x14
 964 0104 05       		.uleb128 0x5
 965 0105 00       		.byte	0
 966 0106 31       		.uleb128 0x31
 967 0107 13       		.uleb128 0x13
 968 0108 02       		.uleb128 0x2
 969 0109 17       		.uleb128 0x17
 970 010a 00       		.byte	0
 971 010b 00       		.byte	0
 972 010c 15       		.uleb128 0x15
 973 010d 898201   		.uleb128 0x4109
 974 0110 01       		.byte	0x1
 975 0111 11       		.uleb128 0x11
 976 0112 01       		.uleb128 0x1
 977 0113 31       		.uleb128 0x31
 978 0114 13       		.uleb128 0x13
 979 0115 00       		.byte	0
 980 0116 00       		.byte	0
 981 0117 16       		.uleb128 0x16
 982 0118 8A8201   		.uleb128 0x410a
 983 011b 00       		.byte	0
 984 011c 02       		.uleb128 0x2
 985 011d 18       		.uleb128 0x18
 986 011e 9142     		.uleb128 0x2111
 987 0120 18       		.uleb128 0x18
 988 0121 00       		.byte	0
 989 0122 00       		.byte	0
 990 0123 17       		.uleb128 0x17
 991 0124 898201   		.uleb128 0x4109
 992 0127 00       		.byte	0
 993 0128 11       		.uleb128 0x11
 994 0129 01       		.uleb128 0x1
 995 012a 31       		.uleb128 0x31
 996 012b 13       		.uleb128 0x13
 997 012c 00       		.byte	0
 998 012d 00       		.byte	0
 999 012e 18       		.uleb128 0x18
 1000 012f 898201   		.uleb128 0x4109
 1001 0132 01       		.byte	0x1
 1002 0133 11       		.uleb128 0x11
 1003 0134 01       		.uleb128 0x1
 1004 0135 31       		.uleb128 0x31
 1005 0136 13       		.uleb128 0x13
 1006 0137 01       		.uleb128 0x1
 1007 0138 13       		.uleb128 0x13
 1008 0139 00       		.byte	0
 1009 013a 00       		.byte	0
 1010 013b 19       		.uleb128 0x19
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 35


 1011 013c 2E       		.uleb128 0x2e
 1012 013d 01       		.byte	0x1
 1013 013e 3F       		.uleb128 0x3f
 1014 013f 19       		.uleb128 0x19
 1015 0140 03       		.uleb128 0x3
 1016 0141 0E       		.uleb128 0xe
 1017 0142 3A       		.uleb128 0x3a
 1018 0143 0B       		.uleb128 0xb
 1019 0144 3B       		.uleb128 0x3b
 1020 0145 0B       		.uleb128 0xb
 1021 0146 27       		.uleb128 0x27
 1022 0147 19       		.uleb128 0x19
 1023 0148 11       		.uleb128 0x11
 1024 0149 01       		.uleb128 0x1
 1025 014a 12       		.uleb128 0x12
 1026 014b 06       		.uleb128 0x6
 1027 014c 40       		.uleb128 0x40
 1028 014d 18       		.uleb128 0x18
 1029 014e 9642     		.uleb128 0x2116
 1030 0150 19       		.uleb128 0x19
 1031 0151 01       		.uleb128 0x1
 1032 0152 13       		.uleb128 0x13
 1033 0153 00       		.byte	0
 1034 0154 00       		.byte	0
 1035 0155 1A       		.uleb128 0x1a
 1036 0156 34       		.uleb128 0x34
 1037 0157 00       		.byte	0
 1038 0158 03       		.uleb128 0x3
 1039 0159 0E       		.uleb128 0xe
 1040 015a 3A       		.uleb128 0x3a
 1041 015b 0B       		.uleb128 0xb
 1042 015c 3B       		.uleb128 0x3b
 1043 015d 0B       		.uleb128 0xb
 1044 015e 49       		.uleb128 0x49
 1045 015f 13       		.uleb128 0x13
 1046 0160 02       		.uleb128 0x2
 1047 0161 18       		.uleb128 0x18
 1048 0162 00       		.byte	0
 1049 0163 00       		.byte	0
 1050 0164 1B       		.uleb128 0x1b
 1051 0165 34       		.uleb128 0x34
 1052 0166 00       		.byte	0
 1053 0167 03       		.uleb128 0x3
 1054 0168 0E       		.uleb128 0xe
 1055 0169 3A       		.uleb128 0x3a
 1056 016a 0B       		.uleb128 0xb
 1057 016b 3B       		.uleb128 0x3b
 1058 016c 0B       		.uleb128 0xb
 1059 016d 49       		.uleb128 0x49
 1060 016e 13       		.uleb128 0x13
 1061 016f 00       		.byte	0
 1062 0170 00       		.byte	0
 1063 0171 1C       		.uleb128 0x1c
 1064 0172 34       		.uleb128 0x34
 1065 0173 00       		.byte	0
 1066 0174 03       		.uleb128 0x3
 1067 0175 08       		.uleb128 0x8
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 36


 1068 0176 3A       		.uleb128 0x3a
 1069 0177 0B       		.uleb128 0xb
 1070 0178 3B       		.uleb128 0x3b
 1071 0179 0B       		.uleb128 0xb
 1072 017a 49       		.uleb128 0x49
 1073 017b 13       		.uleb128 0x13
 1074 017c 02       		.uleb128 0x2
 1075 017d 17       		.uleb128 0x17
 1076 017e 00       		.byte	0
 1077 017f 00       		.byte	0
 1078 0180 1D       		.uleb128 0x1d
 1079 0181 34       		.uleb128 0x34
 1080 0182 00       		.byte	0
 1081 0183 03       		.uleb128 0x3
 1082 0184 0E       		.uleb128 0xe
 1083 0185 3A       		.uleb128 0x3a
 1084 0186 0B       		.uleb128 0xb
 1085 0187 3B       		.uleb128 0x3b
 1086 0188 0B       		.uleb128 0xb
 1087 0189 49       		.uleb128 0x49
 1088 018a 13       		.uleb128 0x13
 1089 018b 3F       		.uleb128 0x3f
 1090 018c 19       		.uleb128 0x19
 1091 018d 3C       		.uleb128 0x3c
 1092 018e 19       		.uleb128 0x19
 1093 018f 00       		.byte	0
 1094 0190 00       		.byte	0
 1095 0191 1E       		.uleb128 0x1e
 1096 0192 21       		.uleb128 0x21
 1097 0193 00       		.byte	0
 1098 0194 00       		.byte	0
 1099 0195 00       		.byte	0
 1100 0196 1F       		.uleb128 0x1f
 1101 0197 34       		.uleb128 0x34
 1102 0198 00       		.byte	0
 1103 0199 03       		.uleb128 0x3
 1104 019a 0E       		.uleb128 0xe
 1105 019b 3A       		.uleb128 0x3a
 1106 019c 0B       		.uleb128 0xb
 1107 019d 3B       		.uleb128 0x3b
 1108 019e 0B       		.uleb128 0xb
 1109 019f 49       		.uleb128 0x49
 1110 01a0 13       		.uleb128 0x13
 1111 01a1 3F       		.uleb128 0x3f
 1112 01a2 19       		.uleb128 0x19
 1113 01a3 02       		.uleb128 0x2
 1114 01a4 18       		.uleb128 0x18
 1115 01a5 00       		.byte	0
 1116 01a6 00       		.byte	0
 1117 01a7 20       		.uleb128 0x20
 1118 01a8 2E       		.uleb128 0x2e
 1119 01a9 00       		.byte	0
 1120 01aa 3F       		.uleb128 0x3f
 1121 01ab 19       		.uleb128 0x19
 1122 01ac 3C       		.uleb128 0x3c
 1123 01ad 19       		.uleb128 0x19
 1124 01ae 6E       		.uleb128 0x6e
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 37


 1125 01af 0E       		.uleb128 0xe
 1126 01b0 03       		.uleb128 0x3
 1127 01b1 0E       		.uleb128 0xe
 1128 01b2 3A       		.uleb128 0x3a
 1129 01b3 0B       		.uleb128 0xb
 1130 01b4 3B       		.uleb128 0x3b
 1131 01b5 0B       		.uleb128 0xb
 1132 01b6 00       		.byte	0
 1133 01b7 00       		.byte	0
 1134 01b8 21       		.uleb128 0x21
 1135 01b9 2E       		.uleb128 0x2e
 1136 01ba 00       		.byte	0
 1137 01bb 3F       		.uleb128 0x3f
 1138 01bc 19       		.uleb128 0x19
 1139 01bd 3C       		.uleb128 0x3c
 1140 01be 19       		.uleb128 0x19
 1141 01bf 6E       		.uleb128 0x6e
 1142 01c0 0E       		.uleb128 0xe
 1143 01c1 03       		.uleb128 0x3
 1144 01c2 0E       		.uleb128 0xe
 1145 01c3 3A       		.uleb128 0x3a
 1146 01c4 0B       		.uleb128 0xb
 1147 01c5 3B       		.uleb128 0x3b
 1148 01c6 05       		.uleb128 0x5
 1149 01c7 00       		.byte	0
 1150 01c8 00       		.byte	0
 1151 01c9 00       		.byte	0
 1152              		.section	.debug_loc,"",%progbits
 1153              	.Ldebug_loc0:
 1154              	.LLST0:
 1155 0000 0E000000 		.4byte	.LVL1
 1156 0004 16000000 		.4byte	.LVL2
 1157 0008 0600     		.2byte	0x6
 1158 000a 03       		.byte	0x3
 1159 000b 00000000 		.4byte	DmaIntHandler
 1160 000f 9F       		.byte	0x9f
 1161 0010 00000000 		.4byte	0
 1162 0014 00000000 		.4byte	0
 1163              	.LLST1:
 1164 0018 04000000 		.4byte	.LVL4
 1165 001c 08000000 		.4byte	.LVL5
 1166 0020 0200     		.2byte	0x2
 1167 0022 30       		.byte	0x30
 1168 0023 9F       		.byte	0x9f
 1169 0024 08000000 		.4byte	.LVL5
 1170 0028 8A000000 		.4byte	.LVL13
 1171 002c 0100     		.2byte	0x1
 1172 002e 54       		.byte	0x54
 1173 002f 00000000 		.4byte	0
 1174 0033 00000000 		.4byte	0
 1175              		.section	.debug_aranges,"",%progbits
 1176 0000 2C000000 		.4byte	0x2c
 1177 0004 0200     		.2byte	0x2
 1178 0006 00000000 		.4byte	.Ldebug_info0
 1179 000a 04       		.byte	0x4
 1180 000b 00       		.byte	0
 1181 000c 0000     		.2byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 38


 1182 000e 0000     		.2byte	0
 1183 0010 00000000 		.4byte	.LFB34
 1184 0014 02000000 		.4byte	.LFE34-.LFB34
 1185 0018 00000000 		.4byte	.LFB35
 1186 001c 28000000 		.4byte	.LFE35-.LFB35
 1187 0020 00000000 		.4byte	.LFB36
 1188 0024 A8000000 		.4byte	.LFE36-.LFB36
 1189 0028 00000000 		.4byte	0
 1190 002c 00000000 		.4byte	0
 1191              		.section	.debug_ranges,"",%progbits
 1192              	.Ldebug_ranges0:
 1193 0000 00000000 		.4byte	.LFB34
 1194 0004 02000000 		.4byte	.LFE34
 1195 0008 00000000 		.4byte	.LFB35
 1196 000c 28000000 		.4byte	.LFE35
 1197 0010 00000000 		.4byte	.LFB36
 1198 0014 A8000000 		.4byte	.LFE36
 1199 0018 00000000 		.4byte	0
 1200 001c 00000000 		.4byte	0
 1201              		.section	.debug_line,"",%progbits
 1202              	.Ldebug_line0:
 1203 0000 B7010000 		.section	.debug_str,"MS",%progbits,1
 1203      02003E01 
 1203      00000201 
 1203      FB0E0D00 
 1203      01010101 
 1204              	.LASF16:
 1205 0000 72656733 		.ascii	"reg32\000"
 1205      3200
 1206              	.LASF48:
 1207 0006 566F6C75 		.ascii	"VolumeControl.c\000"
 1207      6D65436F 
 1207      6E74726F 
 1207      6C2E6300 
 1208              	.LASF19:
 1209 0016 7369676E 		.ascii	"signature\000"
 1209      61747572 
 1209      6500
 1210              	.LASF23:
 1211 0020 6C65645F 		.ascii	"led_max_brightness\000"
 1211      6D61785F 
 1211      62726967 
 1211      68746E65 
 1211      737300
 1212              	.LASF3:
 1213 0033 73686F72 		.ascii	"short unsigned int\000"
 1213      7420756E 
 1213      7369676E 
 1213      65642069 
 1213      6E7400
 1214              	.LASF45:
 1215 0046 55534255 		.ascii	"USBUART_PutString\000"
 1215      4152545F 
 1215      50757453 
 1215      7472696E 
 1215      6700
 1216              	.LASF14:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 39


 1217 0058 646F7562 		.ascii	"double\000"
 1217      6C6500
 1218              	.LASF42:
 1219 005f 55534255 		.ascii	"USBUART_GetConfiguration\000"
 1219      4152545F 
 1219      47657443 
 1219      6F6E6669 
 1219      67757261 
 1220              	.LASF38:
 1221 0078 4379446D 		.ascii	"CyDmaSetInterruptCallback\000"
 1221      61536574 
 1221      496E7465 
 1221      72727570 
 1221      7443616C 
 1222              	.LASF52:
 1223 0092 446D6149 		.ascii	"DmaIntHandler\000"
 1223      6E744861 
 1223      6E646C65 
 1223      7200
 1224              	.LASF13:
 1225 00a0 666C6F61 		.ascii	"float\000"
 1225      7400
 1226              	.LASF53:
 1227 00a6 766F6C75 		.ascii	"volume\000"
 1227      6D6500
 1228              	.LASF9:
 1229 00ad 75696E74 		.ascii	"uint8\000"
 1229      3800
 1230              	.LASF1:
 1231 00b3 756E7369 		.ascii	"unsigned char\000"
 1231      676E6564 
 1231      20636861 
 1231      7200
 1232              	.LASF50:
 1233 00c1 444D415F 		.ascii	"DMA_SetInterruptCallback\000"
 1233      53657449 
 1233      6E746572 
 1233      72757074 
 1233      43616C6C 
 1234              	.LASF46:
 1235 00da 436F6465 		.ascii	"Codec_AdjustBothHeadphoneVolumeLevel\000"
 1235      635F4164 
 1235      6A757374 
 1235      426F7468 
 1235      48656164 
 1236              	.LASF11:
 1237 00ff 696E7431 		.ascii	"int16\000"
 1237      3600
 1238              	.LASF49:
 1239 0105 433A5C64 		.ascii	"C:\\dev\\git\\icebreaker\\Icebreaker.cydsn\000"
 1239      65765C67 
 1239      69745C69 
 1239      63656272 
 1239      65616B65 
 1240              	.LASF12:
 1241 012c 696E7433 		.ascii	"int32\000"
 1241      3200
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 40


 1242              	.LASF51:
 1243 0132 63616C6C 		.ascii	"callback\000"
 1243      6261636B 
 1243      00
 1244              	.LASF20:
 1245 013b 636F756E 		.ascii	"counter\000"
 1245      74657200 
 1246              	.LASF28:
 1247 0143 766F6C5F 		.ascii	"vol_ctrl_both\000"
 1247      6374726C 
 1247      5F626F74 
 1247      6800
 1248              	.LASF24:
 1249 0151 64656275 		.ascii	"debug_mask\000"
 1249      675F6D61 
 1249      736B00
 1250              	.LASF2:
 1251 015c 73686F72 		.ascii	"short int\000"
 1251      7420696E 
 1251      7400
 1252              	.LASF37:
 1253 0166 4144435F 		.ascii	"ADC_MAX_READING\000"
 1253      4D41585F 
 1253      52454144 
 1253      494E4700 
 1254              	.LASF33:
 1255 0176 63616C5F 		.ascii	"cal_data\000"
 1255      64617461 
 1255      00
 1256              	.LASF10:
 1257 017f 75696E74 		.ascii	"uint32\000"
 1257      333200
 1258              	.LASF27:
 1259 0186 766F6C5F 		.ascii	"vol_ctrl_left\000"
 1259      6374726C 
 1259      5F6C6566 
 1259      7400
 1260              	.LASF5:
 1261 0194 6C6F6E67 		.ascii	"long unsigned int\000"
 1261      20756E73 
 1261      69676E65 
 1261      6420696E 
 1261      7400
 1262              	.LASF8:
 1263 01a6 756E7369 		.ascii	"unsigned int\000"
 1263      676E6564 
 1263      20696E74 
 1263      00
 1264              	.LASF7:
 1265 01b3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1265      206C6F6E 
 1265      6720756E 
 1265      7369676E 
 1265      65642069 
 1266              	.LASF22:
 1267 01ca 6164635F 		.ascii	"adc_max\000"
 1267      6D617800 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 41


 1268              	.LASF43:
 1269 01d2 55534255 		.ascii	"USBUART_CDCIsReady\000"
 1269      4152545F 
 1269      43444349 
 1269      73526561 
 1269      647900
 1270              	.LASF39:
 1271 01e5 4144435F 		.ascii	"ADC_Start\000"
 1271      53746172 
 1271      7400
 1272              	.LASF29:
 1273 01ef 6379646D 		.ascii	"cydma_callback_t\000"
 1273      615F6361 
 1273      6C6C6261 
 1273      636B5F74 
 1273      00
 1274              	.LASF47:
 1275 0200 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1275      43313120 
 1275      352E342E 
 1275      31203230 
 1275      31363036 
 1276 0233 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1276      20726576 
 1276      6973696F 
 1276      6E203233 
 1276      37373135 
 1277 0266 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1277      66756E63 
 1277      74696F6E 
 1277      2D736563 
 1277      74696F6E 
 1278              	.LASF17:
 1279 028e 6C6F6E67 		.ascii	"long double\000"
 1279      20646F75 
 1279      626C6500 
 1280              	.LASF18:
 1281 029a 73697A65 		.ascii	"sizetype\000"
 1281      74797065 
 1281      00
 1282              	.LASF6:
 1283 02a3 6C6F6E67 		.ascii	"long long int\000"
 1283      206C6F6E 
 1283      6720696E 
 1283      7400
 1284              	.LASF15:
 1285 02b1 63686172 		.ascii	"char\000"
 1285      00
 1286              	.LASF21:
 1287 02b6 6164635F 		.ascii	"adc_min\000"
 1287      6D696E00 
 1288              	.LASF36:
 1289 02be 4144435F 		.ascii	"ADC_MIN_READING\000"
 1289      4D494E5F 
 1289      52454144 
 1289      494E4700 
 1290              	.LASF35:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccH5X5kD.s 			page 42


 1291 02ce 61646353 		.ascii	"adcSample\000"
 1291      616D706C 
 1291      6500
 1292              	.LASF26:
 1293 02d8 766F6C5F 		.ascii	"vol_ctrl_right\000"
 1293      6374726C 
 1293      5F726967 
 1293      687400
 1294              	.LASF30:
 1295 02e7 566F6C75 		.ascii	"VolumeControlInit\000"
 1295      6D65436F 
 1295      6E74726F 
 1295      6C496E69 
 1295      7400
 1296              	.LASF34:
 1297 02f9 67627566 		.ascii	"gbuf\000"
 1297      00
 1298              	.LASF25:
 1299 02fe 63616C69 		.ascii	"calibration_data_s\000"
 1299      62726174 
 1299      696F6E5F 
 1299      64617461 
 1299      5F7300
 1300              	.LASF4:
 1301 0311 6C6F6E67 		.ascii	"long int\000"
 1301      20696E74 
 1301      00
 1302              	.LASF31:
 1303 031a 566F6C75 		.ascii	"VolumeControlService\000"
 1303      6D65436F 
 1303      6E74726F 
 1303      6C536572 
 1303      76696365 
 1304              	.LASF0:
 1305 032f 7369676E 		.ascii	"signed char\000"
 1305      65642063 
 1305      68617200 
 1306              	.LASF40:
 1307 033b 444D415F 		.ascii	"DMA_Start\000"
 1307      53746172 
 1307      7400
 1308              	.LASF41:
 1309 0345 4144435F 		.ascii	"ADC_StartConvert\000"
 1309      53746172 
 1309      74436F6E 
 1309      76657274 
 1309      00
 1310              	.LASF32:
 1311 0356 70726576 		.ascii	"prevVol\000"
 1311      566F6C00 
 1312              	.LASF44:
 1313 035e 73707269 		.ascii	"sprintf\000"
 1313      6E746600 
 1314              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
