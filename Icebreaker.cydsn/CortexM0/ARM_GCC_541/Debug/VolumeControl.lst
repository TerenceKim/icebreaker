ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"VolumeControl.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.DmaIntHandler,"ax",%progbits
  20              		.align	2
  21              		.global	DmaIntHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	DmaIntHandler, %function
  25              	DmaIntHandler:
  26              	.LFB34:
  27              		.file 1 "VolumeControl.c"
   1:VolumeControl.c **** /* ========================================
   2:VolumeControl.c ****  *
   3:VolumeControl.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:VolumeControl.c ****  * All Rights Reserved
   5:VolumeControl.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:VolumeControl.c ****  *
   7:VolumeControl.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:VolumeControl.c ****  * WHICH IS THE PROPERTY OF your company.
   9:VolumeControl.c ****  *
  10:VolumeControl.c ****  * ========================================
  11:VolumeControl.c **** */
  12:VolumeControl.c **** #include "VolumeControl.h"
  13:VolumeControl.c **** #include <Config.h>
  14:VolumeControl.c **** #include <Application.h>
  15:VolumeControl.c **** #include <ADC.h>
  16:VolumeControl.c **** #include <DMA.h>
  17:VolumeControl.c **** #include <Codec.h>
  18:VolumeControl.c **** //#include <USBFS.h>
  19:VolumeControl.c **** #include <pcm1770.h>
  20:VolumeControl.c **** 
  21:VolumeControl.c **** int32 ADC_MIN_READING[vol_ctrl_both] = { -2, -2 };
  22:VolumeControl.c **** int32 ADC_MAX_READING[vol_ctrl_both] = { 2047, 2047 };
  23:VolumeControl.c **** 
  24:VolumeControl.c **** #define ADC_READING_RANGE(side)       (ADC_MAX_READING[side] - ADC_MIN_READING[side])
  25:VolumeControl.c **** 
  26:VolumeControl.c **** /* ADC measurement status and result */
  27:VolumeControl.c **** int16   adcSample[vol_ctrl_both] = { 0, 0 };
  28:VolumeControl.c **** 
  29:VolumeControl.c **** CY_ISR(DmaIntHandler)
  30:VolumeControl.c **** {
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 2


  28              		.loc 1 30 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  31:VolumeControl.c ****     // Do nothing
  32:VolumeControl.c **** }
  33              		.loc 1 32 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE34:
  38              		.size	DmaIntHandler, .-DmaIntHandler
  39 0002 C046     		.section	.text.VolumeControlInit,"ax",%progbits
  40              		.align	2
  41              		.global	VolumeControlInit
  42              		.code	16
  43              		.thumb_func
  44              		.type	VolumeControlInit, %function
  45              	VolumeControlInit:
  46              	.LFB35:
  33:VolumeControl.c **** 
  34:VolumeControl.c **** void VolumeControlInit(void)
  35:VolumeControl.c **** {
  47              		.loc 1 35 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51 0000 10B5     		push	{r4, lr}
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 4, -8
  54              		.cfi_offset 14, -4
  36:VolumeControl.c ****     /* Initialize ADC. Conversion is not enabled yet. */
  37:VolumeControl.c ****     ADC_Start();
  55              		.loc 1 37 0
  56 0002 FFF7FEFF 		bl	ADC_Start
  57              	.LVL0:
  38:VolumeControl.c **** 
  39:VolumeControl.c ****     /* Configure DMA source and destination locations to transfer from
  40:VolumeControl.c ****     * ADC data register to memory variable.
  41:VolumeControl.c ****     */
  42:VolumeControl.c ****     DMA_Start((void *)ADC_SAR_CHAN0_RESULT_PTR, (void *)adcSample);
  58              		.loc 1 42 0
  59 0006 0549     		ldr	r1, .L3
  60 0008 0548     		ldr	r0, .L3+4
  61 000a FFF7FEFF 		bl	DMA_Start
  62              	.LVL1:
  63              	.LBB4:
  64              	.LBB5:
  65              		.file 2 "Generated_Source\\PSoC4/DMA.h"
   1:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
   2:Generated_Source\PSoC4/DMA.h **** * File Name: DMA.h
   3:Generated_Source\PSoC4/DMA.h **** * Version 1.0
   4:Generated_Source\PSoC4/DMA.h **** *
   5:Generated_Source\PSoC4/DMA.h **** * Description:
   6:Generated_Source\PSoC4/DMA.h **** *  This file provides DMA channel defines and API function definitions.
   7:Generated_Source\PSoC4/DMA.h **** *
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 3


   8:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
   9:Generated_Source\PSoC4/DMA.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC4/DMA.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/DMA.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/DMA.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/DMA.h **** 
  15:Generated_Source\PSoC4/DMA.h **** #ifndef CY_DMA_CHANNEL_DMA_H
  16:Generated_Source\PSoC4/DMA.h **** #define CY_DMA_CHANNEL_DMA_H
  17:Generated_Source\PSoC4/DMA.h **** 
  18:Generated_Source\PSoC4/DMA.h **** #include "CyDMA.h"
  19:Generated_Source\PSoC4/DMA.h **** 
  20:Generated_Source\PSoC4/DMA.h ****     
  21:Generated_Source\PSoC4/DMA.h **** /***************************************
  22:Generated_Source\PSoC4/DMA.h **** *   Conditional Compilation Parameters
  23:Generated_Source\PSoC4/DMA.h **** ***************************************/
  24:Generated_Source\PSoC4/DMA.h **** 
  25:Generated_Source\PSoC4/DMA.h **** #define DMA_CHANNEL           (DMA__CHANNEL_NUMBER)
  26:Generated_Source\PSoC4/DMA.h **** #define DMA_CHANNEL_MASK      ((uint32)(1UL << DMA_CHANNEL))
  27:Generated_Source\PSoC4/DMA.h **** 
  28:Generated_Source\PSoC4/DMA.h **** 
  29:Generated_Source\PSoC4/DMA.h **** /***************************************
  30:Generated_Source\PSoC4/DMA.h **** *        Function Prototypes
  31:Generated_Source\PSoC4/DMA.h **** ***************************************/
  32:Generated_Source\PSoC4/DMA.h **** 
  33:Generated_Source\PSoC4/DMA.h **** /* Functions specific to this DMA channel */
  34:Generated_Source\PSoC4/DMA.h **** void DMA_Init(void);
  35:Generated_Source\PSoC4/DMA.h **** void DMA_Start(void * srcAddress, void * dstAddress);
  36:Generated_Source\PSoC4/DMA.h **** 
  37:Generated_Source\PSoC4/DMA.h **** /* Inline functions that call global API functions */
  38:Generated_Source\PSoC4/DMA.h **** static void   DMA_ChEnable(void);
  39:Generated_Source\PSoC4/DMA.h **** static void   DMA_ChDisable(void);
  40:Generated_Source\PSoC4/DMA.h **** static void   DMA_Trigger(void);
  41:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetPriority(int32 priority);
  42:Generated_Source\PSoC4/DMA.h **** static int32  DMA_GetPriority(void);
  43:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetNextDescriptor(int32 descriptor);
  44:Generated_Source\PSoC4/DMA.h **** static int32  DMA_GetNextDescriptor(void);
  45:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config);
  46:Generated_Source\PSoC4/DMA.h **** static void   DMA_ValidateDescriptor(int32 descriptor);
  47:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetDescriptorStatus(int32 descriptor);
  48:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetSrcAddress(int32 descriptor, void * srcAddress);
  49:Generated_Source\PSoC4/DMA.h **** static void * DMA_GetSrcAddress(int32 descriptor);
  50:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetDstAddress(int32 descriptor, void * dstAddress);
  51:Generated_Source\PSoC4/DMA.h **** static void * DMA_GetDstAddress(int32 descriptor);
  52:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize);
  53:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetDataElementSize(int32 descriptor);
  54:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetNumDataElements(int32 descriptor, int32 numDataElements);
  55:Generated_Source\PSoC4/DMA.h **** static int32  DMA_GetNumDataElements(int32 descriptor);
  56:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth);
  57:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetSrcDstTransferWidth(int32 descriptor);
  58:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement);
  59:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetAddressIncrement(int32 descriptor);
  60:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetTriggerType(int32 descriptor, uint32 triggerType);
  61:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetTriggerType(int32 descriptor);
  62:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetTransferMode(int32 descriptor, uint32 transferMode);
  63:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetTransferMode(int32 descriptor);
  64:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetPreemptable(int32 descriptor, uint32 preemptable);
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 4


  65:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetPreemptable(int32 descriptor);
  66:Generated_Source\PSoC4/DMA.h **** static void   DMA_SetPostCompletionActions(int32 descriptor, uint32 actions);
  67:Generated_Source\PSoC4/DMA.h **** static uint32 DMA_GetPostCompletionAction(int32 descriptor);
  68:Generated_Source\PSoC4/DMA.h **** static cydma_callback_t DMA_SetInterruptCallback(cydma_callback_t callback);
  69:Generated_Source\PSoC4/DMA.h **** static cydma_callback_t DMA_GetInterruptCallback(void);
  70:Generated_Source\PSoC4/DMA.h **** 
  71:Generated_Source\PSoC4/DMA.h **** 
  72:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
  73:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_ChEnable
  74:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
  75:Generated_Source\PSoC4/DMA.h **** *
  76:Generated_Source\PSoC4/DMA.h **** * Summary:
  77:Generated_Source\PSoC4/DMA.h **** *  Enables the DMA channel. It is not necessary to call DMA_ChEnable()
  78:Generated_Source\PSoC4/DMA.h **** *  because the DMA_Start() API calls this function, which is the
  79:Generated_Source\PSoC4/DMA.h **** *  preferred method to begin the component operation.
  80:Generated_Source\PSoC4/DMA.h **** *
  81:Generated_Source\PSoC4/DMA.h **** * Parameters:
  82:Generated_Source\PSoC4/DMA.h **** *  None.
  83:Generated_Source\PSoC4/DMA.h **** *                   
  84:Generated_Source\PSoC4/DMA.h **** * Return:
  85:Generated_Source\PSoC4/DMA.h **** *  None.
  86:Generated_Source\PSoC4/DMA.h **** *
  87:Generated_Source\PSoC4/DMA.h **** * Side effect:
  88:Generated_Source\PSoC4/DMA.h **** *  If this function is called before DMA_Start(), or DMA_Init()
  89:Generated_Source\PSoC4/DMA.h **** *  or DMA_SetConfiguration(), and DMA_SetSrcAddress()
  90:Generated_Source\PSoC4/DMA.h **** *  and DMA_SetDstAddress the operation of the DMA is 
  91:Generated_Source\PSoC4/DMA.h **** *  undefined and could result in system data corruption. 
  92:Generated_Source\PSoC4/DMA.h **** *
  93:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
  94:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_ChEnable(void)
  95:Generated_Source\PSoC4/DMA.h **** {
  96:Generated_Source\PSoC4/DMA.h ****     CyDmaChEnable(DMA_CHANNEL);
  97:Generated_Source\PSoC4/DMA.h **** }
  98:Generated_Source\PSoC4/DMA.h **** 
  99:Generated_Source\PSoC4/DMA.h **** 
 100:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 101:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_ChDisable
 102:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 103:Generated_Source\PSoC4/DMA.h **** *
 104:Generated_Source\PSoC4/DMA.h **** * Summary:
 105:Generated_Source\PSoC4/DMA.h **** *  Disables the DMA channel.
 106:Generated_Source\PSoC4/DMA.h **** *
 107:Generated_Source\PSoC4/DMA.h **** * Parameters:
 108:Generated_Source\PSoC4/DMA.h **** *  None.
 109:Generated_Source\PSoC4/DMA.h **** *                   
 110:Generated_Source\PSoC4/DMA.h **** * Return:
 111:Generated_Source\PSoC4/DMA.h **** *  None.
 112:Generated_Source\PSoC4/DMA.h **** *
 113:Generated_Source\PSoC4/DMA.h **** * Side effect:
 114:Generated_Source\PSoC4/DMA.h **** *  If this function is called during a DMA transfer the transfer is aborted. 
 115:Generated_Source\PSoC4/DMA.h **** *
 116:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 117:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_ChDisable(void)
 118:Generated_Source\PSoC4/DMA.h **** {
 119:Generated_Source\PSoC4/DMA.h ****     CyDmaChDisable(DMA_CHANNEL);
 120:Generated_Source\PSoC4/DMA.h **** }
 121:Generated_Source\PSoC4/DMA.h **** 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 5


 122:Generated_Source\PSoC4/DMA.h **** 
 123:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 124:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_Trigger
 125:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 126:Generated_Source\PSoC4/DMA.h **** *
 127:Generated_Source\PSoC4/DMA.h **** * Summary:
 128:Generated_Source\PSoC4/DMA.h **** *  Triggers the DMA channel, this is useful only for software triggers. This is
 129:Generated_Source\PSoC4/DMA.h **** *  not needed when hardware triggers are used.
 130:Generated_Source\PSoC4/DMA.h **** *
 131:Generated_Source\PSoC4/DMA.h **** * Parameters:
 132:Generated_Source\PSoC4/DMA.h **** *  None.
 133:Generated_Source\PSoC4/DMA.h **** *                   
 134:Generated_Source\PSoC4/DMA.h **** * Return:
 135:Generated_Source\PSoC4/DMA.h **** *  None. 
 136:Generated_Source\PSoC4/DMA.h **** *
 137:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 138:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_Trigger(void)
 139:Generated_Source\PSoC4/DMA.h **** {
 140:Generated_Source\PSoC4/DMA.h ****     CyDmaTrigger(DMA_CHANNEL);
 141:Generated_Source\PSoC4/DMA.h **** }
 142:Generated_Source\PSoC4/DMA.h **** 
 143:Generated_Source\PSoC4/DMA.h **** 
 144:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 145:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetPriority
 146:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 147:Generated_Source\PSoC4/DMA.h **** *
 148:Generated_Source\PSoC4/DMA.h **** * Summary:
 149:Generated_Source\PSoC4/DMA.h **** *  Sets the priority for the channel.
 150:Generated_Source\PSoC4/DMA.h **** *
 151:Generated_Source\PSoC4/DMA.h **** * Parameters:
 152:Generated_Source\PSoC4/DMA.h **** *  priority: Priority for channel. Priority can be 0,1,2, or 3.
 153:Generated_Source\PSoC4/DMA.h **** *            0 is the highest priority.
 154:Generated_Source\PSoC4/DMA.h **** *                   
 155:Generated_Source\PSoC4/DMA.h **** * Return:
 156:Generated_Source\PSoC4/DMA.h **** *  None.
 157:Generated_Source\PSoC4/DMA.h **** *
 158:Generated_Source\PSoC4/DMA.h **** * Side effect:
 159:Generated_Source\PSoC4/DMA.h **** *  This function should not be called while the channel is enabled.
 160:Generated_Source\PSoC4/DMA.h **** *
 161:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 162:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetPriority(int32 priority)
 163:Generated_Source\PSoC4/DMA.h **** {
 164:Generated_Source\PSoC4/DMA.h ****     CyDmaSetPriority(DMA_CHANNEL, priority);
 165:Generated_Source\PSoC4/DMA.h **** }
 166:Generated_Source\PSoC4/DMA.h **** 
 167:Generated_Source\PSoC4/DMA.h **** 
 168:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 169:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetPriority
 170:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 171:Generated_Source\PSoC4/DMA.h **** *
 172:Generated_Source\PSoC4/DMA.h **** * Summary:
 173:Generated_Source\PSoC4/DMA.h **** *  Gets the priority for the channel.
 174:Generated_Source\PSoC4/DMA.h **** *
 175:Generated_Source\PSoC4/DMA.h **** * Parameters:
 176:Generated_Source\PSoC4/DMA.h **** *  None.
 177:Generated_Source\PSoC4/DMA.h **** *                   
 178:Generated_Source\PSoC4/DMA.h **** * Return:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 6


 179:Generated_Source\PSoC4/DMA.h **** *  Priority for channel. Priority can be 0,1,2, or 3. 0 is the highest priority.
 180:Generated_Source\PSoC4/DMA.h **** *
 181:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 182:Generated_Source\PSoC4/DMA.h **** static CY_INLINE int32 DMA_GetPriority(void)
 183:Generated_Source\PSoC4/DMA.h **** {
 184:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetPriority(DMA_CHANNEL));
 185:Generated_Source\PSoC4/DMA.h **** }
 186:Generated_Source\PSoC4/DMA.h **** 
 187:Generated_Source\PSoC4/DMA.h **** 
 188:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetNextDescriptor
 190:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 191:Generated_Source\PSoC4/DMA.h **** *
 192:Generated_Source\PSoC4/DMA.h **** * Summary:
 193:Generated_Source\PSoC4/DMA.h **** *  Sets the descriptor that should be run the next time the channel is
 194:Generated_Source\PSoC4/DMA.h **** *  triggered.
 195:Generated_Source\PSoC4/DMA.h **** *
 196:Generated_Source\PSoC4/DMA.h **** * Parameters:
 197:Generated_Source\PSoC4/DMA.h **** *  descriptor: Next Descriptor to run (0 or 1).
 198:Generated_Source\PSoC4/DMA.h **** *                   
 199:Generated_Source\PSoC4/DMA.h **** * Side effect:
 200:Generated_Source\PSoC4/DMA.h **** *  This function should not be called while the channel is enabled.
 201:Generated_Source\PSoC4/DMA.h **** *
 202:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 203:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetNextDescriptor(int32 descriptor)
 204:Generated_Source\PSoC4/DMA.h **** {
 205:Generated_Source\PSoC4/DMA.h ****     CyDmaSetNextDescriptor(DMA_CHANNEL, descriptor);
 206:Generated_Source\PSoC4/DMA.h **** }
 207:Generated_Source\PSoC4/DMA.h **** 
 208:Generated_Source\PSoC4/DMA.h **** 
 209:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 210:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetNextDescriptor
 211:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 212:Generated_Source\PSoC4/DMA.h **** *
 213:Generated_Source\PSoC4/DMA.h **** * Summary:
 214:Generated_Source\PSoC4/DMA.h **** *  Returns the next descriptor that should be run, as set by 
 215:Generated_Source\PSoC4/DMA.h **** *  DMA_SetNextDescriptor().
 216:Generated_Source\PSoC4/DMA.h **** *
 217:Generated_Source\PSoC4/DMA.h **** * Parameters:
 218:Generated_Source\PSoC4/DMA.h **** *  None.
 219:Generated_Source\PSoC4/DMA.h **** *                   
 220:Generated_Source\PSoC4/DMA.h **** * Return:
 221:Generated_Source\PSoC4/DMA.h **** *  Next Descriptor to run (0 or 1).
 222:Generated_Source\PSoC4/DMA.h **** *
 223:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 224:Generated_Source\PSoC4/DMA.h **** static CY_INLINE int32 DMA_GetNextDescriptor(void)
 225:Generated_Source\PSoC4/DMA.h **** {
 226:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetNextDescriptor(DMA_CHANNEL));
 227:Generated_Source\PSoC4/DMA.h **** }
 228:Generated_Source\PSoC4/DMA.h **** 
 229:Generated_Source\PSoC4/DMA.h **** 
 230:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 231:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetConfiguration
 232:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 233:Generated_Source\PSoC4/DMA.h **** *
 234:Generated_Source\PSoC4/DMA.h **** * Summary:
 235:Generated_Source\PSoC4/DMA.h **** *  Sets configuration information for the specified descriptor.
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 7


 236:Generated_Source\PSoC4/DMA.h **** *
 237:Generated_Source\PSoC4/DMA.h **** * Parameters:
 238:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 239:Generated_Source\PSoC4/DMA.h **** *  config: Pointer to a configuration structure. Refer to cydma_init_struct
 240:Generated_Source\PSoC4/DMA.h **** *          structure definition in CyDMA_P4.h or the component datasheet.
 241:Generated_Source\PSoC4/DMA.h **** *                   
 242:Generated_Source\PSoC4/DMA.h **** * Return:
 243:Generated_Source\PSoC4/DMA.h **** *  None.
 244:Generated_Source\PSoC4/DMA.h **** *
 245:Generated_Source\PSoC4/DMA.h **** * Side effect:
 246:Generated_Source\PSoC4/DMA.h **** *  The status register associated with the specified descriptor is reset to
 247:Generated_Source\PSoC4/DMA.h **** *  zero after this function call. This function also validates the descriptor.
 248:Generated_Source\PSoC4/DMA.h **** *  This function should not be called while the descriptor is active.
 249:Generated_Source\PSoC4/DMA.h **** *  This can be checked by calling CyDmaGetStatus().
 250:Generated_Source\PSoC4/DMA.h **** *
 251:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 252:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config)
 253:Generated_Source\PSoC4/DMA.h **** {
 254:Generated_Source\PSoC4/DMA.h ****     CyDmaSetConfiguration(DMA_CHANNEL, descriptor, config);
 255:Generated_Source\PSoC4/DMA.h **** }
 256:Generated_Source\PSoC4/DMA.h **** 
 257:Generated_Source\PSoC4/DMA.h **** 
 258:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 259:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_ValidateDescriptor
 260:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 261:Generated_Source\PSoC4/DMA.h **** *
 262:Generated_Source\PSoC4/DMA.h **** * Summary:
 263:Generated_Source\PSoC4/DMA.h **** *  Validates the specified descriptor after it has been invalidated.
 264:Generated_Source\PSoC4/DMA.h **** *
 265:Generated_Source\PSoC4/DMA.h **** * Parameters:
 266:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 267:Generated_Source\PSoC4/DMA.h **** *                   
 268:Generated_Source\PSoC4/DMA.h **** * Return:
 269:Generated_Source\PSoC4/DMA.h **** *  None. 
 270:Generated_Source\PSoC4/DMA.h **** *
 271:Generated_Source\PSoC4/DMA.h **** * Side effect:
 272:Generated_Source\PSoC4/DMA.h **** *  The status register associated with the specified descriptor is reset to
 273:Generated_Source\PSoC4/DMA.h **** *  zero after this function call. This function should not be called while the
 274:Generated_Source\PSoC4/DMA.h **** *  descriptor is active. This can be checked by calling CyDmaGetStatus().
 275:Generated_Source\PSoC4/DMA.h **** *
 276:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 277:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_ValidateDescriptor(int32 descriptor)
 278:Generated_Source\PSoC4/DMA.h **** {
 279:Generated_Source\PSoC4/DMA.h ****     CyDmaValidateDescriptor(DMA_CHANNEL, descriptor);
 280:Generated_Source\PSoC4/DMA.h **** }
 281:Generated_Source\PSoC4/DMA.h **** 
 282:Generated_Source\PSoC4/DMA.h **** 
 283:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 284:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetDescriptorStatus
 285:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 286:Generated_Source\PSoC4/DMA.h **** *
 287:Generated_Source\PSoC4/DMA.h **** * Summary:
 288:Generated_Source\PSoC4/DMA.h **** *  Returns the status of the specified descriptor.
 289:Generated_Source\PSoC4/DMA.h **** *
 290:Generated_Source\PSoC4/DMA.h **** * Parameters:
 291:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 292:Generated_Source\PSoC4/DMA.h **** *                   
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 8


 293:Generated_Source\PSoC4/DMA.h **** * Return:
 294:Generated_Source\PSoC4/DMA.h **** *  Returns the contents of the specified descriptors status register. Refer to 
 295:Generated_Source\PSoC4/DMA.h **** *  descriptor status register bit definitions in CyDMA_P4.h or the API
 296:Generated_Source\PSoC4/DMA.h **** *  description in the DMA channel datasheet for more information.
 297:Generated_Source\PSoC4/DMA.h **** *
 298:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 299:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetDescriptorStatus(int32 descriptor)
 300:Generated_Source\PSoC4/DMA.h **** {
 301:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetDescriptorStatus(DMA_CHANNEL, descriptor));
 302:Generated_Source\PSoC4/DMA.h **** }
 303:Generated_Source\PSoC4/DMA.h **** 
 304:Generated_Source\PSoC4/DMA.h **** 
 305:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 306:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetSrcAddress
 307:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 308:Generated_Source\PSoC4/DMA.h **** *
 309:Generated_Source\PSoC4/DMA.h **** * Summary:
 310:Generated_Source\PSoC4/DMA.h **** *  Configures the source address for the specified descriptor.
 311:Generated_Source\PSoC4/DMA.h **** *
 312:Generated_Source\PSoC4/DMA.h **** * Parameters:
 313:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 314:Generated_Source\PSoC4/DMA.h **** *  srcAddress: Address of DMA transfer source.
 315:Generated_Source\PSoC4/DMA.h **** *                   
 316:Generated_Source\PSoC4/DMA.h **** * Return:
 317:Generated_Source\PSoC4/DMA.h **** *  None.
 318:Generated_Source\PSoC4/DMA.h **** *
 319:Generated_Source\PSoC4/DMA.h **** * Side effect:
 320:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 321:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 322:Generated_Source\PSoC4/DMA.h **** *
 323:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 324:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetSrcAddress(int32 descriptor, void * srcAddress)
 325:Generated_Source\PSoC4/DMA.h **** {
 326:Generated_Source\PSoC4/DMA.h ****     CyDmaSetSrcAddress(DMA_CHANNEL, descriptor, srcAddress);
 327:Generated_Source\PSoC4/DMA.h **** }
 328:Generated_Source\PSoC4/DMA.h **** 
 329:Generated_Source\PSoC4/DMA.h **** 
 330:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 331:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetSrcAddress
 332:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 333:Generated_Source\PSoC4/DMA.h **** *
 334:Generated_Source\PSoC4/DMA.h **** * Summary:
 335:Generated_Source\PSoC4/DMA.h **** *  Returns the source address for the specified descriptor, set by either 
 336:Generated_Source\PSoC4/DMA.h **** *  DMA_Start() or DMA_SetSrcAddress().
 337:Generated_Source\PSoC4/DMA.h **** *
 338:Generated_Source\PSoC4/DMA.h **** * Parameters:
 339:Generated_Source\PSoC4/DMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 340:Generated_Source\PSoC4/DMA.h **** *                   
 341:Generated_Source\PSoC4/DMA.h **** * Return:
 342:Generated_Source\PSoC4/DMA.h **** *  Source address written to specified descriptor.
 343:Generated_Source\PSoC4/DMA.h **** *
 344:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 345:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void * DMA_GetSrcAddress(int32 descriptor)
 346:Generated_Source\PSoC4/DMA.h **** {
 347:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetSrcAddress(DMA_CHANNEL, descriptor));
 348:Generated_Source\PSoC4/DMA.h **** }
 349:Generated_Source\PSoC4/DMA.h **** 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 9


 350:Generated_Source\PSoC4/DMA.h **** 
 351:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 352:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetDstAddress
 353:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 354:Generated_Source\PSoC4/DMA.h **** *
 355:Generated_Source\PSoC4/DMA.h **** * Summary:
 356:Generated_Source\PSoC4/DMA.h **** *  Configures the destination address for the specified descriptor.
 357:Generated_Source\PSoC4/DMA.h **** *
 358:Generated_Source\PSoC4/DMA.h **** * Parameters:
 359:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 360:Generated_Source\PSoC4/DMA.h **** *  dstAddress: Address of DMA transfer destination.
 361:Generated_Source\PSoC4/DMA.h **** *                   
 362:Generated_Source\PSoC4/DMA.h **** * Return:
 363:Generated_Source\PSoC4/DMA.h **** *  None.
 364:Generated_Source\PSoC4/DMA.h **** *
 365:Generated_Source\PSoC4/DMA.h **** * Side effect:
 366:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 367:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 368:Generated_Source\PSoC4/DMA.h **** *
 369:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 370:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetDstAddress(int32 descriptor, void * dstAddress)
 371:Generated_Source\PSoC4/DMA.h **** {
 372:Generated_Source\PSoC4/DMA.h ****     CyDmaSetDstAddress(DMA_CHANNEL, descriptor, dstAddress);
 373:Generated_Source\PSoC4/DMA.h **** }
 374:Generated_Source\PSoC4/DMA.h **** 
 375:Generated_Source\PSoC4/DMA.h **** 
 376:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 377:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetDstAddress
 378:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 379:Generated_Source\PSoC4/DMA.h **** *
 380:Generated_Source\PSoC4/DMA.h **** * Summary:
 381:Generated_Source\PSoC4/DMA.h **** *  Returns the destination address for the specified descriptor, set by either 
 382:Generated_Source\PSoC4/DMA.h **** *  DMA_Start() or DMA_SetDstAddress().
 383:Generated_Source\PSoC4/DMA.h **** *
 384:Generated_Source\PSoC4/DMA.h **** * Parameters:
 385:Generated_Source\PSoC4/DMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 386:Generated_Source\PSoC4/DMA.h **** *                   
 387:Generated_Source\PSoC4/DMA.h **** * Return:
 388:Generated_Source\PSoC4/DMA.h **** *  Destination address written to specified descriptor.
 389:Generated_Source\PSoC4/DMA.h **** *
 390:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 391:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void * DMA_GetDstAddress(int32 descriptor)
 392:Generated_Source\PSoC4/DMA.h **** {
 393:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetDstAddress(DMA_CHANNEL, descriptor));
 394:Generated_Source\PSoC4/DMA.h **** }
 395:Generated_Source\PSoC4/DMA.h **** 
 396:Generated_Source\PSoC4/DMA.h **** 
 397:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 398:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetDataElementSize
 399:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 400:Generated_Source\PSoC4/DMA.h **** *
 401:Generated_Source\PSoC4/DMA.h **** * Summary:
 402:Generated_Source\PSoC4/DMA.h **** *  Sets the data element size for the specified descriptor.
 403:Generated_Source\PSoC4/DMA.h **** *
 404:Generated_Source\PSoC4/DMA.h **** * Parameters:
 405:Generated_Source\PSoC4/DMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 406:Generated_Source\PSoC4/DMA.h **** *  dataElementSize: Specifies the size of the data element. The DMA transfer
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 10


 407:Generated_Source\PSoC4/DMA.h **** *                   engine transfers one data element at a time. How these
 408:Generated_Source\PSoC4/DMA.h **** *                   transfers occur is controlled by the transfer mode.
 409:Generated_Source\PSoC4/DMA.h **** *                   Refer to the API bit field definitions in CyDMA_P4.h or API
 410:Generated_Source\PSoC4/DMA.h **** *                   description in the DMA channel datasheet for the parameter
 411:Generated_Source\PSoC4/DMA.h **** *                   options.
 412:Generated_Source\PSoC4/DMA.h **** *
 413:Generated_Source\PSoC4/DMA.h **** * Return:
 414:Generated_Source\PSoC4/DMA.h **** *  None.
 415:Generated_Source\PSoC4/DMA.h **** *
 416:Generated_Source\PSoC4/DMA.h **** * Side effect:
 417:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 418:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 419:Generated_Source\PSoC4/DMA.h **** *
 420:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 421:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize)
 422:Generated_Source\PSoC4/DMA.h **** {
 423:Generated_Source\PSoC4/DMA.h ****     CyDmaSetDataElementSize(DMA_CHANNEL, descriptor, dataElementSize);
 424:Generated_Source\PSoC4/DMA.h **** }
 425:Generated_Source\PSoC4/DMA.h **** 
 426:Generated_Source\PSoC4/DMA.h **** 
 427:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 428:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetDataElementSize
 429:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 430:Generated_Source\PSoC4/DMA.h **** *
 431:Generated_Source\PSoC4/DMA.h **** * Summary:
 432:Generated_Source\PSoC4/DMA.h **** *  Returns the data element size configured for the specified descriptor, set by
 433:Generated_Source\PSoC4/DMA.h **** *  DMA_SetDataElementSize() or DMA_SetConfiguration().
 434:Generated_Source\PSoC4/DMA.h **** *
 435:Generated_Source\PSoC4/DMA.h **** * Parameters:
 436:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 437:Generated_Source\PSoC4/DMA.h **** *                   
 438:Generated_Source\PSoC4/DMA.h **** * Return:
 439:Generated_Source\PSoC4/DMA.h **** *  The size of the data element. The DMA transfer engine transfers one data
 440:Generated_Source\PSoC4/DMA.h **** *  element at a time. How these transfers occur is controlled by the transfer
 441:Generated_Source\PSoC4/DMA.h **** *  mode. Refer to the API bit field definitions in CyDMA_P4.h or the API 
 442:Generated_Source\PSoC4/DMA.h **** *  description in the DMA channel datasheet for more information.
 443:Generated_Source\PSoC4/DMA.h **** *
 444:Generated_Source\PSoC4/DMA.h **** * Note:
 445:Generated_Source\PSoC4/DMA.h **** *  The size of the source and destination can be configured to use the
 446:Generated_Source\PSoC4/DMA.h **** *  data element size, or a Word, this is set in DMA_SetSrcDstTransferWidth().
 447:Generated_Source\PSoC4/DMA.h **** *
 448:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 449:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetDataElementSize(int32 descriptor)
 450:Generated_Source\PSoC4/DMA.h **** {
 451:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetDataElementSize(DMA_CHANNEL, descriptor));
 452:Generated_Source\PSoC4/DMA.h **** }
 453:Generated_Source\PSoC4/DMA.h **** 
 454:Generated_Source\PSoC4/DMA.h **** 
 455:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 456:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetNumDataElements
 457:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 458:Generated_Source\PSoC4/DMA.h **** *
 459:Generated_Source\PSoC4/DMA.h **** * Summary:
 460:Generated_Source\PSoC4/DMA.h **** *  Sets the number of data elements to transfer for specified descriptor.
 461:Generated_Source\PSoC4/DMA.h **** *
 462:Generated_Source\PSoC4/DMA.h **** * Parameters:
 463:Generated_Source\PSoC4/DMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 11


 464:Generated_Source\PSoC4/DMA.h **** *  numDataElements: Total number of data elements this descriptor transfers.
 465:Generated_Source\PSoC4/DMA.h **** *                   Valid ranges are 1 to 65536.
 466:Generated_Source\PSoC4/DMA.h **** *                   
 467:Generated_Source\PSoC4/DMA.h **** * Return:
 468:Generated_Source\PSoC4/DMA.h **** *  None.
 469:Generated_Source\PSoC4/DMA.h **** *
 470:Generated_Source\PSoC4/DMA.h **** * Side effect:
 471:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 472:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 473:Generated_Source\PSoC4/DMA.h **** *
 474:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 475:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetNumDataElements(int32 descriptor, int32 numDataElements)
 476:Generated_Source\PSoC4/DMA.h **** {
 477:Generated_Source\PSoC4/DMA.h ****     CyDmaSetNumDataElements(DMA_CHANNEL, descriptor, numDataElements);
 478:Generated_Source\PSoC4/DMA.h **** }
 479:Generated_Source\PSoC4/DMA.h **** 
 480:Generated_Source\PSoC4/DMA.h **** 
 481:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 482:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetNumDataElements
 483:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 484:Generated_Source\PSoC4/DMA.h **** *
 485:Generated_Source\PSoC4/DMA.h **** * Summary:
 486:Generated_Source\PSoC4/DMA.h **** *  Returns the number of data elements to be transferred. Only reflects the
 487:Generated_Source\PSoC4/DMA.h **** *  value written by DMA_SetNumDataElements() or DMA_SetConfiguration().
 488:Generated_Source\PSoC4/DMA.h **** *  This does not reflect how many elements have been transferred. For that
 489:Generated_Source\PSoC4/DMA.h **** *  information use the DMA_GetDescriptorStatus() function.
 490:Generated_Source\PSoC4/DMA.h **** *
 491:Generated_Source\PSoC4/DMA.h **** * Parameters:
 492:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 493:Generated_Source\PSoC4/DMA.h **** *                   
 494:Generated_Source\PSoC4/DMA.h **** * Return:
 495:Generated_Source\PSoC4/DMA.h **** *  Number of data elements to transfer.
 496:Generated_Source\PSoC4/DMA.h **** *
 497:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 498:Generated_Source\PSoC4/DMA.h **** static CY_INLINE int32 DMA_GetNumDataElements(int32 descriptor)
 499:Generated_Source\PSoC4/DMA.h **** {
 500:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetNumDataElements(DMA_CHANNEL, descriptor));
 501:Generated_Source\PSoC4/DMA.h **** }
 502:Generated_Source\PSoC4/DMA.h **** 
 503:Generated_Source\PSoC4/DMA.h **** 
 504:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 505:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetSrcDstTransferWidth
 506:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 507:Generated_Source\PSoC4/DMA.h **** *
 508:Generated_Source\PSoC4/DMA.h **** * Summary:
 509:Generated_Source\PSoC4/DMA.h **** *  Sets the width of the source and destination. The DMA can either read and
 510:Generated_Source\PSoC4/DMA.h **** *  write data from the source and destination at the size specified by
 511:Generated_Source\PSoC4/DMA.h **** *  DMA_SetDataElementSize() or by a word (4bytes). This also determines how
 512:Generated_Source\PSoC4/DMA.h **** *  many bytes the addresses are incremented if increment source and destination
 513:Generated_Source\PSoC4/DMA.h **** *  address are turned on.
 514:Generated_Source\PSoC4/DMA.h **** *
 515:Generated_Source\PSoC4/DMA.h **** * Parameters:
 516:Generated_Source\PSoC4/DMA.h **** *  descriptor:    Descriptor (0 or 1) modified by this function.
 517:Generated_Source\PSoC4/DMA.h **** *  transferWidth: Specifies the source and destination widths. Refer to the API
 518:Generated_Source\PSoC4/DMA.h **** *                 bit field definitions in CyDMA_P4.h or the API description in
 519:Generated_Source\PSoC4/DMA.h **** *                 the DMA channel datasheet for the parameter options.
 520:Generated_Source\PSoC4/DMA.h **** *                   
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 12


 521:Generated_Source\PSoC4/DMA.h **** * Return:
 522:Generated_Source\PSoC4/DMA.h **** *  None.
 523:Generated_Source\PSoC4/DMA.h **** *
 524:Generated_Source\PSoC4/DMA.h **** * Side effect:
 525:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 526:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 527:Generated_Source\PSoC4/DMA.h **** *
 528:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 529:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth)
 530:Generated_Source\PSoC4/DMA.h **** {
 531:Generated_Source\PSoC4/DMA.h ****     CyDmaSetSrcDstTransferWidth(DMA_CHANNEL, descriptor, transferWidth);
 532:Generated_Source\PSoC4/DMA.h **** }
 533:Generated_Source\PSoC4/DMA.h **** 
 534:Generated_Source\PSoC4/DMA.h **** 
 535:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 536:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetSrcDstTransferWidth
 537:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 538:Generated_Source\PSoC4/DMA.h **** *
 539:Generated_Source\PSoC4/DMA.h **** * Summary:
 540:Generated_Source\PSoC4/DMA.h **** *  Returns the width of the source and destination, as set by 
 541:Generated_Source\PSoC4/DMA.h **** *  DMA_SetSrcDstTransferWidth() or DMA_SetConfiguration().
 542:Generated_Source\PSoC4/DMA.h **** *
 543:Generated_Source\PSoC4/DMA.h **** * Parameters:
 544:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 545:Generated_Source\PSoC4/DMA.h **** *                   
 546:Generated_Source\PSoC4/DMA.h **** * Return:
 547:Generated_Source\PSoC4/DMA.h **** *  Width of source and destination. Refer to the API bit field definitions in
 548:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 549:Generated_Source\PSoC4/DMA.h **** *  information.
 550:Generated_Source\PSoC4/DMA.h **** *
 551:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 552:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetSrcDstTransferWidth(int32 descriptor)
 553:Generated_Source\PSoC4/DMA.h **** {
 554:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetSrcDstTransferWidth(DMA_CHANNEL, descriptor));
 555:Generated_Source\PSoC4/DMA.h **** }
 556:Generated_Source\PSoC4/DMA.h **** 
 557:Generated_Source\PSoC4/DMA.h **** 
 558:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 559:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetAddressIncrement
 560:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 561:Generated_Source\PSoC4/DMA.h **** *
 562:Generated_Source\PSoC4/DMA.h **** * Summary:
 563:Generated_Source\PSoC4/DMA.h **** *  Sets whether the source or destination addresses are incremented after the
 564:Generated_Source\PSoC4/DMA.h **** *  transfer of each data element. The amount that the source and destination
 565:Generated_Source\PSoC4/DMA.h **** *  address are incremented is determined by the DMA_SetSrcDstTransferWidth()
 566:Generated_Source\PSoC4/DMA.h **** *  function. The addresses will either be incremented by the data element size
 567:Generated_Source\PSoC4/DMA.h **** *  or by a word (4 bytes).
 568:Generated_Source\PSoC4/DMA.h **** *
 569:Generated_Source\PSoC4/DMA.h **** * Parameters:
 570:Generated_Source\PSoC4/DMA.h **** *  descriptor:       Descriptor (0 or 1) modified by this function.
 571:Generated_Source\PSoC4/DMA.h **** *  addressIncrement: Address increment settings. Refer to the API bit field
 572:Generated_Source\PSoC4/DMA.h **** *                    definitions in CyDMA_P4.h or the API description in the DMA
 573:Generated_Source\PSoC4/DMA.h **** *                    channel datasheet for the parameter options.
 574:Generated_Source\PSoC4/DMA.h **** *    
 575:Generated_Source\PSoC4/DMA.h **** * Return:
 576:Generated_Source\PSoC4/DMA.h **** *  None.
 577:Generated_Source\PSoC4/DMA.h **** *
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 13


 578:Generated_Source\PSoC4/DMA.h **** * Side effect:
 579:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 580:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 581:Generated_Source\PSoC4/DMA.h **** *
 582:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 583:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement)
 584:Generated_Source\PSoC4/DMA.h **** {
 585:Generated_Source\PSoC4/DMA.h ****     CyDmaSetAddressIncrement(DMA_CHANNEL, descriptor, addressIncrement);
 586:Generated_Source\PSoC4/DMA.h **** }
 587:Generated_Source\PSoC4/DMA.h **** 
 588:Generated_Source\PSoC4/DMA.h **** 
 589:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 590:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetAddressIncrement
 591:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 592:Generated_Source\PSoC4/DMA.h **** *
 593:Generated_Source\PSoC4/DMA.h **** * Summary:
 594:Generated_Source\PSoC4/DMA.h **** *  Returns address increment settings as set by DMA_SetAddressIncrement()
 595:Generated_Source\PSoC4/DMA.h **** *  or DMA_SetConfiguration().
 596:Generated_Source\PSoC4/DMA.h **** *
 597:Generated_Source\PSoC4/DMA.h **** * Parameters:
 598:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 599:Generated_Source\PSoC4/DMA.h **** *                   
 600:Generated_Source\PSoC4/DMA.h **** * Return:
 601:Generated_Source\PSoC4/DMA.h **** *  Address increment settings. Refer to the API bit field definitions in
 602:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 603:Generated_Source\PSoC4/DMA.h **** *  information.
 604:Generated_Source\PSoC4/DMA.h **** *
 605:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 606:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetAddressIncrement(int32 descriptor)
 607:Generated_Source\PSoC4/DMA.h **** {
 608:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetAddressIncrement(DMA_CHANNEL, descriptor));
 609:Generated_Source\PSoC4/DMA.h **** }
 610:Generated_Source\PSoC4/DMA.h **** 
 611:Generated_Source\PSoC4/DMA.h **** 
 612:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 613:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetTriggerType
 614:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 615:Generated_Source\PSoC4/DMA.h **** *
 616:Generated_Source\PSoC4/DMA.h **** * Summary:
 617:Generated_Source\PSoC4/DMA.h **** *  Sets the type of input trigger for the DMA For level sensitive triggers sets
 618:Generated_Source\PSoC4/DMA.h **** *  how long the DMA waits for the trigger to go low (deactivate) before
 619:Generated_Source\PSoC4/DMA.h **** *  triggering the channel again.
 620:Generated_Source\PSoC4/DMA.h **** *
 621:Generated_Source\PSoC4/DMA.h **** * Parameters:
 622:Generated_Source\PSoC4/DMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 623:Generated_Source\PSoC4/DMA.h **** *  triggerType: Type of DMA trigger. Refer to the API bit field definitions in
 624:Generated_Source\PSoC4/DMA.h **** *               CyDMA_P4.h or the API description in the DMA channel datasheet
 625:Generated_Source\PSoC4/DMA.h **** *               for the parameter options.
 626:Generated_Source\PSoC4/DMA.h **** *                   
 627:Generated_Source\PSoC4/DMA.h **** * Return:
 628:Generated_Source\PSoC4/DMA.h **** *  None.
 629:Generated_Source\PSoC4/DMA.h **** *
 630:Generated_Source\PSoC4/DMA.h **** * Side effect:
 631:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 632:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 633:Generated_Source\PSoC4/DMA.h **** *
 634:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 14


 635:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetTriggerType(int32 descriptor, uint32 triggerType)
 636:Generated_Source\PSoC4/DMA.h **** {
 637:Generated_Source\PSoC4/DMA.h ****     CyDmaSetTriggerType(DMA_CHANNEL, descriptor, triggerType);
 638:Generated_Source\PSoC4/DMA.h **** }
 639:Generated_Source\PSoC4/DMA.h **** 
 640:Generated_Source\PSoC4/DMA.h **** 
 641:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 642:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetTriggerType
 643:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 644:Generated_Source\PSoC4/DMA.h **** *
 645:Generated_Source\PSoC4/DMA.h **** * Summary:
 646:Generated_Source\PSoC4/DMA.h **** *  Returns the trigger deactivation settings as set by DMA_SetTriggerType()
 647:Generated_Source\PSoC4/DMA.h **** *  or DMA_SetConfiguration().
 648:Generated_Source\PSoC4/DMA.h **** *
 649:Generated_Source\PSoC4/DMA.h **** * Parameters:
 650:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 651:Generated_Source\PSoC4/DMA.h **** *                   
 652:Generated_Source\PSoC4/DMA.h **** * Return:
 653:Generated_Source\PSoC4/DMA.h **** *  Trigger deactivation settings. Refer to the API bit field definitions in
 654:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 655:Generated_Source\PSoC4/DMA.h **** *  information.
 656:Generated_Source\PSoC4/DMA.h **** *
 657:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 658:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetTriggerType(int32 descriptor)
 659:Generated_Source\PSoC4/DMA.h **** {
 660:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetTriggerType(DMA_CHANNEL, descriptor));
 661:Generated_Source\PSoC4/DMA.h **** }
 662:Generated_Source\PSoC4/DMA.h **** 
 663:Generated_Source\PSoC4/DMA.h **** 
 664:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 665:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetTransferMode
 666:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 667:Generated_Source\PSoC4/DMA.h **** *
 668:Generated_Source\PSoC4/DMA.h **** * Summary:
 669:Generated_Source\PSoC4/DMA.h **** *  Sets the DMA transfer mode. This determines how the DMA reacts to each trigger
 670:Generated_Source\PSoC4/DMA.h **** *  event.
 671:Generated_Source\PSoC4/DMA.h **** *
 672:Generated_Source\PSoC4/DMA.h **** * Parameters:
 673:Generated_Source\PSoC4/DMA.h **** *  descriptor:   Descriptor (0 or 1) modified by this function.
 674:Generated_Source\PSoC4/DMA.h **** *  transferMode: Specifies the DMA transfer mode settings. Refer to the API bit
 675:Generated_Source\PSoC4/DMA.h **** *                field definitions in CyDMA_P4.h or the API description in the
 676:Generated_Source\PSoC4/DMA.h **** *                DMA channel datasheet for the parameter options.
 677:Generated_Source\PSoC4/DMA.h **** *                   
 678:Generated_Source\PSoC4/DMA.h **** * Return:
 679:Generated_Source\PSoC4/DMA.h **** *  None.
 680:Generated_Source\PSoC4/DMA.h **** *
 681:Generated_Source\PSoC4/DMA.h **** * Side effect:
 682:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 683:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 684:Generated_Source\PSoC4/DMA.h **** *
 685:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 686:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetTransferMode(int32 descriptor, uint32 transferMode)
 687:Generated_Source\PSoC4/DMA.h **** {
 688:Generated_Source\PSoC4/DMA.h ****     CyDmaSetTransferMode(DMA_CHANNEL, descriptor, transferMode);
 689:Generated_Source\PSoC4/DMA.h **** }
 690:Generated_Source\PSoC4/DMA.h **** 
 691:Generated_Source\PSoC4/DMA.h **** 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 15


 692:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 693:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetTransferMode
 694:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 695:Generated_Source\PSoC4/DMA.h **** *
 696:Generated_Source\PSoC4/DMA.h **** * Summary:
 697:Generated_Source\PSoC4/DMA.h **** *  Returns the transfer mode for the specified descriptor as set by 
 698:Generated_Source\PSoC4/DMA.h **** *  DMA_SetTransferMode() or DMA_SetConfiguration().
 699:Generated_Source\PSoC4/DMA.h **** *
 700:Generated_Source\PSoC4/DMA.h **** * Parameters:
 701:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 702:Generated_Source\PSoC4/DMA.h **** *                   
 703:Generated_Source\PSoC4/DMA.h **** * Return:
 704:Generated_Source\PSoC4/DMA.h **** *  DMA transfer mode settings. Refer to the API bit field definitions in
 705:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 706:Generated_Source\PSoC4/DMA.h **** *  information.
 707:Generated_Source\PSoC4/DMA.h **** *
 708:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 709:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetTransferMode(int32 descriptor)
 710:Generated_Source\PSoC4/DMA.h **** {
 711:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetTransferMode(DMA_CHANNEL, descriptor));
 712:Generated_Source\PSoC4/DMA.h **** }
 713:Generated_Source\PSoC4/DMA.h **** 
 714:Generated_Source\PSoC4/DMA.h **** 
 715:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 716:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetPreemptable
 717:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 718:Generated_Source\PSoC4/DMA.h **** *
 719:Generated_Source\PSoC4/DMA.h **** * Summary:
 720:Generated_Source\PSoC4/DMA.h **** *  Determines if the descriptor is preemptable.
 721:Generated_Source\PSoC4/DMA.h **** *
 722:Generated_Source\PSoC4/DMA.h **** * Parameters:
 723:Generated_Source\PSoC4/DMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 724:Generated_Source\PSoC4/DMA.h **** *  preemptable: Descriptor preemption settings. Refer to the API bit field
 725:Generated_Source\PSoC4/DMA.h **** *               definitions in CyDMA_P4.h or the API description in the DMA 
 726:Generated_Source\PSoC4/DMA.h **** *               channel datasheet for the parameter options.
 727:Generated_Source\PSoC4/DMA.h **** *                   
 728:Generated_Source\PSoC4/DMA.h **** * Return:
 729:Generated_Source\PSoC4/DMA.h **** *  None.
 730:Generated_Source\PSoC4/DMA.h **** *
 731:Generated_Source\PSoC4/DMA.h **** * Side effect:
 732:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 733:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 734:Generated_Source\PSoC4/DMA.h **** *
 735:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 736:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetPreemptable(int32 descriptor, uint32 preemptable)
 737:Generated_Source\PSoC4/DMA.h **** {
 738:Generated_Source\PSoC4/DMA.h ****     CyDmaSetPreemptable(DMA_CHANNEL, descriptor, preemptable);
 739:Generated_Source\PSoC4/DMA.h **** }
 740:Generated_Source\PSoC4/DMA.h **** 
 741:Generated_Source\PSoC4/DMA.h **** 
 742:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 743:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetPreemptable
 744:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 745:Generated_Source\PSoC4/DMA.h **** *
 746:Generated_Source\PSoC4/DMA.h **** * Summary:
 747:Generated_Source\PSoC4/DMA.h **** *  Returns whether or not the descriptor is preemptable.
 748:Generated_Source\PSoC4/DMA.h **** *
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 16


 749:Generated_Source\PSoC4/DMA.h **** * Parameters:
 750:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 751:Generated_Source\PSoC4/DMA.h **** *                   
 752:Generated_Source\PSoC4/DMA.h **** * Return:
 753:Generated_Source\PSoC4/DMA.h **** *  Descriptor preemption setting. Refer to the API bit field definitions in
 754:Generated_Source\PSoC4/DMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 755:Generated_Source\PSoC4/DMA.h **** *  information.
 756:Generated_Source\PSoC4/DMA.h **** *
 757:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 758:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetPreemptable(int32 descriptor)
 759:Generated_Source\PSoC4/DMA.h **** {
 760:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetPreemptable(DMA_CHANNEL, descriptor));
 761:Generated_Source\PSoC4/DMA.h **** }
 762:Generated_Source\PSoC4/DMA.h **** 
 763:Generated_Source\PSoC4/DMA.h **** 
 764:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 765:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetPostCompletionActions
 766:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 767:Generated_Source\PSoC4/DMA.h **** *
 768:Generated_Source\PSoC4/DMA.h **** * Summary:
 769:Generated_Source\PSoC4/DMA.h **** *  Determines what occurs after a descriptor completes.
 770:Generated_Source\PSoC4/DMA.h **** *
 771:Generated_Source\PSoC4/DMA.h **** * Parameters:
 772:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 773:Generated_Source\PSoC4/DMA.h **** *  actions:    Specifies descriptor post completion actions. Refer to the API
 774:Generated_Source\PSoC4/DMA.h **** *              bit field definitions in CyDMA_P4.h or the API description in the
 775:Generated_Source\PSoC4/DMA.h **** *              DMA channel datasheet for the parameter options.
 776:Generated_Source\PSoC4/DMA.h **** *                   
 777:Generated_Source\PSoC4/DMA.h **** * Return:
 778:Generated_Source\PSoC4/DMA.h **** *  None.  
 779:Generated_Source\PSoC4/DMA.h **** *
 780:Generated_Source\PSoC4/DMA.h **** * Side effect:
 781:Generated_Source\PSoC4/DMA.h **** *  This function should not be called when the specified descriptor is active
 782:Generated_Source\PSoC4/DMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 783:Generated_Source\PSoC4/DMA.h **** *
 784:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 785:Generated_Source\PSoC4/DMA.h **** static CY_INLINE void DMA_SetPostCompletionActions(int32 descriptor, uint32 actions)
 786:Generated_Source\PSoC4/DMA.h **** {
 787:Generated_Source\PSoC4/DMA.h ****     CyDmaSetPostCompletionActions(DMA_CHANNEL, descriptor, actions);
 788:Generated_Source\PSoC4/DMA.h **** }
 789:Generated_Source\PSoC4/DMA.h **** 
 790:Generated_Source\PSoC4/DMA.h **** 
 791:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 792:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_GetPostCompletionAction
 793:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 794:Generated_Source\PSoC4/DMA.h **** *
 795:Generated_Source\PSoC4/DMA.h **** * Summary:
 796:Generated_Source\PSoC4/DMA.h **** *  Returns the post descriptor action settings as set by 
 797:Generated_Source\PSoC4/DMA.h **** *  DMA_SetPostCompletionActions() or DMA_SetConfiguration().
 798:Generated_Source\PSoC4/DMA.h **** *
 799:Generated_Source\PSoC4/DMA.h **** * Parameters:
 800:Generated_Source\PSoC4/DMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 801:Generated_Source\PSoC4/DMA.h **** *                   
 802:Generated_Source\PSoC4/DMA.h **** * Return:
 803:Generated_Source\PSoC4/DMA.h **** *  Post descriptor actions. Refer to the API bit field definitions in CyDMA_P4.h
 804:Generated_Source\PSoC4/DMA.h **** *  or the API description in the DMA channel datasheet for more information.
 805:Generated_Source\PSoC4/DMA.h **** *
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 17


 806:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 807:Generated_Source\PSoC4/DMA.h **** static CY_INLINE uint32 DMA_GetPostCompletionAction(int32 descriptor)
 808:Generated_Source\PSoC4/DMA.h **** {
 809:Generated_Source\PSoC4/DMA.h ****     return (CyDmaGetPostCompletionActions(DMA_CHANNEL, descriptor));
 810:Generated_Source\PSoC4/DMA.h **** }
 811:Generated_Source\PSoC4/DMA.h **** 
 812:Generated_Source\PSoC4/DMA.h **** 
 813:Generated_Source\PSoC4/DMA.h **** /*******************************************************************************
 814:Generated_Source\PSoC4/DMA.h **** * Function Name: DMA_SetInterruptCallback
 815:Generated_Source\PSoC4/DMA.h **** ********************************************************************************
 816:Generated_Source\PSoC4/DMA.h **** *
 817:Generated_Source\PSoC4/DMA.h **** * Summary:
 818:Generated_Source\PSoC4/DMA.h **** *  Sets a user defined callback function to be called by the DMA interrupt. The
 819:Generated_Source\PSoC4/DMA.h **** *  function should contain code to process the interrupt request for the 
 820:Generated_Source\PSoC4/DMA.h **** *  associated DMA channel.
 821:Generated_Source\PSoC4/DMA.h **** *
 822:Generated_Source\PSoC4/DMA.h **** * Parameters:
 823:Generated_Source\PSoC4/DMA.h **** *  callback: Pointer to the user defined callback function.
 824:Generated_Source\PSoC4/DMA.h **** *
 825:Generated_Source\PSoC4/DMA.h **** * Return:
 826:Generated_Source\PSoC4/DMA.h **** *  Pointer to the function previously set for the specified channel. 
 827:Generated_Source\PSoC4/DMA.h **** *
 828:Generated_Source\PSoC4/DMA.h **** *******************************************************************************/
 829:Generated_Source\PSoC4/DMA.h **** static CY_INLINE cydma_callback_t DMA_SetInterruptCallback(cydma_callback_t callback)
 830:Generated_Source\PSoC4/DMA.h **** {
 831:Generated_Source\PSoC4/DMA.h ****     return (CyDmaSetInterruptCallback(DMA_CHANNEL, callback));
  66              		.loc 2 831 0
  67 000e 0549     		ldr	r1, .L3+8
  68 0010 0220     		movs	r0, #2
  69 0012 FFF7FEFF 		bl	CyDmaSetInterruptCallback
  70              	.LVL2:
  71              	.LBE5:
  72              	.LBE4:
  43:VolumeControl.c ****     
  44:VolumeControl.c ****     DMA_SetInterruptCallback(DmaIntHandler);
  45:VolumeControl.c **** 
  46:VolumeControl.c ****     /* Start ADC conversion. */
  47:VolumeControl.c ****     ADC_StartConvert();
  73              		.loc 1 47 0
  74 0016 FFF7FEFF 		bl	ADC_StartConvert
  75              	.LVL3:
  48:VolumeControl.c **** }
  76              		.loc 1 48 0
  77              		@ sp needed
  78 001a 10BD     		pop	{r4, pc}
  79              	.L4:
  80              		.align	2
  81              	.L3:
  82 001c 00000000 		.word	.LANCHOR0
  83 0020 80013A40 		.word	1077543296
  84 0024 00000000 		.word	DmaIntHandler
  85              		.cfi_endproc
  86              	.LFE35:
  87              		.size	VolumeControlInit, .-VolumeControlInit
  88              		.global	__aeabi_idiv
  89              		.section	.text.VolumeControlService,"ax",%progbits
  90              		.align	2
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 18


  91              		.global	VolumeControlService
  92              		.code	16
  93              		.thumb_func
  94              		.type	VolumeControlService, %function
  95              	VolumeControlService:
  96              	.LFB36:
  49:VolumeControl.c **** 
  50:VolumeControl.c **** void VolumeControlService(void)
  51:VolumeControl.c **** {
  97              		.loc 1 51 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 102              		.cfi_def_cfa_offset 20
 103              		.cfi_offset 4, -20
 104              		.cfi_offset 5, -16
 105              		.cfi_offset 6, -12
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 83B0     		sub	sp, sp, #12
 109              		.cfi_def_cfa_offset 32
 110              	.LVL4:
  52:VolumeControl.c ****     static int32 prevVol[vol_ctrl_both] = { 0, 0 };
  53:VolumeControl.c ****     int32 volume[vol_ctrl_both] = { 0, 0 };
  54:VolumeControl.c ****     int i;
  55:VolumeControl.c **** 
  56:VolumeControl.c ****     for (i = 0; i < vol_ctrl_both; i++)
 111              		.loc 1 56 0
 112 0004 0024     		movs	r4, #0
 113 0006 41E0     		b	.L6
 114              	.LVL5:
 115              	.L13:
  57:VolumeControl.c **** 	{
  58:VolumeControl.c ****         // Scale ADC reading to USBFS volume range
  59:VolumeControl.c ****         volume[i] = (adcSample[i] - ADC_MIN_READING[i]) * PC_VOLUME_MSB_MAX / ADC_READING_RANGE(i);
 116              		.loc 1 59 0
 117 0008 224E     		ldr	r6, .L15
 118 000a 6300     		lsls	r3, r4, #1
 119 000c 9A5F     		ldrsh	r2, [r3, r6]
 120 000e 224B     		ldr	r3, .L15+4
 121 0010 A500     		lsls	r5, r4, #2
 122 0012 E958     		ldr	r1, [r5, r3]
 123 0014 521A     		subs	r2, r2, r1
 124 0016 D001     		lsls	r0, r2, #7
 125 0018 801A     		subs	r0, r0, r2
 126 001a 5B19     		adds	r3, r3, r5
 127 001c 9B68     		ldr	r3, [r3, #8]
 128 001e 591A     		subs	r1, r3, r1
 129 0020 FFF7FEFF 		bl	__aeabi_idiv
 130              	.LVL6:
 131 0024 0700     		movs	r7, r0
  60:VolumeControl.c **** 
  61:VolumeControl.c ****         #if 0
  62:VolumeControl.c ****         /* Filter volume to be in the expected range */
  63:VolumeControl.c **** 		if((volume[i] > PC_VOLUME_MSB_MIN) && (volume[i] <= PC_VOLUME_MSB_MAX))
  64:VolumeControl.c **** 		{
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 19


  65:VolumeControl.c **** 			volume[i] = (uint8)(((volume[i] - PC_VOLUME_MSB_MIN) * CODEC_HP_VOLUME_MAX) / (PC_VOLUME_MSB_MAX
  66:VolumeControl.c **** 		}
  67:VolumeControl.c **** 		else
  68:VolumeControl.c **** 		{
  69:VolumeControl.c **** 			/* Set volume to 0 if the volume from PC is not in expected range */
  70:VolumeControl.c **** 			volume[i] = 0;
  71:VolumeControl.c **** 		}
  72:VolumeControl.c ****         #endif
  73:VolumeControl.c **** 
  74:VolumeControl.c ****         if (volume[i] != prevVol[i])
 132              		.loc 1 74 0
 133 0026 7519     		adds	r5, r6, r5
 134 0028 6B68     		ldr	r3, [r5, #4]
 135 002a 9842     		cmp	r0, r3
 136 002c 2DD0     		beq	.L7
  75:VolumeControl.c ****         {
  76:VolumeControl.c ****             /* Update the codec volume */
  77:VolumeControl.c ****             D_PRINTF(DEBUG, "%s volume knob change %ld -> %ld\n", (i == vol_ctrl_right) ? "Right" :
 137              		.loc 1 77 0
 138 002e 1B4B     		ldr	r3, .L15+8
 139 0030 1B68     		ldr	r3, [r3]
 140 0032 002B     		cmp	r3, #0
 141 0034 1CD0     		beq	.L8
 142              		.loc 1 77 0 is_stmt 0 discriminator 1
 143 0036 5B7C     		ldrb	r3, [r3, #17]
 144 0038 9B07     		lsls	r3, r3, #30
 145 003a 19D0     		beq	.L8
 146              		.loc 1 77 0 discriminator 2
 147 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 148              	.LVL7:
 149 0040 0028     		cmp	r0, #0
 150 0042 15D0     		beq	.L8
 151              	.L9:
 152              		.loc 1 77 0 discriminator 3
 153 0044 FFF7FEFF 		bl	USBUART_CDCIsReady
 154              	.LVL8:
 155 0048 0028     		cmp	r0, #0
 156 004a FBD0     		beq	.L9
 157              		.loc 1 77 0 discriminator 4
 158 004c 002C     		cmp	r4, #0
 159 004e 01D1     		bne	.L14
 160              		.loc 1 77 0
 161 0050 134A     		ldr	r2, .L15+12
 162 0052 00E0     		b	.L10
 163              	.L14:
 164 0054 134A     		ldr	r2, .L15+16
 165              	.L10:
 166              		.loc 1 77 0 discriminator 8
 167 0056 A300     		lsls	r3, r4, #2
 168 0058 0E49     		ldr	r1, .L15
 169 005a CB18     		adds	r3, r1, r3
 170 005c 5B68     		ldr	r3, [r3, #4]
 171 005e 124D     		ldr	r5, .L15+20
 172 0060 0097     		str	r7, [sp]
 173 0062 1249     		ldr	r1, .L15+24
 174 0064 2800     		movs	r0, r5
 175 0066 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 20


 176              	.LVL9:
 177 006a 2800     		movs	r0, r5
 178 006c FFF7FEFF 		bl	USBUART_PutString
 179              	.LVL10:
 180              	.L8:
  78:VolumeControl.c ****             
  79:VolumeControl.c ****             if (i == vol_ctrl_right)
 181              		.loc 1 79 0 is_stmt 1
 182 0070 002C     		cmp	r4, #0
 183 0072 03D1     		bne	.L11
  80:VolumeControl.c ****             {
  81:VolumeControl.c ****     		    Codec_AdjustBothHeadphoneVolumeLevel(volume[i]);
 184              		.loc 1 81 0
 185 0074 F8B2     		uxtb	r0, r7
 186 0076 FFF7FEFF 		bl	Codec_AdjustBothHeadphoneVolumeLevel
 187              	.LVL11:
 188 007a 02E0     		b	.L12
 189              	.L11:
  82:VolumeControl.c ****             }
  83:VolumeControl.c ****             else
  84:VolumeControl.c ****             {
  85:VolumeControl.c ****                 pcm1770_volume_set_level(volume[i]);
 190              		.loc 1 85 0
 191 007c F8B2     		uxtb	r0, r7
 192 007e FFF7FEFF 		bl	pcm1770_volume_set_level
 193              	.LVL12:
 194              	.L12:
  86:VolumeControl.c ****             }
  87:VolumeControl.c ****             prevVol[i] = volume[i];
 195              		.loc 1 87 0
 196 0082 A300     		lsls	r3, r4, #2
 197 0084 034A     		ldr	r2, .L15
 198 0086 D318     		adds	r3, r2, r3
 199 0088 5F60     		str	r7, [r3, #4]
 200              	.L7:
  56:VolumeControl.c **** 	{
 201              		.loc 1 56 0 discriminator 2
 202 008a 0134     		adds	r4, r4, #1
 203              	.LVL13:
 204              	.L6:
  56:VolumeControl.c **** 	{
 205              		.loc 1 56 0 is_stmt 0 discriminator 1
 206 008c 012C     		cmp	r4, #1
 207 008e BBDD     		ble	.L13
  88:VolumeControl.c ****         }
  89:VolumeControl.c ****     }
  90:VolumeControl.c **** }
 208              		.loc 1 90 0 is_stmt 1
 209 0090 03B0     		add	sp, sp, #12
 210              		@ sp needed
 211              	.LVL14:
 212 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 213              	.L16:
 214              		.align	2
 215              	.L15:
 216 0094 00000000 		.word	.LANCHOR0
 217 0098 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 21


 218 009c 00000000 		.word	cal_data
 219 00a0 00000000 		.word	.LC2
 220 00a4 08000000 		.word	.LC4
 221 00a8 00000000 		.word	gbuf
 222 00ac 10000000 		.word	.LC9
 223              		.cfi_endproc
 224              	.LFE36:
 225              		.size	VolumeControlService, .-VolumeControlService
 226              		.global	adcSample
 227              		.global	ADC_MAX_READING
 228              		.global	ADC_MIN_READING
 229              		.data
 230              		.align	2
 231              		.set	.LANCHOR1,. + 0
 232              		.type	ADC_MIN_READING, %object
 233              		.size	ADC_MIN_READING, 8
 234              	ADC_MIN_READING:
 235 0000 FEFFFFFF 		.word	-2
 236 0004 FEFFFFFF 		.word	-2
 237              		.type	ADC_MAX_READING, %object
 238              		.size	ADC_MAX_READING, 8
 239              	ADC_MAX_READING:
 240 0008 FF070000 		.word	2047
 241 000c FF070000 		.word	2047
 242              		.section	.rodata.str1.4,"aMS",%progbits,1
 243              		.align	2
 244              	.LC2:
 245 0000 52696768 		.ascii	"Right\000"
 245      7400
 246 0006 0000     		.space	2
 247              	.LC4:
 248 0008 4C656674 		.ascii	"Left\000"
 248      00
 249 000d 000000   		.space	3
 250              	.LC9:
 251 0010 25732076 		.ascii	"%s volume knob change %ld -> %ld\012\000"
 251      6F6C756D 
 251      65206B6E 
 251      6F622063 
 251      68616E67 
 252              		.bss
 253              		.align	2
 254              		.set	.LANCHOR0,. + 0
 255              		.type	adcSample, %object
 256              		.size	adcSample, 4
 257              	adcSample:
 258 0000 00000000 		.space	4
 259              		.type	prevVol.6982, %object
 260              		.size	prevVol.6982, 8
 261              	prevVol.6982:
 262 0004 00000000 		.space	8
 262      00000000 
 263              		.text
 264              	.Letext0:
 265              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 266              		.file 4 "./Calibration.h"
 267              		.file 5 "Generated_Source\\PSoC4/CyDMA.h"
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 22


 268              		.file 6 "./Application.h"
 269              		.file 7 "Generated_Source\\PSoC4/ADC.h"
 270              		.file 8 "Generated_Source\\PSoC4/USBUART.h"
 271              		.file 9 "Generated_Source\\PSoC4/USBUART_cdc.h"
 272              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 273              		.file 11 "./Codec.h"
 274              		.file 12 "./pcm1770.h"
 275              		.file 13 "VolumeControl.h"
 276              		.section	.debug_info,"",%progbits
 277              	.Ldebug_info0:
 278 0000 9B030000 		.4byte	0x39b
 279 0004 0400     		.2byte	0x4
 280 0006 00000000 		.4byte	.Ldebug_abbrev0
 281 000a 04       		.byte	0x4
 282 000b 01       		.uleb128 0x1
 283 000c 00020000 		.4byte	.LASF48
 284 0010 0C       		.byte	0xc
 285 0011 06000000 		.4byte	.LASF49
 286 0015 05010000 		.4byte	.LASF50
 287 0019 00000000 		.4byte	.Ldebug_ranges0+0
 288 001d 00000000 		.4byte	0
 289 0021 00000000 		.4byte	.Ldebug_line0
 290 0025 02       		.uleb128 0x2
 291 0026 01       		.byte	0x1
 292 0027 06       		.byte	0x6
 293 0028 48030000 		.4byte	.LASF0
 294 002c 02       		.uleb128 0x2
 295 002d 01       		.byte	0x1
 296 002e 08       		.byte	0x8
 297 002f B3000000 		.4byte	.LASF1
 298 0033 02       		.uleb128 0x2
 299 0034 02       		.byte	0x2
 300 0035 05       		.byte	0x5
 301 0036 5C010000 		.4byte	.LASF2
 302 003a 02       		.uleb128 0x2
 303 003b 02       		.byte	0x2
 304 003c 07       		.byte	0x7
 305 003d 33000000 		.4byte	.LASF3
 306 0041 02       		.uleb128 0x2
 307 0042 04       		.byte	0x4
 308 0043 05       		.byte	0x5
 309 0044 2A030000 		.4byte	.LASF4
 310 0048 02       		.uleb128 0x2
 311 0049 04       		.byte	0x4
 312 004a 07       		.byte	0x7
 313 004b 94010000 		.4byte	.LASF5
 314 004f 02       		.uleb128 0x2
 315 0050 08       		.byte	0x8
 316 0051 05       		.byte	0x5
 317 0052 A3020000 		.4byte	.LASF6
 318 0056 02       		.uleb128 0x2
 319 0057 08       		.byte	0x8
 320 0058 07       		.byte	0x7
 321 0059 B3010000 		.4byte	.LASF7
 322 005d 03       		.uleb128 0x3
 323 005e 04       		.byte	0x4
 324 005f 05       		.byte	0x5
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 23


 325 0060 696E7400 		.ascii	"int\000"
 326 0064 02       		.uleb128 0x2
 327 0065 04       		.byte	0x4
 328 0066 07       		.byte	0x7
 329 0067 A6010000 		.4byte	.LASF8
 330 006b 04       		.uleb128 0x4
 331 006c 5F000000 		.4byte	.LASF9
 332 0070 03       		.byte	0x3
 333 0071 E401     		.2byte	0x1e4
 334 0073 2C000000 		.4byte	0x2c
 335 0077 04       		.uleb128 0x4
 336 0078 7F010000 		.4byte	.LASF10
 337 007c 03       		.byte	0x3
 338 007d E601     		.2byte	0x1e6
 339 007f 48000000 		.4byte	0x48
 340 0083 04       		.uleb128 0x4
 341 0084 FF000000 		.4byte	.LASF11
 342 0088 03       		.byte	0x3
 343 0089 E801     		.2byte	0x1e8
 344 008b 33000000 		.4byte	0x33
 345 008f 04       		.uleb128 0x4
 346 0090 2C010000 		.4byte	.LASF12
 347 0094 03       		.byte	0x3
 348 0095 E901     		.2byte	0x1e9
 349 0097 41000000 		.4byte	0x41
 350 009b 02       		.uleb128 0x2
 351 009c 04       		.byte	0x4
 352 009d 04       		.byte	0x4
 353 009e A6000000 		.4byte	.LASF13
 354 00a2 02       		.uleb128 0x2
 355 00a3 08       		.byte	0x8
 356 00a4 04       		.byte	0x4
 357 00a5 58000000 		.4byte	.LASF14
 358 00a9 02       		.uleb128 0x2
 359 00aa 01       		.byte	0x1
 360 00ab 08       		.byte	0x8
 361 00ac B1020000 		.4byte	.LASF15
 362 00b0 04       		.uleb128 0x4
 363 00b1 00000000 		.4byte	.LASF16
 364 00b5 03       		.byte	0x3
 365 00b6 9002     		.2byte	0x290
 366 00b8 BC000000 		.4byte	0xbc
 367 00bc 05       		.uleb128 0x5
 368 00bd 77000000 		.4byte	0x77
 369 00c1 06       		.uleb128 0x6
 370 00c2 04       		.byte	0x4
 371 00c3 C7000000 		.4byte	0xc7
 372 00c7 07       		.uleb128 0x7
 373 00c8 02       		.uleb128 0x2
 374 00c9 08       		.byte	0x8
 375 00ca 04       		.byte	0x4
 376 00cb 8E020000 		.4byte	.LASF17
 377 00cf 02       		.uleb128 0x2
 378 00d0 04       		.byte	0x4
 379 00d1 07       		.byte	0x7
 380 00d2 9A020000 		.4byte	.LASF18
 381 00d6 08       		.uleb128 0x8
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 24


 382 00d7 14       		.byte	0x14
 383 00d8 04       		.byte	0x4
 384 00d9 12       		.byte	0x12
 385 00da 27010000 		.4byte	0x127
 386 00de 09       		.uleb128 0x9
 387 00df 16000000 		.4byte	.LASF19
 388 00e3 04       		.byte	0x4
 389 00e4 14       		.byte	0x14
 390 00e5 77000000 		.4byte	0x77
 391 00e9 00       		.byte	0
 392 00ea 09       		.uleb128 0x9
 393 00eb 3B010000 		.4byte	.LASF20
 394 00ef 04       		.byte	0x4
 395 00f0 15       		.byte	0x15
 396 00f1 77000000 		.4byte	0x77
 397 00f5 04       		.byte	0x4
 398 00f6 09       		.uleb128 0x9
 399 00f7 B6020000 		.4byte	.LASF21
 400 00fb 04       		.byte	0x4
 401 00fc 16       		.byte	0x16
 402 00fd 27010000 		.4byte	0x127
 403 0101 08       		.byte	0x8
 404 0102 09       		.uleb128 0x9
 405 0103 CA010000 		.4byte	.LASF22
 406 0107 04       		.byte	0x4
 407 0108 17       		.byte	0x17
 408 0109 27010000 		.4byte	0x127
 409 010d 0C       		.byte	0xc
 410 010e 09       		.uleb128 0x9
 411 010f 20000000 		.4byte	.LASF23
 412 0113 04       		.byte	0x4
 413 0114 19       		.byte	0x19
 414 0115 6B000000 		.4byte	0x6b
 415 0119 10       		.byte	0x10
 416 011a 09       		.uleb128 0x9
 417 011b 51010000 		.4byte	.LASF24
 418 011f 04       		.byte	0x4
 419 0120 1A       		.byte	0x1a
 420 0121 6B000000 		.4byte	0x6b
 421 0125 11       		.byte	0x11
 422 0126 00       		.byte	0
 423 0127 0A       		.uleb128 0xa
 424 0128 83000000 		.4byte	0x83
 425 012c 37010000 		.4byte	0x137
 426 0130 0B       		.uleb128 0xb
 427 0131 CF000000 		.4byte	0xcf
 428 0135 01       		.byte	0x1
 429 0136 00       		.byte	0
 430 0137 0C       		.uleb128 0xc
 431 0138 17030000 		.4byte	.LASF25
 432 013c 04       		.byte	0x4
 433 013d 1B       		.byte	0x1b
 434 013e D6000000 		.4byte	0xd6
 435 0142 0D       		.uleb128 0xd
 436 0143 01       		.byte	0x1
 437 0144 2C000000 		.4byte	0x2c
 438 0148 0D       		.byte	0xd
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 25


 439 0149 14       		.byte	0x14
 440 014a 61010000 		.4byte	0x161
 441 014e 0E       		.uleb128 0xe
 442 014f F1020000 		.4byte	.LASF26
 443 0153 00       		.byte	0
 444 0154 0E       		.uleb128 0xe
 445 0155 86010000 		.4byte	.LASF27
 446 0159 01       		.byte	0x1
 447 015a 0E       		.uleb128 0xe
 448 015b 43010000 		.4byte	.LASF28
 449 015f 02       		.byte	0x2
 450 0160 00       		.byte	0
 451 0161 0C       		.uleb128 0xc
 452 0162 EF010000 		.4byte	.LASF29
 453 0166 05       		.byte	0x5
 454 0167 67       		.byte	0x67
 455 0168 C1000000 		.4byte	0xc1
 456 016c 0F       		.uleb128 0xf
 457 016d C1000000 		.4byte	.LASF51
 458 0171 02       		.byte	0x2
 459 0172 3D03     		.2byte	0x33d
 460 0174 61010000 		.4byte	0x161
 461 0178 03       		.byte	0x3
 462 0179 8A010000 		.4byte	0x18a
 463 017d 10       		.uleb128 0x10
 464 017e 32010000 		.4byte	.LASF52
 465 0182 02       		.byte	0x2
 466 0183 3D03     		.2byte	0x33d
 467 0185 61010000 		.4byte	0x161
 468 0189 00       		.byte	0
 469 018a 11       		.uleb128 0x11
 470 018b 98000000 		.4byte	.LASF53
 471 018f 01       		.byte	0x1
 472 0190 1D       		.byte	0x1d
 473 0191 00000000 		.4byte	.LFB34
 474 0195 02000000 		.4byte	.LFE34-.LFB34
 475 0199 01       		.uleb128 0x1
 476 019a 9C       		.byte	0x9c
 477 019b 12       		.uleb128 0x12
 478 019c 00030000 		.4byte	.LASF30
 479 01a0 01       		.byte	0x1
 480 01a1 22       		.byte	0x22
 481 01a2 00000000 		.4byte	.LFB35
 482 01a6 28000000 		.4byte	.LFE35-.LFB35
 483 01aa 01       		.uleb128 0x1
 484 01ab 9C       		.byte	0x9c
 485 01ac 18020000 		.4byte	0x218
 486 01b0 13       		.uleb128 0x13
 487 01b1 6C010000 		.4byte	0x16c
 488 01b5 0E000000 		.4byte	.LBB4
 489 01b9 08000000 		.4byte	.LBE4-.LBB4
 490 01bd 01       		.byte	0x1
 491 01be 2C       		.byte	0x2c
 492 01bf E5010000 		.4byte	0x1e5
 493 01c3 14       		.uleb128 0x14
 494 01c4 7D010000 		.4byte	0x17d
 495 01c8 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 26


 496 01cc 15       		.uleb128 0x15
 497 01cd 16000000 		.4byte	.LVL2
 498 01d1 2F030000 		.4byte	0x32f
 499 01d5 16       		.uleb128 0x16
 500 01d6 01       		.uleb128 0x1
 501 01d7 50       		.byte	0x50
 502 01d8 01       		.uleb128 0x1
 503 01d9 32       		.byte	0x32
 504 01da 16       		.uleb128 0x16
 505 01db 01       		.uleb128 0x1
 506 01dc 51       		.byte	0x51
 507 01dd 05       		.uleb128 0x5
 508 01de 03       		.byte	0x3
 509 01df 00000000 		.4byte	DmaIntHandler
 510 01e3 00       		.byte	0
 511 01e4 00       		.byte	0
 512 01e5 17       		.uleb128 0x17
 513 01e6 06000000 		.4byte	.LVL0
 514 01ea 3A030000 		.4byte	0x33a
 515 01ee 18       		.uleb128 0x18
 516 01ef 0E000000 		.4byte	.LVL1
 517 01f3 45030000 		.4byte	0x345
 518 01f7 0E020000 		.4byte	0x20e
 519 01fb 16       		.uleb128 0x16
 520 01fc 01       		.uleb128 0x1
 521 01fd 50       		.byte	0x50
 522 01fe 05       		.uleb128 0x5
 523 01ff 0C       		.byte	0xc
 524 0200 80013A40 		.4byte	0x403a0180
 525 0204 16       		.uleb128 0x16
 526 0205 01       		.uleb128 0x1
 527 0206 51       		.byte	0x51
 528 0207 05       		.uleb128 0x5
 529 0208 03       		.byte	0x3
 530 0209 00000000 		.4byte	.LANCHOR0
 531 020d 00       		.byte	0
 532 020e 17       		.uleb128 0x17
 533 020f 1A000000 		.4byte	.LVL3
 534 0213 50030000 		.4byte	0x350
 535 0217 00       		.byte	0
 536 0218 19       		.uleb128 0x19
 537 0219 33030000 		.4byte	.LASF31
 538 021d 01       		.byte	0x1
 539 021e 32       		.byte	0x32
 540 021f 00000000 		.4byte	.LFB36
 541 0223 B0000000 		.4byte	.LFE36-.LFB36
 542 0227 01       		.uleb128 0x1
 543 0228 9C       		.byte	0x9c
 544 0229 C5020000 		.4byte	0x2c5
 545 022d 1A       		.uleb128 0x1a
 546 022e 6F030000 		.4byte	.LASF32
 547 0232 01       		.byte	0x1
 548 0233 34       		.byte	0x34
 549 0234 C5020000 		.4byte	0x2c5
 550 0238 05       		.uleb128 0x5
 551 0239 03       		.byte	0x3
 552 023a 04000000 		.4byte	prevVol.6982
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 27


 553 023e 1B       		.uleb128 0x1b
 554 023f AC000000 		.4byte	.LASF54
 555 0243 01       		.byte	0x1
 556 0244 35       		.byte	0x35
 557 0245 C5020000 		.4byte	0x2c5
 558 0249 1C       		.uleb128 0x1c
 559 024a 6900     		.ascii	"i\000"
 560 024c 01       		.byte	0x1
 561 024d 36       		.byte	0x36
 562 024e 5D000000 		.4byte	0x5d
 563 0252 18000000 		.4byte	.LLST1
 564 0256 17       		.uleb128 0x17
 565 0257 40000000 		.4byte	.LVL7
 566 025b 5B030000 		.4byte	0x35b
 567 025f 17       		.uleb128 0x17
 568 0260 48000000 		.4byte	.LVL8
 569 0264 67030000 		.4byte	0x367
 570 0268 18       		.uleb128 0x18
 571 0269 6A000000 		.4byte	.LVL9
 572 026d 72030000 		.4byte	0x372
 573 0271 8C020000 		.4byte	0x28c
 574 0275 16       		.uleb128 0x16
 575 0276 01       		.uleb128 0x1
 576 0277 50       		.byte	0x50
 577 0278 02       		.uleb128 0x2
 578 0279 75       		.byte	0x75
 579 027a 00       		.sleb128 0
 580 027b 16       		.uleb128 0x16
 581 027c 01       		.uleb128 0x1
 582 027d 51       		.byte	0x51
 583 027e 05       		.uleb128 0x5
 584 027f 03       		.byte	0x3
 585 0280 10000000 		.4byte	.LC9
 586 0284 16       		.uleb128 0x16
 587 0285 02       		.uleb128 0x2
 588 0286 7D       		.byte	0x7d
 589 0287 00       		.sleb128 0
 590 0288 02       		.uleb128 0x2
 591 0289 77       		.byte	0x77
 592 028a 00       		.sleb128 0
 593 028b 00       		.byte	0
 594 028c 18       		.uleb128 0x18
 595 028d 70000000 		.4byte	.LVL10
 596 0291 7D030000 		.4byte	0x37d
 597 0295 A0020000 		.4byte	0x2a0
 598 0299 16       		.uleb128 0x16
 599 029a 01       		.uleb128 0x1
 600 029b 50       		.byte	0x50
 601 029c 02       		.uleb128 0x2
 602 029d 75       		.byte	0x75
 603 029e 00       		.sleb128 0
 604 029f 00       		.byte	0
 605 02a0 18       		.uleb128 0x18
 606 02a1 7A000000 		.4byte	.LVL11
 607 02a5 88030000 		.4byte	0x388
 608 02a9 B4020000 		.4byte	0x2b4
 609 02ad 16       		.uleb128 0x16
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 28


 610 02ae 01       		.uleb128 0x1
 611 02af 50       		.byte	0x50
 612 02b0 02       		.uleb128 0x2
 613 02b1 77       		.byte	0x77
 614 02b2 00       		.sleb128 0
 615 02b3 00       		.byte	0
 616 02b4 15       		.uleb128 0x15
 617 02b5 82000000 		.4byte	.LVL12
 618 02b9 93030000 		.4byte	0x393
 619 02bd 16       		.uleb128 0x16
 620 02be 01       		.uleb128 0x1
 621 02bf 50       		.byte	0x50
 622 02c0 02       		.uleb128 0x2
 623 02c1 77       		.byte	0x77
 624 02c2 00       		.sleb128 0
 625 02c3 00       		.byte	0
 626 02c4 00       		.byte	0
 627 02c5 0A       		.uleb128 0xa
 628 02c6 8F000000 		.4byte	0x8f
 629 02ca D5020000 		.4byte	0x2d5
 630 02ce 0B       		.uleb128 0xb
 631 02cf CF000000 		.4byte	0xcf
 632 02d3 01       		.byte	0x1
 633 02d4 00       		.byte	0
 634 02d5 1D       		.uleb128 0x1d
 635 02d6 76010000 		.4byte	.LASF33
 636 02da 04       		.byte	0x4
 637 02db 1D       		.byte	0x1d
 638 02dc E0020000 		.4byte	0x2e0
 639 02e0 06       		.uleb128 0x6
 640 02e1 04       		.byte	0x4
 641 02e2 37010000 		.4byte	0x137
 642 02e6 0A       		.uleb128 0xa
 643 02e7 A9000000 		.4byte	0xa9
 644 02eb F1020000 		.4byte	0x2f1
 645 02ef 1E       		.uleb128 0x1e
 646 02f0 00       		.byte	0
 647 02f1 1D       		.uleb128 0x1d
 648 02f2 12030000 		.4byte	.LASF34
 649 02f6 06       		.byte	0x6
 650 02f7 3C       		.byte	0x3c
 651 02f8 E6020000 		.4byte	0x2e6
 652 02fc 1F       		.uleb128 0x1f
 653 02fd E7020000 		.4byte	.LASF35
 654 0301 01       		.byte	0x1
 655 0302 1B       		.byte	0x1b
 656 0303 27010000 		.4byte	0x127
 657 0307 05       		.uleb128 0x5
 658 0308 03       		.byte	0x3
 659 0309 00000000 		.4byte	adcSample
 660 030d 1F       		.uleb128 0x1f
 661 030e BE020000 		.4byte	.LASF36
 662 0312 01       		.byte	0x1
 663 0313 15       		.byte	0x15
 664 0314 C5020000 		.4byte	0x2c5
 665 0318 05       		.uleb128 0x5
 666 0319 03       		.byte	0x3
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 29


 667 031a 00000000 		.4byte	ADC_MIN_READING
 668 031e 1F       		.uleb128 0x1f
 669 031f 66010000 		.4byte	.LASF37
 670 0323 01       		.byte	0x1
 671 0324 16       		.byte	0x16
 672 0325 C5020000 		.4byte	0x2c5
 673 0329 05       		.uleb128 0x5
 674 032a 03       		.byte	0x3
 675 032b 00000000 		.4byte	ADC_MAX_READING
 676 032f 20       		.uleb128 0x20
 677 0330 7E000000 		.4byte	.LASF38
 678 0334 7E000000 		.4byte	.LASF38
 679 0338 05       		.byte	0x5
 680 0339 7B       		.byte	0x7b
 681 033a 20       		.uleb128 0x20
 682 033b E5010000 		.4byte	.LASF39
 683 033f E5010000 		.4byte	.LASF39
 684 0343 07       		.byte	0x7
 685 0344 99       		.byte	0x99
 686 0345 20       		.uleb128 0x20
 687 0346 54030000 		.4byte	.LASF40
 688 034a 54030000 		.4byte	.LASF40
 689 034e 02       		.byte	0x2
 690 034f 23       		.byte	0x23
 691 0350 20       		.uleb128 0x20
 692 0351 5E030000 		.4byte	.LASF41
 693 0355 5E030000 		.4byte	.LASF41
 694 0359 07       		.byte	0x7
 695 035a 9D       		.byte	0x9d
 696 035b 21       		.uleb128 0x21
 697 035c 65000000 		.4byte	.LASF42
 698 0360 65000000 		.4byte	.LASF42
 699 0364 08       		.byte	0x8
 700 0365 3201     		.2byte	0x132
 701 0367 20       		.uleb128 0x20
 702 0368 D2010000 		.4byte	.LASF43
 703 036c D2010000 		.4byte	.LASF43
 704 0370 09       		.byte	0x9
 705 0371 28       		.byte	0x28
 706 0372 20       		.uleb128 0x20
 707 0373 77030000 		.4byte	.LASF44
 708 0377 77030000 		.4byte	.LASF44
 709 037b 0A       		.byte	0xa
 710 037c E7       		.byte	0xe7
 711 037d 20       		.uleb128 0x20
 712 037e 46000000 		.4byte	.LASF45
 713 0382 46000000 		.4byte	.LASF45
 714 0386 09       		.byte	0x9
 715 0387 24       		.byte	0x24
 716 0388 20       		.uleb128 0x20
 717 0389 DA000000 		.4byte	.LASF46
 718 038d DA000000 		.4byte	.LASF46
 719 0391 0B       		.byte	0xb
 720 0392 AC       		.byte	0xac
 721 0393 20       		.uleb128 0x20
 722 0394 CE020000 		.4byte	.LASF47
 723 0398 CE020000 		.4byte	.LASF47
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 30


 724 039c 0C       		.byte	0xc
 725 039d 21       		.byte	0x21
 726 039e 00       		.byte	0
 727              		.section	.debug_abbrev,"",%progbits
 728              	.Ldebug_abbrev0:
 729 0000 01       		.uleb128 0x1
 730 0001 11       		.uleb128 0x11
 731 0002 01       		.byte	0x1
 732 0003 25       		.uleb128 0x25
 733 0004 0E       		.uleb128 0xe
 734 0005 13       		.uleb128 0x13
 735 0006 0B       		.uleb128 0xb
 736 0007 03       		.uleb128 0x3
 737 0008 0E       		.uleb128 0xe
 738 0009 1B       		.uleb128 0x1b
 739 000a 0E       		.uleb128 0xe
 740 000b 55       		.uleb128 0x55
 741 000c 17       		.uleb128 0x17
 742 000d 11       		.uleb128 0x11
 743 000e 01       		.uleb128 0x1
 744 000f 10       		.uleb128 0x10
 745 0010 17       		.uleb128 0x17
 746 0011 00       		.byte	0
 747 0012 00       		.byte	0
 748 0013 02       		.uleb128 0x2
 749 0014 24       		.uleb128 0x24
 750 0015 00       		.byte	0
 751 0016 0B       		.uleb128 0xb
 752 0017 0B       		.uleb128 0xb
 753 0018 3E       		.uleb128 0x3e
 754 0019 0B       		.uleb128 0xb
 755 001a 03       		.uleb128 0x3
 756 001b 0E       		.uleb128 0xe
 757 001c 00       		.byte	0
 758 001d 00       		.byte	0
 759 001e 03       		.uleb128 0x3
 760 001f 24       		.uleb128 0x24
 761 0020 00       		.byte	0
 762 0021 0B       		.uleb128 0xb
 763 0022 0B       		.uleb128 0xb
 764 0023 3E       		.uleb128 0x3e
 765 0024 0B       		.uleb128 0xb
 766 0025 03       		.uleb128 0x3
 767 0026 08       		.uleb128 0x8
 768 0027 00       		.byte	0
 769 0028 00       		.byte	0
 770 0029 04       		.uleb128 0x4
 771 002a 16       		.uleb128 0x16
 772 002b 00       		.byte	0
 773 002c 03       		.uleb128 0x3
 774 002d 0E       		.uleb128 0xe
 775 002e 3A       		.uleb128 0x3a
 776 002f 0B       		.uleb128 0xb
 777 0030 3B       		.uleb128 0x3b
 778 0031 05       		.uleb128 0x5
 779 0032 49       		.uleb128 0x49
 780 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 31


 781 0034 00       		.byte	0
 782 0035 00       		.byte	0
 783 0036 05       		.uleb128 0x5
 784 0037 35       		.uleb128 0x35
 785 0038 00       		.byte	0
 786 0039 49       		.uleb128 0x49
 787 003a 13       		.uleb128 0x13
 788 003b 00       		.byte	0
 789 003c 00       		.byte	0
 790 003d 06       		.uleb128 0x6
 791 003e 0F       		.uleb128 0xf
 792 003f 00       		.byte	0
 793 0040 0B       		.uleb128 0xb
 794 0041 0B       		.uleb128 0xb
 795 0042 49       		.uleb128 0x49
 796 0043 13       		.uleb128 0x13
 797 0044 00       		.byte	0
 798 0045 00       		.byte	0
 799 0046 07       		.uleb128 0x7
 800 0047 15       		.uleb128 0x15
 801 0048 00       		.byte	0
 802 0049 27       		.uleb128 0x27
 803 004a 19       		.uleb128 0x19
 804 004b 00       		.byte	0
 805 004c 00       		.byte	0
 806 004d 08       		.uleb128 0x8
 807 004e 13       		.uleb128 0x13
 808 004f 01       		.byte	0x1
 809 0050 0B       		.uleb128 0xb
 810 0051 0B       		.uleb128 0xb
 811 0052 3A       		.uleb128 0x3a
 812 0053 0B       		.uleb128 0xb
 813 0054 3B       		.uleb128 0x3b
 814 0055 0B       		.uleb128 0xb
 815 0056 01       		.uleb128 0x1
 816 0057 13       		.uleb128 0x13
 817 0058 00       		.byte	0
 818 0059 00       		.byte	0
 819 005a 09       		.uleb128 0x9
 820 005b 0D       		.uleb128 0xd
 821 005c 00       		.byte	0
 822 005d 03       		.uleb128 0x3
 823 005e 0E       		.uleb128 0xe
 824 005f 3A       		.uleb128 0x3a
 825 0060 0B       		.uleb128 0xb
 826 0061 3B       		.uleb128 0x3b
 827 0062 0B       		.uleb128 0xb
 828 0063 49       		.uleb128 0x49
 829 0064 13       		.uleb128 0x13
 830 0065 38       		.uleb128 0x38
 831 0066 0B       		.uleb128 0xb
 832 0067 00       		.byte	0
 833 0068 00       		.byte	0
 834 0069 0A       		.uleb128 0xa
 835 006a 01       		.uleb128 0x1
 836 006b 01       		.byte	0x1
 837 006c 49       		.uleb128 0x49
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 32


 838 006d 13       		.uleb128 0x13
 839 006e 01       		.uleb128 0x1
 840 006f 13       		.uleb128 0x13
 841 0070 00       		.byte	0
 842 0071 00       		.byte	0
 843 0072 0B       		.uleb128 0xb
 844 0073 21       		.uleb128 0x21
 845 0074 00       		.byte	0
 846 0075 49       		.uleb128 0x49
 847 0076 13       		.uleb128 0x13
 848 0077 2F       		.uleb128 0x2f
 849 0078 0B       		.uleb128 0xb
 850 0079 00       		.byte	0
 851 007a 00       		.byte	0
 852 007b 0C       		.uleb128 0xc
 853 007c 16       		.uleb128 0x16
 854 007d 00       		.byte	0
 855 007e 03       		.uleb128 0x3
 856 007f 0E       		.uleb128 0xe
 857 0080 3A       		.uleb128 0x3a
 858 0081 0B       		.uleb128 0xb
 859 0082 3B       		.uleb128 0x3b
 860 0083 0B       		.uleb128 0xb
 861 0084 49       		.uleb128 0x49
 862 0085 13       		.uleb128 0x13
 863 0086 00       		.byte	0
 864 0087 00       		.byte	0
 865 0088 0D       		.uleb128 0xd
 866 0089 04       		.uleb128 0x4
 867 008a 01       		.byte	0x1
 868 008b 0B       		.uleb128 0xb
 869 008c 0B       		.uleb128 0xb
 870 008d 49       		.uleb128 0x49
 871 008e 13       		.uleb128 0x13
 872 008f 3A       		.uleb128 0x3a
 873 0090 0B       		.uleb128 0xb
 874 0091 3B       		.uleb128 0x3b
 875 0092 0B       		.uleb128 0xb
 876 0093 01       		.uleb128 0x1
 877 0094 13       		.uleb128 0x13
 878 0095 00       		.byte	0
 879 0096 00       		.byte	0
 880 0097 0E       		.uleb128 0xe
 881 0098 28       		.uleb128 0x28
 882 0099 00       		.byte	0
 883 009a 03       		.uleb128 0x3
 884 009b 0E       		.uleb128 0xe
 885 009c 1C       		.uleb128 0x1c
 886 009d 0B       		.uleb128 0xb
 887 009e 00       		.byte	0
 888 009f 00       		.byte	0
 889 00a0 0F       		.uleb128 0xf
 890 00a1 2E       		.uleb128 0x2e
 891 00a2 01       		.byte	0x1
 892 00a3 03       		.uleb128 0x3
 893 00a4 0E       		.uleb128 0xe
 894 00a5 3A       		.uleb128 0x3a
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 33


 895 00a6 0B       		.uleb128 0xb
 896 00a7 3B       		.uleb128 0x3b
 897 00a8 05       		.uleb128 0x5
 898 00a9 27       		.uleb128 0x27
 899 00aa 19       		.uleb128 0x19
 900 00ab 49       		.uleb128 0x49
 901 00ac 13       		.uleb128 0x13
 902 00ad 20       		.uleb128 0x20
 903 00ae 0B       		.uleb128 0xb
 904 00af 01       		.uleb128 0x1
 905 00b0 13       		.uleb128 0x13
 906 00b1 00       		.byte	0
 907 00b2 00       		.byte	0
 908 00b3 10       		.uleb128 0x10
 909 00b4 05       		.uleb128 0x5
 910 00b5 00       		.byte	0
 911 00b6 03       		.uleb128 0x3
 912 00b7 0E       		.uleb128 0xe
 913 00b8 3A       		.uleb128 0x3a
 914 00b9 0B       		.uleb128 0xb
 915 00ba 3B       		.uleb128 0x3b
 916 00bb 05       		.uleb128 0x5
 917 00bc 49       		.uleb128 0x49
 918 00bd 13       		.uleb128 0x13
 919 00be 00       		.byte	0
 920 00bf 00       		.byte	0
 921 00c0 11       		.uleb128 0x11
 922 00c1 2E       		.uleb128 0x2e
 923 00c2 00       		.byte	0
 924 00c3 3F       		.uleb128 0x3f
 925 00c4 19       		.uleb128 0x19
 926 00c5 03       		.uleb128 0x3
 927 00c6 0E       		.uleb128 0xe
 928 00c7 3A       		.uleb128 0x3a
 929 00c8 0B       		.uleb128 0xb
 930 00c9 3B       		.uleb128 0x3b
 931 00ca 0B       		.uleb128 0xb
 932 00cb 27       		.uleb128 0x27
 933 00cc 19       		.uleb128 0x19
 934 00cd 11       		.uleb128 0x11
 935 00ce 01       		.uleb128 0x1
 936 00cf 12       		.uleb128 0x12
 937 00d0 06       		.uleb128 0x6
 938 00d1 40       		.uleb128 0x40
 939 00d2 18       		.uleb128 0x18
 940 00d3 9742     		.uleb128 0x2117
 941 00d5 19       		.uleb128 0x19
 942 00d6 00       		.byte	0
 943 00d7 00       		.byte	0
 944 00d8 12       		.uleb128 0x12
 945 00d9 2E       		.uleb128 0x2e
 946 00da 01       		.byte	0x1
 947 00db 3F       		.uleb128 0x3f
 948 00dc 19       		.uleb128 0x19
 949 00dd 03       		.uleb128 0x3
 950 00de 0E       		.uleb128 0xe
 951 00df 3A       		.uleb128 0x3a
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 34


 952 00e0 0B       		.uleb128 0xb
 953 00e1 3B       		.uleb128 0x3b
 954 00e2 0B       		.uleb128 0xb
 955 00e3 27       		.uleb128 0x27
 956 00e4 19       		.uleb128 0x19
 957 00e5 11       		.uleb128 0x11
 958 00e6 01       		.uleb128 0x1
 959 00e7 12       		.uleb128 0x12
 960 00e8 06       		.uleb128 0x6
 961 00e9 40       		.uleb128 0x40
 962 00ea 18       		.uleb128 0x18
 963 00eb 9742     		.uleb128 0x2117
 964 00ed 19       		.uleb128 0x19
 965 00ee 01       		.uleb128 0x1
 966 00ef 13       		.uleb128 0x13
 967 00f0 00       		.byte	0
 968 00f1 00       		.byte	0
 969 00f2 13       		.uleb128 0x13
 970 00f3 1D       		.uleb128 0x1d
 971 00f4 01       		.byte	0x1
 972 00f5 31       		.uleb128 0x31
 973 00f6 13       		.uleb128 0x13
 974 00f7 11       		.uleb128 0x11
 975 00f8 01       		.uleb128 0x1
 976 00f9 12       		.uleb128 0x12
 977 00fa 06       		.uleb128 0x6
 978 00fb 58       		.uleb128 0x58
 979 00fc 0B       		.uleb128 0xb
 980 00fd 59       		.uleb128 0x59
 981 00fe 0B       		.uleb128 0xb
 982 00ff 01       		.uleb128 0x1
 983 0100 13       		.uleb128 0x13
 984 0101 00       		.byte	0
 985 0102 00       		.byte	0
 986 0103 14       		.uleb128 0x14
 987 0104 05       		.uleb128 0x5
 988 0105 00       		.byte	0
 989 0106 31       		.uleb128 0x31
 990 0107 13       		.uleb128 0x13
 991 0108 02       		.uleb128 0x2
 992 0109 17       		.uleb128 0x17
 993 010a 00       		.byte	0
 994 010b 00       		.byte	0
 995 010c 15       		.uleb128 0x15
 996 010d 898201   		.uleb128 0x4109
 997 0110 01       		.byte	0x1
 998 0111 11       		.uleb128 0x11
 999 0112 01       		.uleb128 0x1
 1000 0113 31       		.uleb128 0x31
 1001 0114 13       		.uleb128 0x13
 1002 0115 00       		.byte	0
 1003 0116 00       		.byte	0
 1004 0117 16       		.uleb128 0x16
 1005 0118 8A8201   		.uleb128 0x410a
 1006 011b 00       		.byte	0
 1007 011c 02       		.uleb128 0x2
 1008 011d 18       		.uleb128 0x18
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 35


 1009 011e 9142     		.uleb128 0x2111
 1010 0120 18       		.uleb128 0x18
 1011 0121 00       		.byte	0
 1012 0122 00       		.byte	0
 1013 0123 17       		.uleb128 0x17
 1014 0124 898201   		.uleb128 0x4109
 1015 0127 00       		.byte	0
 1016 0128 11       		.uleb128 0x11
 1017 0129 01       		.uleb128 0x1
 1018 012a 31       		.uleb128 0x31
 1019 012b 13       		.uleb128 0x13
 1020 012c 00       		.byte	0
 1021 012d 00       		.byte	0
 1022 012e 18       		.uleb128 0x18
 1023 012f 898201   		.uleb128 0x4109
 1024 0132 01       		.byte	0x1
 1025 0133 11       		.uleb128 0x11
 1026 0134 01       		.uleb128 0x1
 1027 0135 31       		.uleb128 0x31
 1028 0136 13       		.uleb128 0x13
 1029 0137 01       		.uleb128 0x1
 1030 0138 13       		.uleb128 0x13
 1031 0139 00       		.byte	0
 1032 013a 00       		.byte	0
 1033 013b 19       		.uleb128 0x19
 1034 013c 2E       		.uleb128 0x2e
 1035 013d 01       		.byte	0x1
 1036 013e 3F       		.uleb128 0x3f
 1037 013f 19       		.uleb128 0x19
 1038 0140 03       		.uleb128 0x3
 1039 0141 0E       		.uleb128 0xe
 1040 0142 3A       		.uleb128 0x3a
 1041 0143 0B       		.uleb128 0xb
 1042 0144 3B       		.uleb128 0x3b
 1043 0145 0B       		.uleb128 0xb
 1044 0146 27       		.uleb128 0x27
 1045 0147 19       		.uleb128 0x19
 1046 0148 11       		.uleb128 0x11
 1047 0149 01       		.uleb128 0x1
 1048 014a 12       		.uleb128 0x12
 1049 014b 06       		.uleb128 0x6
 1050 014c 40       		.uleb128 0x40
 1051 014d 18       		.uleb128 0x18
 1052 014e 9642     		.uleb128 0x2116
 1053 0150 19       		.uleb128 0x19
 1054 0151 01       		.uleb128 0x1
 1055 0152 13       		.uleb128 0x13
 1056 0153 00       		.byte	0
 1057 0154 00       		.byte	0
 1058 0155 1A       		.uleb128 0x1a
 1059 0156 34       		.uleb128 0x34
 1060 0157 00       		.byte	0
 1061 0158 03       		.uleb128 0x3
 1062 0159 0E       		.uleb128 0xe
 1063 015a 3A       		.uleb128 0x3a
 1064 015b 0B       		.uleb128 0xb
 1065 015c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 36


 1066 015d 0B       		.uleb128 0xb
 1067 015e 49       		.uleb128 0x49
 1068 015f 13       		.uleb128 0x13
 1069 0160 02       		.uleb128 0x2
 1070 0161 18       		.uleb128 0x18
 1071 0162 00       		.byte	0
 1072 0163 00       		.byte	0
 1073 0164 1B       		.uleb128 0x1b
 1074 0165 34       		.uleb128 0x34
 1075 0166 00       		.byte	0
 1076 0167 03       		.uleb128 0x3
 1077 0168 0E       		.uleb128 0xe
 1078 0169 3A       		.uleb128 0x3a
 1079 016a 0B       		.uleb128 0xb
 1080 016b 3B       		.uleb128 0x3b
 1081 016c 0B       		.uleb128 0xb
 1082 016d 49       		.uleb128 0x49
 1083 016e 13       		.uleb128 0x13
 1084 016f 00       		.byte	0
 1085 0170 00       		.byte	0
 1086 0171 1C       		.uleb128 0x1c
 1087 0172 34       		.uleb128 0x34
 1088 0173 00       		.byte	0
 1089 0174 03       		.uleb128 0x3
 1090 0175 08       		.uleb128 0x8
 1091 0176 3A       		.uleb128 0x3a
 1092 0177 0B       		.uleb128 0xb
 1093 0178 3B       		.uleb128 0x3b
 1094 0179 0B       		.uleb128 0xb
 1095 017a 49       		.uleb128 0x49
 1096 017b 13       		.uleb128 0x13
 1097 017c 02       		.uleb128 0x2
 1098 017d 17       		.uleb128 0x17
 1099 017e 00       		.byte	0
 1100 017f 00       		.byte	0
 1101 0180 1D       		.uleb128 0x1d
 1102 0181 34       		.uleb128 0x34
 1103 0182 00       		.byte	0
 1104 0183 03       		.uleb128 0x3
 1105 0184 0E       		.uleb128 0xe
 1106 0185 3A       		.uleb128 0x3a
 1107 0186 0B       		.uleb128 0xb
 1108 0187 3B       		.uleb128 0x3b
 1109 0188 0B       		.uleb128 0xb
 1110 0189 49       		.uleb128 0x49
 1111 018a 13       		.uleb128 0x13
 1112 018b 3F       		.uleb128 0x3f
 1113 018c 19       		.uleb128 0x19
 1114 018d 3C       		.uleb128 0x3c
 1115 018e 19       		.uleb128 0x19
 1116 018f 00       		.byte	0
 1117 0190 00       		.byte	0
 1118 0191 1E       		.uleb128 0x1e
 1119 0192 21       		.uleb128 0x21
 1120 0193 00       		.byte	0
 1121 0194 00       		.byte	0
 1122 0195 00       		.byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 37


 1123 0196 1F       		.uleb128 0x1f
 1124 0197 34       		.uleb128 0x34
 1125 0198 00       		.byte	0
 1126 0199 03       		.uleb128 0x3
 1127 019a 0E       		.uleb128 0xe
 1128 019b 3A       		.uleb128 0x3a
 1129 019c 0B       		.uleb128 0xb
 1130 019d 3B       		.uleb128 0x3b
 1131 019e 0B       		.uleb128 0xb
 1132 019f 49       		.uleb128 0x49
 1133 01a0 13       		.uleb128 0x13
 1134 01a1 3F       		.uleb128 0x3f
 1135 01a2 19       		.uleb128 0x19
 1136 01a3 02       		.uleb128 0x2
 1137 01a4 18       		.uleb128 0x18
 1138 01a5 00       		.byte	0
 1139 01a6 00       		.byte	0
 1140 01a7 20       		.uleb128 0x20
 1141 01a8 2E       		.uleb128 0x2e
 1142 01a9 00       		.byte	0
 1143 01aa 3F       		.uleb128 0x3f
 1144 01ab 19       		.uleb128 0x19
 1145 01ac 3C       		.uleb128 0x3c
 1146 01ad 19       		.uleb128 0x19
 1147 01ae 6E       		.uleb128 0x6e
 1148 01af 0E       		.uleb128 0xe
 1149 01b0 03       		.uleb128 0x3
 1150 01b1 0E       		.uleb128 0xe
 1151 01b2 3A       		.uleb128 0x3a
 1152 01b3 0B       		.uleb128 0xb
 1153 01b4 3B       		.uleb128 0x3b
 1154 01b5 0B       		.uleb128 0xb
 1155 01b6 00       		.byte	0
 1156 01b7 00       		.byte	0
 1157 01b8 21       		.uleb128 0x21
 1158 01b9 2E       		.uleb128 0x2e
 1159 01ba 00       		.byte	0
 1160 01bb 3F       		.uleb128 0x3f
 1161 01bc 19       		.uleb128 0x19
 1162 01bd 3C       		.uleb128 0x3c
 1163 01be 19       		.uleb128 0x19
 1164 01bf 6E       		.uleb128 0x6e
 1165 01c0 0E       		.uleb128 0xe
 1166 01c1 03       		.uleb128 0x3
 1167 01c2 0E       		.uleb128 0xe
 1168 01c3 3A       		.uleb128 0x3a
 1169 01c4 0B       		.uleb128 0xb
 1170 01c5 3B       		.uleb128 0x3b
 1171 01c6 05       		.uleb128 0x5
 1172 01c7 00       		.byte	0
 1173 01c8 00       		.byte	0
 1174 01c9 00       		.byte	0
 1175              		.section	.debug_loc,"",%progbits
 1176              	.Ldebug_loc0:
 1177              	.LLST0:
 1178 0000 0E000000 		.4byte	.LVL1
 1179 0004 16000000 		.4byte	.LVL2
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 38


 1180 0008 0600     		.2byte	0x6
 1181 000a 03       		.byte	0x3
 1182 000b 00000000 		.4byte	DmaIntHandler
 1183 000f 9F       		.byte	0x9f
 1184 0010 00000000 		.4byte	0
 1185 0014 00000000 		.4byte	0
 1186              	.LLST1:
 1187 0018 04000000 		.4byte	.LVL4
 1188 001c 08000000 		.4byte	.LVL5
 1189 0020 0200     		.2byte	0x2
 1190 0022 30       		.byte	0x30
 1191 0023 9F       		.byte	0x9f
 1192 0024 08000000 		.4byte	.LVL5
 1193 0028 92000000 		.4byte	.LVL14
 1194 002c 0100     		.2byte	0x1
 1195 002e 54       		.byte	0x54
 1196 002f 00000000 		.4byte	0
 1197 0033 00000000 		.4byte	0
 1198              		.section	.debug_aranges,"",%progbits
 1199 0000 2C000000 		.4byte	0x2c
 1200 0004 0200     		.2byte	0x2
 1201 0006 00000000 		.4byte	.Ldebug_info0
 1202 000a 04       		.byte	0x4
 1203 000b 00       		.byte	0
 1204 000c 0000     		.2byte	0
 1205 000e 0000     		.2byte	0
 1206 0010 00000000 		.4byte	.LFB34
 1207 0014 02000000 		.4byte	.LFE34-.LFB34
 1208 0018 00000000 		.4byte	.LFB35
 1209 001c 28000000 		.4byte	.LFE35-.LFB35
 1210 0020 00000000 		.4byte	.LFB36
 1211 0024 B0000000 		.4byte	.LFE36-.LFB36
 1212 0028 00000000 		.4byte	0
 1213 002c 00000000 		.4byte	0
 1214              		.section	.debug_ranges,"",%progbits
 1215              	.Ldebug_ranges0:
 1216 0000 00000000 		.4byte	.LFB34
 1217 0004 02000000 		.4byte	.LFE34
 1218 0008 00000000 		.4byte	.LFB35
 1219 000c 28000000 		.4byte	.LFE35
 1220 0010 00000000 		.4byte	.LFB36
 1221 0014 B0000000 		.4byte	.LFE36
 1222 0018 00000000 		.4byte	0
 1223 001c 00000000 		.4byte	0
 1224              		.section	.debug_line,"",%progbits
 1225              	.Ldebug_line0:
 1226 0000 C7010000 		.section	.debug_str,"MS",%progbits,1
 1226      02004D01 
 1226      00000201 
 1226      FB0E0D00 
 1226      01010101 
 1227              	.LASF16:
 1228 0000 72656733 		.ascii	"reg32\000"
 1228      3200
 1229              	.LASF49:
 1230 0006 566F6C75 		.ascii	"VolumeControl.c\000"
 1230      6D65436F 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 39


 1230      6E74726F 
 1230      6C2E6300 
 1231              	.LASF19:
 1232 0016 7369676E 		.ascii	"signature\000"
 1232      61747572 
 1232      6500
 1233              	.LASF23:
 1234 0020 6C65645F 		.ascii	"led_max_brightness\000"
 1234      6D61785F 
 1234      62726967 
 1234      68746E65 
 1234      737300
 1235              	.LASF3:
 1236 0033 73686F72 		.ascii	"short unsigned int\000"
 1236      7420756E 
 1236      7369676E 
 1236      65642069 
 1236      6E7400
 1237              	.LASF45:
 1238 0046 55534255 		.ascii	"USBUART_PutString\000"
 1238      4152545F 
 1238      50757453 
 1238      7472696E 
 1238      6700
 1239              	.LASF14:
 1240 0058 646F7562 		.ascii	"double\000"
 1240      6C6500
 1241              	.LASF9:
 1242 005f 75696E74 		.ascii	"uint8\000"
 1242      3800
 1243              	.LASF42:
 1244 0065 55534255 		.ascii	"USBUART_GetConfiguration\000"
 1244      4152545F 
 1244      47657443 
 1244      6F6E6669 
 1244      67757261 
 1245              	.LASF38:
 1246 007e 4379446D 		.ascii	"CyDmaSetInterruptCallback\000"
 1246      61536574 
 1246      496E7465 
 1246      72727570 
 1246      7443616C 
 1247              	.LASF53:
 1248 0098 446D6149 		.ascii	"DmaIntHandler\000"
 1248      6E744861 
 1248      6E646C65 
 1248      7200
 1249              	.LASF13:
 1250 00a6 666C6F61 		.ascii	"float\000"
 1250      7400
 1251              	.LASF54:
 1252 00ac 766F6C75 		.ascii	"volume\000"
 1252      6D6500
 1253              	.LASF1:
 1254 00b3 756E7369 		.ascii	"unsigned char\000"
 1254      676E6564 
 1254      20636861 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 40


 1254      7200
 1255              	.LASF51:
 1256 00c1 444D415F 		.ascii	"DMA_SetInterruptCallback\000"
 1256      53657449 
 1256      6E746572 
 1256      72757074 
 1256      43616C6C 
 1257              	.LASF46:
 1258 00da 436F6465 		.ascii	"Codec_AdjustBothHeadphoneVolumeLevel\000"
 1258      635F4164 
 1258      6A757374 
 1258      426F7468 
 1258      48656164 
 1259              	.LASF11:
 1260 00ff 696E7431 		.ascii	"int16\000"
 1260      3600
 1261              	.LASF50:
 1262 0105 433A5C64 		.ascii	"C:\\dev\\git\\icebreaker\\Icebreaker.cydsn\000"
 1262      65765C67 
 1262      69745C69 
 1262      63656272 
 1262      65616B65 
 1263              	.LASF12:
 1264 012c 696E7433 		.ascii	"int32\000"
 1264      3200
 1265              	.LASF52:
 1266 0132 63616C6C 		.ascii	"callback\000"
 1266      6261636B 
 1266      00
 1267              	.LASF20:
 1268 013b 636F756E 		.ascii	"counter\000"
 1268      74657200 
 1269              	.LASF28:
 1270 0143 766F6C5F 		.ascii	"vol_ctrl_both\000"
 1270      6374726C 
 1270      5F626F74 
 1270      6800
 1271              	.LASF24:
 1272 0151 64656275 		.ascii	"debug_mask\000"
 1272      675F6D61 
 1272      736B00
 1273              	.LASF2:
 1274 015c 73686F72 		.ascii	"short int\000"
 1274      7420696E 
 1274      7400
 1275              	.LASF37:
 1276 0166 4144435F 		.ascii	"ADC_MAX_READING\000"
 1276      4D41585F 
 1276      52454144 
 1276      494E4700 
 1277              	.LASF33:
 1278 0176 63616C5F 		.ascii	"cal_data\000"
 1278      64617461 
 1278      00
 1279              	.LASF10:
 1280 017f 75696E74 		.ascii	"uint32\000"
 1280      333200
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 41


 1281              	.LASF27:
 1282 0186 766F6C5F 		.ascii	"vol_ctrl_left\000"
 1282      6374726C 
 1282      5F6C6566 
 1282      7400
 1283              	.LASF5:
 1284 0194 6C6F6E67 		.ascii	"long unsigned int\000"
 1284      20756E73 
 1284      69676E65 
 1284      6420696E 
 1284      7400
 1285              	.LASF8:
 1286 01a6 756E7369 		.ascii	"unsigned int\000"
 1286      676E6564 
 1286      20696E74 
 1286      00
 1287              	.LASF7:
 1288 01b3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1288      206C6F6E 
 1288      6720756E 
 1288      7369676E 
 1288      65642069 
 1289              	.LASF22:
 1290 01ca 6164635F 		.ascii	"adc_max\000"
 1290      6D617800 
 1291              	.LASF43:
 1292 01d2 55534255 		.ascii	"USBUART_CDCIsReady\000"
 1292      4152545F 
 1292      43444349 
 1292      73526561 
 1292      647900
 1293              	.LASF39:
 1294 01e5 4144435F 		.ascii	"ADC_Start\000"
 1294      53746172 
 1294      7400
 1295              	.LASF29:
 1296 01ef 6379646D 		.ascii	"cydma_callback_t\000"
 1296      615F6361 
 1296      6C6C6261 
 1296      636B5F74 
 1296      00
 1297              	.LASF48:
 1298 0200 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1298      43313120 
 1298      352E342E 
 1298      31203230 
 1298      31363036 
 1299 0233 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1299      20726576 
 1299      6973696F 
 1299      6E203233 
 1299      37373135 
 1300 0266 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1300      66756E63 
 1300      74696F6E 
 1300      2D736563 
 1300      74696F6E 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 42


 1301              	.LASF17:
 1302 028e 6C6F6E67 		.ascii	"long double\000"
 1302      20646F75 
 1302      626C6500 
 1303              	.LASF18:
 1304 029a 73697A65 		.ascii	"sizetype\000"
 1304      74797065 
 1304      00
 1305              	.LASF6:
 1306 02a3 6C6F6E67 		.ascii	"long long int\000"
 1306      206C6F6E 
 1306      6720696E 
 1306      7400
 1307              	.LASF15:
 1308 02b1 63686172 		.ascii	"char\000"
 1308      00
 1309              	.LASF21:
 1310 02b6 6164635F 		.ascii	"adc_min\000"
 1310      6D696E00 
 1311              	.LASF36:
 1312 02be 4144435F 		.ascii	"ADC_MIN_READING\000"
 1312      4D494E5F 
 1312      52454144 
 1312      494E4700 
 1313              	.LASF47:
 1314 02ce 70636D31 		.ascii	"pcm1770_volume_set_level\000"
 1314      3737305F 
 1314      766F6C75 
 1314      6D655F73 
 1314      65745F6C 
 1315              	.LASF35:
 1316 02e7 61646353 		.ascii	"adcSample\000"
 1316      616D706C 
 1316      6500
 1317              	.LASF26:
 1318 02f1 766F6C5F 		.ascii	"vol_ctrl_right\000"
 1318      6374726C 
 1318      5F726967 
 1318      687400
 1319              	.LASF30:
 1320 0300 566F6C75 		.ascii	"VolumeControlInit\000"
 1320      6D65436F 
 1320      6E74726F 
 1320      6C496E69 
 1320      7400
 1321              	.LASF34:
 1322 0312 67627566 		.ascii	"gbuf\000"
 1322      00
 1323              	.LASF25:
 1324 0317 63616C69 		.ascii	"calibration_data_s\000"
 1324      62726174 
 1324      696F6E5F 
 1324      64617461 
 1324      5F7300
 1325              	.LASF4:
 1326 032a 6C6F6E67 		.ascii	"long int\000"
 1326      20696E74 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\cc9Xfjkp.s 			page 43


 1326      00
 1327              	.LASF31:
 1328 0333 566F6C75 		.ascii	"VolumeControlService\000"
 1328      6D65436F 
 1328      6E74726F 
 1328      6C536572 
 1328      76696365 
 1329              	.LASF0:
 1330 0348 7369676E 		.ascii	"signed char\000"
 1330      65642063 
 1330      68617200 
 1331              	.LASF40:
 1332 0354 444D415F 		.ascii	"DMA_Start\000"
 1332      53746172 
 1332      7400
 1333              	.LASF41:
 1334 035e 4144435F 		.ascii	"ADC_StartConvert\000"
 1334      53746172 
 1334      74436F6E 
 1334      76657274 
 1334      00
 1335              	.LASF32:
 1336 036f 70726576 		.ascii	"prevVol\000"
 1336      566F6C00 
 1337              	.LASF44:
 1338 0377 73707269 		.ascii	"sprintf\000"
 1338      6E746600 
 1339              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
