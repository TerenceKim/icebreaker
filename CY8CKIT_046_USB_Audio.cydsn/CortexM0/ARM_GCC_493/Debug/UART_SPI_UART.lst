ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
  18              		.align	2
  19              		.global	UART_SpiUartWriteTxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_SpiUartWriteTxData, %function
  23              	UART_SpiUartWriteTxData:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * File Name: UART_SPI_UART.c
   3:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  18:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  19:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  21:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  22:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
  23:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  24:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  25:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  26:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  27:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  28:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  29:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  30:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  31:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  32:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 2


  33:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  34:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  35:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  36:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  37:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  38:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  39:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  40:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  41:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  42:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  43:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  44:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  45:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  46:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  47:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  48:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  49:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
  50:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  51:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
  52:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  53:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  54:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  55:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  56:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  57:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  58:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  59:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
  60:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
  61:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  62:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
  63:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer.
  64:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  65:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Global Variables:
  66:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Look into UART_SpiInit for description.
  67:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  68:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  69:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  70:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  71:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  72:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  73:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  74:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  75:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  76:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  77:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  78:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  79:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  80:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  81:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  82:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  83:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  84:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  85:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  86:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
  87:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  88:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
  89:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 3


  90:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
  92:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
  93:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  94:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
  95:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
  96:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
  98:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  99:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 100:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 101:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 102:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 103:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 104:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 105:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 106:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 107:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 108:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 109:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 110:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 111:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 112:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 113:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 114:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 115:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 116:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 117:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 118:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 119:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
 120:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 121:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 122:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 123:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 124:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 125:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 126:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 127:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 128:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 129:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 130:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 131:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 132:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 133:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 134:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 135:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 136:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 137:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 138:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements
 139:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 140:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 141:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 142:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 143:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 144:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 145:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 146:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 4


 147:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 148:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 149:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 150:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 151:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 152:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 153:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 154:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 155:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 156:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 157:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 158:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 159:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 160:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 161:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 162:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 163:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
 164:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 165:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 166:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 167:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 168:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 169:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 170:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 171:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 172:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 173:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 174:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 175:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 176:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 177:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 178:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 179:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 180:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 181:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 182:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 183:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 184:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 185:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 186:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 187:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 188:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 189:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 190:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 191:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 192:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 193:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 194:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 195:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 196:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 197:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 198:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 199:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 200:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 201:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 202:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 203:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 5


 204:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 205:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 206:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 207:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 208:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 209:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 210:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 211:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 212:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 213:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 214:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 215:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 216:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 217:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 218:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 219:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 220:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 221:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 222:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 224:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 226:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 227:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 228:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 229:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 230:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 231:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 232:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 233:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  txDataByte: the data to be transmitted.
 234:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 235:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 236:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 237:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 238:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 239:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 240:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  26              		.loc 1 240 0
  27              		.cfi_startproc
  28              	.LVL0:
  29              	.L2:
 241:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 242:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 243:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 244:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 245:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 246:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 247:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 248:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 249:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 250:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 251:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 252:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 253:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 254:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 255:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 256:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 6


 257:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 258:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 259:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 260:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 261:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 262:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 263:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 264:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 265:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 266:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 267:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 268:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 269:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 270:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 271:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 272:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 273:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 274:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 275:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 276:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 277:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 279:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 280:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 281:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 282:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 283:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 284:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 285:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 286:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 287:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 288:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 289:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 290:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 291:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
  30              		.loc 1 291 0 discriminator 1
  31 0000 044B     		ldr	r3, .L3
  32 0002 1B68     		ldr	r3, [r3]
  33 0004 1F22     		mov	r2, #31
  34 0006 1340     		and	r3, r2
  35 0008 082B     		cmp	r3, #8
  36 000a F9D0     		beq	.L2
 292:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 293:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 294:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 295:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
  37              		.loc 1 295 0
  38 000c 024B     		ldr	r3, .L3+4
  39 000e 1860     		str	r0, [r3]
 296:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 297:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 298:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  40              		.loc 1 298 0
  41              		@ sp needed
  42 0010 7047     		bx	lr
  43              	.L4:
  44 0012 C046     		.align	2
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 7


  45              	.L3:
  46 0014 08022540 		.word	1076167176
  47 0018 40022540 		.word	1076167232
  48              		.cfi_endproc
  49              	.LFE2:
  50              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
  51              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
  52              		.align	2
  53              		.global	UART_SpiUartPutArray
  54              		.code	16
  55              		.thumb_func
  56              		.type	UART_SpiUartPutArray, %function
  57              	UART_SpiUartPutArray:
  58              	.LFB3:
 299:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 300:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 301:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 302:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 303:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 304:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 305:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 306:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 307:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 308:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 309:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 310:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 311:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 312:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  wrBuf:  pointer to an array with data to be placed in transmit buffer.
 313:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  count:  number of data elements to be placed in the transmit buffer.
 314:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 315:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 316:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 317:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 318:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 320:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  59              		.loc 1 320 0
  60              		.cfi_startproc
  61              	.LVL1:
  62 0000 70B5     		push	{r4, r5, r6, lr}
  63              		.cfi_def_cfa_offset 16
  64              		.cfi_offset 4, -16
  65              		.cfi_offset 5, -12
  66              		.cfi_offset 6, -8
  67              		.cfi_offset 14, -4
  68 0002 061C     		mov	r6, r0
  69 0004 0D1C     		mov	r5, r1
  70              	.LVL2:
 321:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 322:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
  71              		.loc 1 323 0
  72 0006 0024     		mov	r4, #0
  73 0008 03E0     		b	.L6
  74              	.LVL3:
  75              	.L7:
 324:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 8


 325:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
  76              		.loc 1 325 0 discriminator 3
  77 000a 305D     		ldrb	r0, [r6, r4]
  78 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
  79              	.LVL4:
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  80              		.loc 1 323 0 discriminator 3
  81 0010 0134     		add	r4, r4, #1
  82              	.LVL5:
  83              	.L6:
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  84              		.loc 1 323 0 is_stmt 0 discriminator 1
  85 0012 AC42     		cmp	r4, r5
  86 0014 F9D3     		bcc	.L7
 326:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 327:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  87              		.loc 1 327 0 is_stmt 1
  88              		@ sp needed
  89              	.LVL6:
  90              	.LVL7:
  91              	.LVL8:
  92 0016 70BD     		pop	{r4, r5, r6, pc}
  93              		.cfi_endproc
  94              	.LFE3:
  95              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
  96              		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
  97              		.align	2
  98              		.global	UART_SpiUartGetTxBufferSize
  99              		.code	16
 100              		.thumb_func
 101              		.type	UART_SpiUartGetTxBufferSize, %function
 102              	UART_SpiUartGetTxBufferSize:
 103              	.LFB4:
 328:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 329:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 330:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 331:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 332:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 333:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 334:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 335:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Returns the number of elements currently in the transmit buffer.
 336:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is disabled: returns the number of used entries in
 337:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    TX FIFO.
 338:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is enabled: returns the number of elements currently
 339:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    used in the transmit buffer. This number does not include used entries in
 340:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 341:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    not full.
 342:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 343:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 344:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 345:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 346:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 347:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 348:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 349:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 350:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 351:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 9


 104              		.loc 1 351 0
 105              		.cfi_startproc
 352:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 353:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 354:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 355:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 356:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 357:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 358:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 359:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 360:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 361:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 362:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 363:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 364:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 365:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 366:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 367:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 368:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 369:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 370:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 371:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 372:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 373:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 106              		.loc 1 373 0
 107 0000 024B     		ldr	r3, .L9
 108 0002 1B68     		ldr	r3, [r3]
 109 0004 1F20     		mov	r0, #31
 110 0006 1840     		and	r0, r3
 111              	.LVL9:
 374:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 375:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 376:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 377:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 378:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 112              		.loc 1 378 0
 113              		@ sp needed
 114 0008 7047     		bx	lr
 115              	.L10:
 116 000a C046     		.align	2
 117              	.L9:
 118 000c 08022540 		.word	1076167176
 119              		.cfi_endproc
 120              	.LFE4:
 121              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 122              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
 123              		.align	2
 124              		.global	UART_SpiUartClearTxBuffer
 125              		.code	16
 126              		.thumb_func
 127              		.type	UART_SpiUartClearTxBuffer, %function
 128              	UART_SpiUartClearTxBuffer:
 129              	.LFB5:
 379:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 381:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 382:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 10


 383:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 384:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 385:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 386:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 387:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 388:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 389:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 390:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 391:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 392:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 393:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 394:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 395:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 396:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 130              		.loc 1 396 0
 131              		.cfi_startproc
 397:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 398:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 399:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 400:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 401:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 402:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 403:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 404:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 405:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 406:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 407:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 408:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 409:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 410:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 411:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 412:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 413:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 414:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 132              		.loc 1 414 0
 133 0000 054B     		ldr	r3, .L12
 134 0002 1A68     		ldr	r2, [r3]
 135 0004 8021     		mov	r1, #128
 136 0006 4902     		lsl	r1, r1, #9
 137 0008 0A43     		orr	r2, r1
 138 000a 1A60     		str	r2, [r3]
 139 000c 1968     		ldr	r1, [r3]
 140 000e 034A     		ldr	r2, .L12+4
 141 0010 0A40     		and	r2, r1
 142 0012 1A60     		str	r2, [r3]
 415:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 416:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 417:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 143              		.loc 1 417 0
 144              		@ sp needed
 145 0014 7047     		bx	lr
 146              	.L13:
 147 0016 C046     		.align	2
 148              	.L12:
 149 0018 04022540 		.word	1076167172
 150 001c FFFFFEFF 		.word	-65537
 151              		.cfi_endproc
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 11


 152              	.LFE5:
 153              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 154              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 155              		.align	2
 156              		.global	UART_SpiUartDisableIntRx
 157              		.code	16
 158              		.thumb_func
 159              		.type	UART_SpiUartDisableIntRx, %function
 160              	UART_SpiUartDisableIntRx:
 161              	.LFB6:
 418:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 419:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 420:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 421:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 422:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 424:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 426:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 427:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 428:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 429:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 430:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 431:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 432:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 433:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns the RX interrupt sources enabled before the function call.
 434:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 435:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 437:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 162              		.loc 1 437 0
 163              		.cfi_startproc
 438:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 439:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 440:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 164              		.loc 1 440 0
 165 0000 024B     		ldr	r3, .L15
 166 0002 1868     		ldr	r0, [r3]
 167              	.LVL10:
 441:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 442:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 168              		.loc 1 442 0
 169 0004 0022     		mov	r2, #0
 170 0006 1A60     		str	r2, [r3]
 443:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 445:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 171              		.loc 1 445 0
 172              		@ sp needed
 173 0008 7047     		bx	lr
 174              	.L16:
 175 000a C046     		.align	2
 176              	.L15:
 177 000c C80F2540 		.word	1076170696
 178              		.cfi_endproc
 179              	.LFE6:
 180              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 12


 181              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 182              		.align	2
 183              		.global	UART_SpiUartDisableIntTx
 184              		.code	16
 185              		.thumb_func
 186              		.type	UART_SpiUartDisableIntTx, %function
 187              	UART_SpiUartDisableIntTx:
 188              	.LFB7:
 446:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 447:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 448:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 449:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 450:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 451:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 452:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 453:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 454:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 455:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 456:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 457:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 458:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 459:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns TX interrupt sources enabled before function call.
 460:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 461:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 462:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 463:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 189              		.loc 1 463 0
 190              		.cfi_startproc
 464:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 465:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 191              		.loc 1 466 0
 192 0000 024B     		ldr	r3, .L18
 193 0002 1868     		ldr	r0, [r3]
 194              	.LVL11:
 467:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 468:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 195              		.loc 1 468 0
 196 0004 0022     		mov	r2, #0
 197 0006 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 470:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 471:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 198              		.loc 1 471 0
 199              		@ sp needed
 200 0008 7047     		bx	lr
 201              	.L19:
 202 000a C046     		.align	2
 203              	.L18:
 204 000c 880F2540 		.word	1076170632
 205              		.cfi_endproc
 206              	.LFE7:
 207              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 208              		.text
 209              	.Letext0:
 210              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 211              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 13


 212              	.Ldebug_info0:
 213 0000 B2010000 		.4byte	0x1b2
 214 0004 0400     		.2byte	0x4
 215 0006 00000000 		.4byte	.Ldebug_abbrev0
 216 000a 04       		.byte	0x4
 217 000b 01       		.uleb128 0x1
 218 000c E4010000 		.4byte	.LASF27
 219 0010 01       		.byte	0x1
 220 0011 7C020000 		.4byte	.LASF28
 221 0015 08010000 		.4byte	.LASF29
 222 0019 00000000 		.4byte	.Ldebug_ranges0+0
 223 001d 00000000 		.4byte	0
 224 0021 00000000 		.4byte	.Ldebug_line0
 225 0025 02       		.uleb128 0x2
 226 0026 01       		.byte	0x1
 227 0027 06       		.byte	0x6
 228 0028 B3020000 		.4byte	.LASF0
 229 002c 02       		.uleb128 0x2
 230 002d 01       		.byte	0x1
 231 002e 08       		.byte	0x8
 232 002f 8E000000 		.4byte	.LASF1
 233 0033 02       		.uleb128 0x2
 234 0034 02       		.byte	0x2
 235 0035 05       		.byte	0x5
 236 0036 72020000 		.4byte	.LASF2
 237 003a 02       		.uleb128 0x2
 238 003b 02       		.byte	0x2
 239 003c 07       		.byte	0x7
 240 003d 13000000 		.4byte	.LASF3
 241 0041 02       		.uleb128 0x2
 242 0042 04       		.byte	0x4
 243 0043 05       		.byte	0x5
 244 0044 A5020000 		.4byte	.LASF4
 245 0048 02       		.uleb128 0x2
 246 0049 04       		.byte	0x4
 247 004a 07       		.byte	0x7
 248 004b 70000000 		.4byte	.LASF5
 249 004f 02       		.uleb128 0x2
 250 0050 08       		.byte	0x8
 251 0051 05       		.byte	0x5
 252 0052 A2010000 		.4byte	.LASF6
 253 0056 02       		.uleb128 0x2
 254 0057 08       		.byte	0x8
 255 0058 07       		.byte	0x7
 256 0059 F1000000 		.4byte	.LASF7
 257 005d 03       		.uleb128 0x3
 258 005e 04       		.byte	0x4
 259 005f 05       		.byte	0x5
 260 0060 696E7400 		.ascii	"int\000"
 261 0064 02       		.uleb128 0x2
 262 0065 04       		.byte	0x4
 263 0066 07       		.byte	0x7
 264 0067 26000000 		.4byte	.LASF8
 265 006b 04       		.uleb128 0x4
 266 006c 82000000 		.4byte	.LASF9
 267 0070 02       		.byte	0x2
 268 0071 3801     		.2byte	0x138
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 14


 269 0073 2C000000 		.4byte	0x2c
 270 0077 04       		.uleb128 0x4
 271 0078 A3000000 		.4byte	.LASF10
 272 007c 02       		.byte	0x2
 273 007d 3A01     		.2byte	0x13a
 274 007f 48000000 		.4byte	0x48
 275 0083 02       		.uleb128 0x2
 276 0084 04       		.byte	0x4
 277 0085 04       		.byte	0x4
 278 0086 4C000000 		.4byte	.LASF11
 279 008a 02       		.uleb128 0x2
 280 008b 08       		.byte	0x8
 281 008c 04       		.byte	0x4
 282 008d 9C000000 		.4byte	.LASF12
 283 0091 02       		.uleb128 0x2
 284 0092 01       		.byte	0x1
 285 0093 08       		.byte	0x8
 286 0094 AE020000 		.4byte	.LASF13
 287 0098 04       		.uleb128 0x4
 288 0099 00000000 		.4byte	.LASF14
 289 009d 02       		.byte	0x2
 290 009e E401     		.2byte	0x1e4
 291 00a0 A4000000 		.4byte	0xa4
 292 00a4 05       		.uleb128 0x5
 293 00a5 77000000 		.4byte	0x77
 294 00a9 02       		.uleb128 0x2
 295 00aa 04       		.byte	0x4
 296 00ab 07       		.byte	0x7
 297 00ac 99010000 		.4byte	.LASF15
 298 00b0 06       		.uleb128 0x6
 299 00b1 B0010000 		.4byte	.LASF16
 300 00b5 01       		.byte	0x1
 301 00b6 EF       		.byte	0xef
 302 00b7 00000000 		.4byte	.LFB2
 303 00bb 1C000000 		.4byte	.LFE2-.LFB2
 304 00bf 01       		.uleb128 0x1
 305 00c0 9C       		.byte	0x9c
 306 00c1 D3000000 		.4byte	0xd3
 307 00c5 07       		.uleb128 0x7
 308 00c6 0C000000 		.4byte	.LASF18
 309 00ca 01       		.byte	0x1
 310 00cb EF       		.byte	0xef
 311 00cc 77000000 		.4byte	0x77
 312 00d0 01       		.uleb128 0x1
 313 00d1 50       		.byte	0x50
 314 00d2 00       		.byte	0
 315 00d3 08       		.uleb128 0x8
 316 00d4 C4000000 		.4byte	.LASF17
 317 00d8 01       		.byte	0x1
 318 00d9 3F01     		.2byte	0x13f
 319 00db 00000000 		.4byte	.LFB3
 320 00df 18000000 		.4byte	.LFE3-.LFB3
 321 00e3 01       		.uleb128 0x1
 322 00e4 9C       		.byte	0x9c
 323 00e5 21010000 		.4byte	0x121
 324 00e9 09       		.uleb128 0x9
 325 00ea 88000000 		.4byte	.LASF19
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 15


 326 00ee 01       		.byte	0x1
 327 00ef 3F01     		.2byte	0x13f
 328 00f1 21010000 		.4byte	0x121
 329 00f5 00000000 		.4byte	.LLST0
 330 00f9 09       		.uleb128 0x9
 331 00fa 06000000 		.4byte	.LASF20
 332 00fe 01       		.byte	0x1
 333 00ff 3F01     		.2byte	0x13f
 334 0101 77000000 		.4byte	0x77
 335 0105 2C000000 		.4byte	.LLST1
 336 0109 0A       		.uleb128 0xa
 337 010a 6900     		.ascii	"i\000"
 338 010c 01       		.byte	0x1
 339 010d 4101     		.2byte	0x141
 340 010f 77000000 		.4byte	0x77
 341 0113 58000000 		.4byte	.LLST2
 342 0117 0B       		.uleb128 0xb
 343 0118 10000000 		.4byte	.LVL4
 344 011c B0000000 		.4byte	0xb0
 345 0120 00       		.byte	0
 346 0121 0C       		.uleb128 0xc
 347 0122 04       		.byte	0x4
 348 0123 27010000 		.4byte	0x127
 349 0127 0D       		.uleb128 0xd
 350 0128 6B000000 		.4byte	0x6b
 351 012c 0E       		.uleb128 0xe
 352 012d C8010000 		.4byte	.LASF22
 353 0131 01       		.byte	0x1
 354 0132 5E01     		.2byte	0x15e
 355 0134 77000000 		.4byte	0x77
 356 0138 00000000 		.4byte	.LFB4
 357 013c 10000000 		.4byte	.LFE4-.LFB4
 358 0140 01       		.uleb128 0x1
 359 0141 9C       		.byte	0x9c
 360 0142 55010000 		.4byte	0x155
 361 0146 0F       		.uleb128 0xf
 362 0147 6B000000 		.4byte	.LASF21
 363 014b 01       		.byte	0x1
 364 014c 6001     		.2byte	0x160
 365 014e 77000000 		.4byte	0x77
 366 0152 01       		.uleb128 0x1
 367 0153 50       		.byte	0x50
 368 0154 00       		.byte	0
 369 0155 10       		.uleb128 0x10
 370 0156 AA000000 		.4byte	.LASF30
 371 015a 01       		.byte	0x1
 372 015b 8B01     		.2byte	0x18b
 373 015d 00000000 		.4byte	.LFB5
 374 0161 20000000 		.4byte	.LFE5-.LFB5
 375 0165 01       		.uleb128 0x1
 376 0166 9C       		.byte	0x9c
 377 0167 0E       		.uleb128 0xe
 378 0168 33000000 		.4byte	.LASF23
 379 016c 01       		.byte	0x1
 380 016d B401     		.2byte	0x1b4
 381 016f 77000000 		.4byte	0x77
 382 0173 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 16


 383 0177 10000000 		.4byte	.LFE6-.LFB6
 384 017b 01       		.uleb128 0x1
 385 017c 9C       		.byte	0x9c
 386 017d 90010000 		.4byte	0x190
 387 0181 0F       		.uleb128 0xf
 388 0182 E7000000 		.4byte	.LASF24
 389 0186 01       		.byte	0x1
 390 0187 B601     		.2byte	0x1b6
 391 0189 77000000 		.4byte	0x77
 392 018d 01       		.uleb128 0x1
 393 018e 50       		.byte	0x50
 394 018f 00       		.byte	0
 395 0190 11       		.uleb128 0x11
 396 0191 52000000 		.4byte	.LASF25
 397 0195 01       		.byte	0x1
 398 0196 CE01     		.2byte	0x1ce
 399 0198 77000000 		.4byte	0x77
 400 019c 00000000 		.4byte	.LFB7
 401 01a0 10000000 		.4byte	.LFE7-.LFB7
 402 01a4 01       		.uleb128 0x1
 403 01a5 9C       		.byte	0x9c
 404 01a6 0F       		.uleb128 0xf
 405 01a7 D9000000 		.4byte	.LASF26
 406 01ab 01       		.byte	0x1
 407 01ac D001     		.2byte	0x1d0
 408 01ae 77000000 		.4byte	0x77
 409 01b2 01       		.uleb128 0x1
 410 01b3 50       		.byte	0x50
 411 01b4 00       		.byte	0
 412 01b5 00       		.byte	0
 413              		.section	.debug_abbrev,"",%progbits
 414              	.Ldebug_abbrev0:
 415 0000 01       		.uleb128 0x1
 416 0001 11       		.uleb128 0x11
 417 0002 01       		.byte	0x1
 418 0003 25       		.uleb128 0x25
 419 0004 0E       		.uleb128 0xe
 420 0005 13       		.uleb128 0x13
 421 0006 0B       		.uleb128 0xb
 422 0007 03       		.uleb128 0x3
 423 0008 0E       		.uleb128 0xe
 424 0009 1B       		.uleb128 0x1b
 425 000a 0E       		.uleb128 0xe
 426 000b 55       		.uleb128 0x55
 427 000c 17       		.uleb128 0x17
 428 000d 11       		.uleb128 0x11
 429 000e 01       		.uleb128 0x1
 430 000f 10       		.uleb128 0x10
 431 0010 17       		.uleb128 0x17
 432 0011 00       		.byte	0
 433 0012 00       		.byte	0
 434 0013 02       		.uleb128 0x2
 435 0014 24       		.uleb128 0x24
 436 0015 00       		.byte	0
 437 0016 0B       		.uleb128 0xb
 438 0017 0B       		.uleb128 0xb
 439 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 17


 440 0019 0B       		.uleb128 0xb
 441 001a 03       		.uleb128 0x3
 442 001b 0E       		.uleb128 0xe
 443 001c 00       		.byte	0
 444 001d 00       		.byte	0
 445 001e 03       		.uleb128 0x3
 446 001f 24       		.uleb128 0x24
 447 0020 00       		.byte	0
 448 0021 0B       		.uleb128 0xb
 449 0022 0B       		.uleb128 0xb
 450 0023 3E       		.uleb128 0x3e
 451 0024 0B       		.uleb128 0xb
 452 0025 03       		.uleb128 0x3
 453 0026 08       		.uleb128 0x8
 454 0027 00       		.byte	0
 455 0028 00       		.byte	0
 456 0029 04       		.uleb128 0x4
 457 002a 16       		.uleb128 0x16
 458 002b 00       		.byte	0
 459 002c 03       		.uleb128 0x3
 460 002d 0E       		.uleb128 0xe
 461 002e 3A       		.uleb128 0x3a
 462 002f 0B       		.uleb128 0xb
 463 0030 3B       		.uleb128 0x3b
 464 0031 05       		.uleb128 0x5
 465 0032 49       		.uleb128 0x49
 466 0033 13       		.uleb128 0x13
 467 0034 00       		.byte	0
 468 0035 00       		.byte	0
 469 0036 05       		.uleb128 0x5
 470 0037 35       		.uleb128 0x35
 471 0038 00       		.byte	0
 472 0039 49       		.uleb128 0x49
 473 003a 13       		.uleb128 0x13
 474 003b 00       		.byte	0
 475 003c 00       		.byte	0
 476 003d 06       		.uleb128 0x6
 477 003e 2E       		.uleb128 0x2e
 478 003f 01       		.byte	0x1
 479 0040 3F       		.uleb128 0x3f
 480 0041 19       		.uleb128 0x19
 481 0042 03       		.uleb128 0x3
 482 0043 0E       		.uleb128 0xe
 483 0044 3A       		.uleb128 0x3a
 484 0045 0B       		.uleb128 0xb
 485 0046 3B       		.uleb128 0x3b
 486 0047 0B       		.uleb128 0xb
 487 0048 27       		.uleb128 0x27
 488 0049 19       		.uleb128 0x19
 489 004a 11       		.uleb128 0x11
 490 004b 01       		.uleb128 0x1
 491 004c 12       		.uleb128 0x12
 492 004d 06       		.uleb128 0x6
 493 004e 40       		.uleb128 0x40
 494 004f 18       		.uleb128 0x18
 495 0050 9742     		.uleb128 0x2117
 496 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 18


 497 0053 01       		.uleb128 0x1
 498 0054 13       		.uleb128 0x13
 499 0055 00       		.byte	0
 500 0056 00       		.byte	0
 501 0057 07       		.uleb128 0x7
 502 0058 05       		.uleb128 0x5
 503 0059 00       		.byte	0
 504 005a 03       		.uleb128 0x3
 505 005b 0E       		.uleb128 0xe
 506 005c 3A       		.uleb128 0x3a
 507 005d 0B       		.uleb128 0xb
 508 005e 3B       		.uleb128 0x3b
 509 005f 0B       		.uleb128 0xb
 510 0060 49       		.uleb128 0x49
 511 0061 13       		.uleb128 0x13
 512 0062 02       		.uleb128 0x2
 513 0063 18       		.uleb128 0x18
 514 0064 00       		.byte	0
 515 0065 00       		.byte	0
 516 0066 08       		.uleb128 0x8
 517 0067 2E       		.uleb128 0x2e
 518 0068 01       		.byte	0x1
 519 0069 3F       		.uleb128 0x3f
 520 006a 19       		.uleb128 0x19
 521 006b 03       		.uleb128 0x3
 522 006c 0E       		.uleb128 0xe
 523 006d 3A       		.uleb128 0x3a
 524 006e 0B       		.uleb128 0xb
 525 006f 3B       		.uleb128 0x3b
 526 0070 05       		.uleb128 0x5
 527 0071 27       		.uleb128 0x27
 528 0072 19       		.uleb128 0x19
 529 0073 11       		.uleb128 0x11
 530 0074 01       		.uleb128 0x1
 531 0075 12       		.uleb128 0x12
 532 0076 06       		.uleb128 0x6
 533 0077 40       		.uleb128 0x40
 534 0078 18       		.uleb128 0x18
 535 0079 9742     		.uleb128 0x2117
 536 007b 19       		.uleb128 0x19
 537 007c 01       		.uleb128 0x1
 538 007d 13       		.uleb128 0x13
 539 007e 00       		.byte	0
 540 007f 00       		.byte	0
 541 0080 09       		.uleb128 0x9
 542 0081 05       		.uleb128 0x5
 543 0082 00       		.byte	0
 544 0083 03       		.uleb128 0x3
 545 0084 0E       		.uleb128 0xe
 546 0085 3A       		.uleb128 0x3a
 547 0086 0B       		.uleb128 0xb
 548 0087 3B       		.uleb128 0x3b
 549 0088 05       		.uleb128 0x5
 550 0089 49       		.uleb128 0x49
 551 008a 13       		.uleb128 0x13
 552 008b 02       		.uleb128 0x2
 553 008c 17       		.uleb128 0x17
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 19


 554 008d 00       		.byte	0
 555 008e 00       		.byte	0
 556 008f 0A       		.uleb128 0xa
 557 0090 34       		.uleb128 0x34
 558 0091 00       		.byte	0
 559 0092 03       		.uleb128 0x3
 560 0093 08       		.uleb128 0x8
 561 0094 3A       		.uleb128 0x3a
 562 0095 0B       		.uleb128 0xb
 563 0096 3B       		.uleb128 0x3b
 564 0097 05       		.uleb128 0x5
 565 0098 49       		.uleb128 0x49
 566 0099 13       		.uleb128 0x13
 567 009a 02       		.uleb128 0x2
 568 009b 17       		.uleb128 0x17
 569 009c 00       		.byte	0
 570 009d 00       		.byte	0
 571 009e 0B       		.uleb128 0xb
 572 009f 898201   		.uleb128 0x4109
 573 00a2 00       		.byte	0
 574 00a3 11       		.uleb128 0x11
 575 00a4 01       		.uleb128 0x1
 576 00a5 31       		.uleb128 0x31
 577 00a6 13       		.uleb128 0x13
 578 00a7 00       		.byte	0
 579 00a8 00       		.byte	0
 580 00a9 0C       		.uleb128 0xc
 581 00aa 0F       		.uleb128 0xf
 582 00ab 00       		.byte	0
 583 00ac 0B       		.uleb128 0xb
 584 00ad 0B       		.uleb128 0xb
 585 00ae 49       		.uleb128 0x49
 586 00af 13       		.uleb128 0x13
 587 00b0 00       		.byte	0
 588 00b1 00       		.byte	0
 589 00b2 0D       		.uleb128 0xd
 590 00b3 26       		.uleb128 0x26
 591 00b4 00       		.byte	0
 592 00b5 49       		.uleb128 0x49
 593 00b6 13       		.uleb128 0x13
 594 00b7 00       		.byte	0
 595 00b8 00       		.byte	0
 596 00b9 0E       		.uleb128 0xe
 597 00ba 2E       		.uleb128 0x2e
 598 00bb 01       		.byte	0x1
 599 00bc 3F       		.uleb128 0x3f
 600 00bd 19       		.uleb128 0x19
 601 00be 03       		.uleb128 0x3
 602 00bf 0E       		.uleb128 0xe
 603 00c0 3A       		.uleb128 0x3a
 604 00c1 0B       		.uleb128 0xb
 605 00c2 3B       		.uleb128 0x3b
 606 00c3 05       		.uleb128 0x5
 607 00c4 27       		.uleb128 0x27
 608 00c5 19       		.uleb128 0x19
 609 00c6 49       		.uleb128 0x49
 610 00c7 13       		.uleb128 0x13
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 20


 611 00c8 11       		.uleb128 0x11
 612 00c9 01       		.uleb128 0x1
 613 00ca 12       		.uleb128 0x12
 614 00cb 06       		.uleb128 0x6
 615 00cc 40       		.uleb128 0x40
 616 00cd 18       		.uleb128 0x18
 617 00ce 9742     		.uleb128 0x2117
 618 00d0 19       		.uleb128 0x19
 619 00d1 01       		.uleb128 0x1
 620 00d2 13       		.uleb128 0x13
 621 00d3 00       		.byte	0
 622 00d4 00       		.byte	0
 623 00d5 0F       		.uleb128 0xf
 624 00d6 34       		.uleb128 0x34
 625 00d7 00       		.byte	0
 626 00d8 03       		.uleb128 0x3
 627 00d9 0E       		.uleb128 0xe
 628 00da 3A       		.uleb128 0x3a
 629 00db 0B       		.uleb128 0xb
 630 00dc 3B       		.uleb128 0x3b
 631 00dd 05       		.uleb128 0x5
 632 00de 49       		.uleb128 0x49
 633 00df 13       		.uleb128 0x13
 634 00e0 02       		.uleb128 0x2
 635 00e1 18       		.uleb128 0x18
 636 00e2 00       		.byte	0
 637 00e3 00       		.byte	0
 638 00e4 10       		.uleb128 0x10
 639 00e5 2E       		.uleb128 0x2e
 640 00e6 00       		.byte	0
 641 00e7 3F       		.uleb128 0x3f
 642 00e8 19       		.uleb128 0x19
 643 00e9 03       		.uleb128 0x3
 644 00ea 0E       		.uleb128 0xe
 645 00eb 3A       		.uleb128 0x3a
 646 00ec 0B       		.uleb128 0xb
 647 00ed 3B       		.uleb128 0x3b
 648 00ee 05       		.uleb128 0x5
 649 00ef 27       		.uleb128 0x27
 650 00f0 19       		.uleb128 0x19
 651 00f1 11       		.uleb128 0x11
 652 00f2 01       		.uleb128 0x1
 653 00f3 12       		.uleb128 0x12
 654 00f4 06       		.uleb128 0x6
 655 00f5 40       		.uleb128 0x40
 656 00f6 18       		.uleb128 0x18
 657 00f7 9742     		.uleb128 0x2117
 658 00f9 19       		.uleb128 0x19
 659 00fa 00       		.byte	0
 660 00fb 00       		.byte	0
 661 00fc 11       		.uleb128 0x11
 662 00fd 2E       		.uleb128 0x2e
 663 00fe 01       		.byte	0x1
 664 00ff 3F       		.uleb128 0x3f
 665 0100 19       		.uleb128 0x19
 666 0101 03       		.uleb128 0x3
 667 0102 0E       		.uleb128 0xe
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 21


 668 0103 3A       		.uleb128 0x3a
 669 0104 0B       		.uleb128 0xb
 670 0105 3B       		.uleb128 0x3b
 671 0106 05       		.uleb128 0x5
 672 0107 27       		.uleb128 0x27
 673 0108 19       		.uleb128 0x19
 674 0109 49       		.uleb128 0x49
 675 010a 13       		.uleb128 0x13
 676 010b 11       		.uleb128 0x11
 677 010c 01       		.uleb128 0x1
 678 010d 12       		.uleb128 0x12
 679 010e 06       		.uleb128 0x6
 680 010f 40       		.uleb128 0x40
 681 0110 18       		.uleb128 0x18
 682 0111 9742     		.uleb128 0x2117
 683 0113 19       		.uleb128 0x19
 684 0114 00       		.byte	0
 685 0115 00       		.byte	0
 686 0116 00       		.byte	0
 687              		.section	.debug_loc,"",%progbits
 688              	.Ldebug_loc0:
 689              	.LLST0:
 690 0000 00000000 		.4byte	.LVL1
 691 0004 0A000000 		.4byte	.LVL3
 692 0008 0100     		.2byte	0x1
 693 000a 50       		.byte	0x50
 694 000b 0A000000 		.4byte	.LVL3
 695 000f 16000000 		.4byte	.LVL8
 696 0013 0100     		.2byte	0x1
 697 0015 56       		.byte	0x56
 698 0016 16000000 		.4byte	.LVL8
 699 001a 18000000 		.4byte	.LFE3
 700 001e 0400     		.2byte	0x4
 701 0020 F3       		.byte	0xf3
 702 0021 01       		.uleb128 0x1
 703 0022 50       		.byte	0x50
 704 0023 9F       		.byte	0x9f
 705 0024 00000000 		.4byte	0
 706 0028 00000000 		.4byte	0
 707              	.LLST1:
 708 002c 00000000 		.4byte	.LVL1
 709 0030 0A000000 		.4byte	.LVL3
 710 0034 0100     		.2byte	0x1
 711 0036 51       		.byte	0x51
 712 0037 0A000000 		.4byte	.LVL3
 713 003b 16000000 		.4byte	.LVL7
 714 003f 0100     		.2byte	0x1
 715 0041 55       		.byte	0x55
 716 0042 16000000 		.4byte	.LVL7
 717 0046 18000000 		.4byte	.LFE3
 718 004a 0400     		.2byte	0x4
 719 004c F3       		.byte	0xf3
 720 004d 01       		.uleb128 0x1
 721 004e 51       		.byte	0x51
 722 004f 9F       		.byte	0x9f
 723 0050 00000000 		.4byte	0
 724 0054 00000000 		.4byte	0
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 22


 725              	.LLST2:
 726 0058 06000000 		.4byte	.LVL2
 727 005c 0A000000 		.4byte	.LVL3
 728 0060 0200     		.2byte	0x2
 729 0062 30       		.byte	0x30
 730 0063 9F       		.byte	0x9f
 731 0064 0A000000 		.4byte	.LVL3
 732 0068 16000000 		.4byte	.LVL6
 733 006c 0100     		.2byte	0x1
 734 006e 54       		.byte	0x54
 735 006f 00000000 		.4byte	0
 736 0073 00000000 		.4byte	0
 737              		.section	.debug_aranges,"",%progbits
 738 0000 44000000 		.4byte	0x44
 739 0004 0200     		.2byte	0x2
 740 0006 00000000 		.4byte	.Ldebug_info0
 741 000a 04       		.byte	0x4
 742 000b 00       		.byte	0
 743 000c 0000     		.2byte	0
 744 000e 0000     		.2byte	0
 745 0010 00000000 		.4byte	.LFB2
 746 0014 1C000000 		.4byte	.LFE2-.LFB2
 747 0018 00000000 		.4byte	.LFB3
 748 001c 18000000 		.4byte	.LFE3-.LFB3
 749 0020 00000000 		.4byte	.LFB4
 750 0024 10000000 		.4byte	.LFE4-.LFB4
 751 0028 00000000 		.4byte	.LFB5
 752 002c 20000000 		.4byte	.LFE5-.LFB5
 753 0030 00000000 		.4byte	.LFB6
 754 0034 10000000 		.4byte	.LFE6-.LFB6
 755 0038 00000000 		.4byte	.LFB7
 756 003c 10000000 		.4byte	.LFE7-.LFB7
 757 0040 00000000 		.4byte	0
 758 0044 00000000 		.4byte	0
 759              		.section	.debug_ranges,"",%progbits
 760              	.Ldebug_ranges0:
 761 0000 00000000 		.4byte	.LFB2
 762 0004 1C000000 		.4byte	.LFE2
 763 0008 00000000 		.4byte	.LFB3
 764 000c 18000000 		.4byte	.LFE3
 765 0010 00000000 		.4byte	.LFB4
 766 0014 10000000 		.4byte	.LFE4
 767 0018 00000000 		.4byte	.LFB5
 768 001c 20000000 		.4byte	.LFE5
 769 0020 00000000 		.4byte	.LFB6
 770 0024 10000000 		.4byte	.LFE6
 771 0028 00000000 		.4byte	.LFB7
 772 002c 10000000 		.4byte	.LFE7
 773 0030 00000000 		.4byte	0
 774 0034 00000000 		.4byte	0
 775              		.section	.debug_line,"",%progbits
 776              	.Ldebug_line0:
 777 0000 F3000000 		.section	.debug_str,"MS",%progbits,1
 777      02006300 
 777      00000201 
 777      FB0E0D00 
 777      01010101 
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 23


 778              	.LASF14:
 779 0000 72656733 		.ascii	"reg32\000"
 779      3200
 780              	.LASF20:
 781 0006 636F756E 		.ascii	"count\000"
 781      7400
 782              	.LASF18:
 783 000c 74784461 		.ascii	"txData\000"
 783      746100
 784              	.LASF3:
 785 0013 73686F72 		.ascii	"short unsigned int\000"
 785      7420756E 
 785      7369676E 
 785      65642069 
 785      6E7400
 786              	.LASF8:
 787 0026 756E7369 		.ascii	"unsigned int\000"
 787      676E6564 
 787      20696E74 
 787      00
 788              	.LASF23:
 789 0033 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 789      5F537069 
 789      55617274 
 789      44697361 
 789      626C6549 
 790              	.LASF11:
 791 004c 666C6F61 		.ascii	"float\000"
 791      7400
 792              	.LASF25:
 793 0052 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 793      5F537069 
 793      55617274 
 793      44697361 
 793      626C6549 
 794              	.LASF21:
 795 006b 73697A65 		.ascii	"size\000"
 795      00
 796              	.LASF5:
 797 0070 6C6F6E67 		.ascii	"long unsigned int\000"
 797      20756E73 
 797      69676E65 
 797      6420696E 
 797      7400
 798              	.LASF9:
 799 0082 75696E74 		.ascii	"uint8\000"
 799      3800
 800              	.LASF19:
 801 0088 77724275 		.ascii	"wrBuf\000"
 801      6600
 802              	.LASF1:
 803 008e 756E7369 		.ascii	"unsigned char\000"
 803      676E6564 
 803      20636861 
 803      7200
 804              	.LASF12:
 805 009c 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 24


 805      6C6500
 806              	.LASF10:
 807 00a3 75696E74 		.ascii	"uint32\000"
 807      333200
 808              	.LASF30:
 809 00aa 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 809      5F537069 
 809      55617274 
 809      436C6561 
 809      72547842 
 810              	.LASF17:
 811 00c4 55415254 		.ascii	"UART_SpiUartPutArray\000"
 811      5F537069 
 811      55617274 
 811      50757441 
 811      72726179 
 812              	.LASF26:
 813 00d9 696E7453 		.ascii	"intSourceMask\000"
 813      6F757263 
 813      654D6173 
 813      6B00
 814              	.LASF24:
 815 00e7 696E7453 		.ascii	"intSource\000"
 815      6F757263 
 815      6500
 816              	.LASF7:
 817 00f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 817      206C6F6E 
 817      6720756E 
 817      7369676E 
 817      65642069 
 818              	.LASF29:
 819 0108 433A5C50 		.ascii	"C:\\Program Files (x86)\\Cypress\\CY8CKIT-046 PSoC "
 819      726F6772 
 819      616D2046 
 819      696C6573 
 819      20287838 
 820 0138 34204C2D 		.ascii	"4 L-Series Pioneer Kit\\1.0\\Firmware\\PSoC 4200L\\"
 820      53657269 
 820      65732050 
 820      696F6E65 
 820      6572204B 
 821 0167 43593843 		.ascii	"CY8CKIT_046_USB_Audio\\CY8CKIT_046_USB_Audio.cydsn\000"
 821      4B49545F 
 821      3034365F 
 821      5553425F 
 821      41756469 
 822              	.LASF15:
 823 0199 73697A65 		.ascii	"sizetype\000"
 823      74797065 
 823      00
 824              	.LASF6:
 825 01a2 6C6F6E67 		.ascii	"long long int\000"
 825      206C6F6E 
 825      6720696E 
 825      7400
 826              	.LASF16:
ARM GAS  C:\Users\Terence\AppData\Local\Temp\cclxymWc.s 			page 25


 827 01b0 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 827      5F537069 
 827      55617274 
 827      57726974 
 827      65547844 
 828              	.LASF22:
 829 01c8 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 829      5F537069 
 829      55617274 
 829      47657454 
 829      78427566 
 830              	.LASF27:
 831 01e4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 831      4320342E 
 831      392E3320 
 831      32303135 
 831      30333033 
 832 0217 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 832      20726576 
 832      6973696F 
 832      6E203232 
 832      31323230 
 833 024a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 833      66756E63 
 833      74696F6E 
 833      2D736563 
 833      74696F6E 
 834              	.LASF2:
 835 0272 73686F72 		.ascii	"short int\000"
 835      7420696E 
 835      7400
 836              	.LASF28:
 837 027c 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 837      6E657261 
 837      7465645F 
 837      536F7572 
 837      63655C50 
 838              	.LASF4:
 839 02a5 6C6F6E67 		.ascii	"long int\000"
 839      20696E74 
 839      00
 840              	.LASF13:
 841 02ae 63686172 		.ascii	"char\000"
 841      00
 842              	.LASF0:
 843 02b3 7369676E 		.ascii	"signed char\000"
 843      65642063 
 843      68617200 
 844              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
